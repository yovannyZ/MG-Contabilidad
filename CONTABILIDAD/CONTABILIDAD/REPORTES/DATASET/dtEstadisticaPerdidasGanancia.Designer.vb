'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.8009
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dtEstadisticaPerdidasGanancia"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dtEstadisticaPerdidasGanancia
    Inherits Global.System.Data.DataSet
    
    Private tableREPORTE_PERDIDAS_GANANCIAS As REPORTE_PERDIDAS_GANANCIASDataTable
    
    Private tableREPORTE_EPP_UNEGOCIO As REPORTE_EPP_UNEGOCIODataTable
    
    Private tableNEGOCIO As NEGOCIODataTable
    
    Private tableREPORTE_TRABAJADORES As REPORTE_TRABAJADORESDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("REPORTE_PERDIDAS_GANANCIAS")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_PERDIDAS_GANANCIASDataTable(ds.Tables("REPORTE_PERDIDAS_GANANCIAS")))
            End If
            If (Not (ds.Tables("REPORTE_EPP_UNEGOCIO")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_EPP_UNEGOCIODataTable(ds.Tables("REPORTE_EPP_UNEGOCIO")))
            End If
            If (Not (ds.Tables("NEGOCIO")) Is Nothing) Then
                MyBase.Tables.Add(New NEGOCIODataTable(ds.Tables("NEGOCIO")))
            End If
            If (Not (ds.Tables("REPORTE_TRABAJADORES")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_TRABAJADORESDataTable(ds.Tables("REPORTE_TRABAJADORES")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_PERDIDAS_GANANCIAS() As REPORTE_PERDIDAS_GANANCIASDataTable
        Get
            Return Me.tableREPORTE_PERDIDAS_GANANCIAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_EPP_UNEGOCIO() As REPORTE_EPP_UNEGOCIODataTable
        Get
            Return Me.tableREPORTE_EPP_UNEGOCIO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NEGOCIO() As NEGOCIODataTable
        Get
            Return Me.tableNEGOCIO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_TRABAJADORES() As REPORTE_TRABAJADORESDataTable
        Get
            Return Me.tableREPORTE_TRABAJADORES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dtEstadisticaPerdidasGanancia = CType(MyBase.Clone,dtEstadisticaPerdidasGanancia)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("REPORTE_PERDIDAS_GANANCIAS")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_PERDIDAS_GANANCIASDataTable(ds.Tables("REPORTE_PERDIDAS_GANANCIAS")))
            End If
            If (Not (ds.Tables("REPORTE_EPP_UNEGOCIO")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_EPP_UNEGOCIODataTable(ds.Tables("REPORTE_EPP_UNEGOCIO")))
            End If
            If (Not (ds.Tables("NEGOCIO")) Is Nothing) Then
                MyBase.Tables.Add(New NEGOCIODataTable(ds.Tables("NEGOCIO")))
            End If
            If (Not (ds.Tables("REPORTE_TRABAJADORES")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_TRABAJADORESDataTable(ds.Tables("REPORTE_TRABAJADORES")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableREPORTE_PERDIDAS_GANANCIAS = CType(MyBase.Tables("REPORTE_PERDIDAS_GANANCIAS"),REPORTE_PERDIDAS_GANANCIASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_PERDIDAS_GANANCIAS) Is Nothing) Then
                Me.tableREPORTE_PERDIDAS_GANANCIAS.InitVars
            End If
        End If
        Me.tableREPORTE_EPP_UNEGOCIO = CType(MyBase.Tables("REPORTE_EPP_UNEGOCIO"),REPORTE_EPP_UNEGOCIODataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_EPP_UNEGOCIO) Is Nothing) Then
                Me.tableREPORTE_EPP_UNEGOCIO.InitVars
            End If
        End If
        Me.tableNEGOCIO = CType(MyBase.Tables("NEGOCIO"),NEGOCIODataTable)
        If (initTable = true) Then
            If (Not (Me.tableNEGOCIO) Is Nothing) Then
                Me.tableNEGOCIO.InitVars
            End If
        End If
        Me.tableREPORTE_TRABAJADORES = CType(MyBase.Tables("REPORTE_TRABAJADORES"),REPORTE_TRABAJADORESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_TRABAJADORES) Is Nothing) Then
                Me.tableREPORTE_TRABAJADORES.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "dtEstadisticaPerdidasGanancia"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dtEstadisticaPerdidasGanancia.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableREPORTE_PERDIDAS_GANANCIAS = New REPORTE_PERDIDAS_GANANCIASDataTable
        MyBase.Tables.Add(Me.tableREPORTE_PERDIDAS_GANANCIAS)
        Me.tableREPORTE_EPP_UNEGOCIO = New REPORTE_EPP_UNEGOCIODataTable
        MyBase.Tables.Add(Me.tableREPORTE_EPP_UNEGOCIO)
        Me.tableNEGOCIO = New NEGOCIODataTable
        MyBase.Tables.Add(Me.tableNEGOCIO)
        Me.tableREPORTE_TRABAJADORES = New REPORTE_TRABAJADORESDataTable
        MyBase.Tables.Add(Me.tableREPORTE_TRABAJADORES)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_PERDIDAS_GANANCIAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_EPP_UNEGOCIO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeNEGOCIO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_TRABAJADORES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dtEstadisticaPerdidasGanancia = New dtEstadisticaPerdidasGanancia
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub REPORTE_PERDIDAS_GANANCIASRowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_PERDIDAS_GANANCIASRowChangeEvent)
    
    Public Delegate Sub REPORTE_EPP_UNEGOCIORowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_EPP_UNEGOCIORowChangeEvent)
    
    Public Delegate Sub NEGOCIORowChangeEventHandler(ByVal sender As Object, ByVal e As NEGOCIORowChangeEvent)
    
    Public Delegate Sub REPORTE_TRABAJADORESRowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_TRABAJADORESRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_PERDIDAS_GANANCIASDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columnDESC_CUENTA As Global.System.Data.DataColumn
        
        Private columnCOD_NEGOCIO As Global.System.Data.DataColumn
        
        Private columnDESC_NEGOCIO As Global.System.Data.DataColumn
        
        Private columnCOD_CC As Global.System.Data.DataColumn
        
        Private columnDESC_CCOSTO As Global.System.Data.DataColumn
        
        Private columnCOD_ZONA As Global.System.Data.DataColumn
        
        Private columnDESC_ZONA As Global.System.Data.DataColumn
        
        Private columnSALDO1 As Global.System.Data.DataColumn
        
        Private columnSALDO2 As Global.System.Data.DataColumn
        
        Private columnSALDO3 As Global.System.Data.DataColumn
        
        Private columnSALDO4 As Global.System.Data.DataColumn
        
        Private columnSALDO5 As Global.System.Data.DataColumn
        
        Private columnSALDO6 As Global.System.Data.DataColumn
        
        Private columnSALDO7 As Global.System.Data.DataColumn
        
        Private columnSALDO8 As Global.System.Data.DataColumn
        
        Private columnSALDO9 As Global.System.Data.DataColumn
        
        Private columnSALDO10 As Global.System.Data.DataColumn
        
        Private columnSALDO11 As Global.System.Data.DataColumn
        
        Private columnSALDO12 As Global.System.Data.DataColumn
        
        Private columnCANTRAB01 As Global.System.Data.DataColumn
        
        Private columnCANTRAB02 As Global.System.Data.DataColumn
        
        Private columnCANTRAB03 As Global.System.Data.DataColumn
        
        Private columnCANTRAB04 As Global.System.Data.DataColumn
        
        Private columnCANTRAB05 As Global.System.Data.DataColumn
        
        Private columnCANTRAB06 As Global.System.Data.DataColumn
        
        Private columnCANTRAB07 As Global.System.Data.DataColumn
        
        Private columnCANTRAB08 As Global.System.Data.DataColumn
        
        Private columnCANTRAB09 As Global.System.Data.DataColumn
        
        Private columnCANTRAB10 As Global.System.Data.DataColumn
        
        Private columnCANTRAB11 As Global.System.Data.DataColumn
        
        Private columnCANTRAB12 As Global.System.Data.DataColumn
        
        Private columnTOTALIMP As Global.System.Data.DataColumn
        
        Private columnTOTALTRA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_PERDIDAS_GANANCIAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_NEGOCIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_NEGOCIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_NEGOCIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_NEGOCIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CCOSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CCOSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_ZONAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_ZONA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_ZONAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_ZONA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOTALIMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALIMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOTALTRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALTRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_PERDIDAS_GANANCIASRow
            Get
                Return CType(Me.Rows(index),REPORTE_PERDIDAS_GANANCIASRow)
            End Get
        End Property
        
        Public Event REPORTE_PERDIDAS_GANANCIASRowChanging As REPORTE_PERDIDAS_GANANCIASRowChangeEventHandler
        
        Public Event REPORTE_PERDIDAS_GANANCIASRowChanged As REPORTE_PERDIDAS_GANANCIASRowChangeEventHandler
        
        Public Event REPORTE_PERDIDAS_GANANCIASRowDeleting As REPORTE_PERDIDAS_GANANCIASRowChangeEventHandler
        
        Public Event REPORTE_PERDIDAS_GANANCIASRowDeleted As REPORTE_PERDIDAS_GANANCIASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_PERDIDAS_GANANCIASRow(ByVal row As REPORTE_PERDIDAS_GANANCIASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_PERDIDAS_GANANCIASRow( _
                    ByVal COD_CUENTA As String,  _
                    ByVal DESC_CUENTA As String,  _
                    ByVal COD_NEGOCIO As String,  _
                    ByVal DESC_NEGOCIO As String,  _
                    ByVal COD_CC As String,  _
                    ByVal DESC_CCOSTO As String,  _
                    ByVal COD_ZONA As String,  _
                    ByVal DESC_ZONA As String,  _
                    ByVal SALDO1 As Decimal,  _
                    ByVal SALDO2 As Decimal,  _
                    ByVal SALDO3 As Decimal,  _
                    ByVal SALDO4 As Decimal,  _
                    ByVal SALDO5 As Decimal,  _
                    ByVal SALDO6 As Decimal,  _
                    ByVal SALDO7 As Decimal,  _
                    ByVal SALDO8 As Decimal,  _
                    ByVal SALDO9 As Decimal,  _
                    ByVal SALDO10 As Decimal,  _
                    ByVal SALDO11 As Decimal,  _
                    ByVal SALDO12 As Decimal,  _
                    ByVal CANTRAB01 As Integer,  _
                    ByVal CANTRAB02 As Integer,  _
                    ByVal CANTRAB03 As Integer,  _
                    ByVal CANTRAB04 As Integer,  _
                    ByVal CANTRAB05 As Integer,  _
                    ByVal CANTRAB06 As Integer,  _
                    ByVal CANTRAB07 As Integer,  _
                    ByVal CANTRAB08 As Integer,  _
                    ByVal CANTRAB09 As Integer,  _
                    ByVal CANTRAB10 As Integer,  _
                    ByVal CANTRAB11 As Integer,  _
                    ByVal CANTRAB12 As Integer,  _
                    ByVal TOTALIMP As Decimal,  _
                    ByVal TOTALTRA As Integer) As REPORTE_PERDIDAS_GANANCIASRow
            Dim rowREPORTE_PERDIDAS_GANANCIASRow As REPORTE_PERDIDAS_GANANCIASRow = CType(Me.NewRow,REPORTE_PERDIDAS_GANANCIASRow)
            Dim columnValuesArray() As Object = New Object() {COD_CUENTA, DESC_CUENTA, COD_NEGOCIO, DESC_NEGOCIO, COD_CC, DESC_CCOSTO, COD_ZONA, DESC_ZONA, SALDO1, SALDO2, SALDO3, SALDO4, SALDO5, SALDO6, SALDO7, SALDO8, SALDO9, SALDO10, SALDO11, SALDO12, CANTRAB01, CANTRAB02, CANTRAB03, CANTRAB04, CANTRAB05, CANTRAB06, CANTRAB07, CANTRAB08, CANTRAB09, CANTRAB10, CANTRAB11, CANTRAB12, TOTALIMP, TOTALTRA}
            rowREPORTE_PERDIDAS_GANANCIASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_PERDIDAS_GANANCIASRow)
            Return rowREPORTE_PERDIDAS_GANANCIASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_PERDIDAS_GANANCIASDataTable = CType(MyBase.Clone,REPORTE_PERDIDAS_GANANCIASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_PERDIDAS_GANANCIASDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columnDESC_CUENTA = MyBase.Columns("DESC_CUENTA")
            Me.columnCOD_NEGOCIO = MyBase.Columns("COD_NEGOCIO")
            Me.columnDESC_NEGOCIO = MyBase.Columns("DESC_NEGOCIO")
            Me.columnCOD_CC = MyBase.Columns("COD_CC")
            Me.columnDESC_CCOSTO = MyBase.Columns("DESC_CCOSTO")
            Me.columnCOD_ZONA = MyBase.Columns("COD_ZONA")
            Me.columnDESC_ZONA = MyBase.Columns("DESC_ZONA")
            Me.columnSALDO1 = MyBase.Columns("SALDO1")
            Me.columnSALDO2 = MyBase.Columns("SALDO2")
            Me.columnSALDO3 = MyBase.Columns("SALDO3")
            Me.columnSALDO4 = MyBase.Columns("SALDO4")
            Me.columnSALDO5 = MyBase.Columns("SALDO5")
            Me.columnSALDO6 = MyBase.Columns("SALDO6")
            Me.columnSALDO7 = MyBase.Columns("SALDO7")
            Me.columnSALDO8 = MyBase.Columns("SALDO8")
            Me.columnSALDO9 = MyBase.Columns("SALDO9")
            Me.columnSALDO10 = MyBase.Columns("SALDO10")
            Me.columnSALDO11 = MyBase.Columns("SALDO11")
            Me.columnSALDO12 = MyBase.Columns("SALDO12")
            Me.columnCANTRAB01 = MyBase.Columns("CANTRAB01")
            Me.columnCANTRAB02 = MyBase.Columns("CANTRAB02")
            Me.columnCANTRAB03 = MyBase.Columns("CANTRAB03")
            Me.columnCANTRAB04 = MyBase.Columns("CANTRAB04")
            Me.columnCANTRAB05 = MyBase.Columns("CANTRAB05")
            Me.columnCANTRAB06 = MyBase.Columns("CANTRAB06")
            Me.columnCANTRAB07 = MyBase.Columns("CANTRAB07")
            Me.columnCANTRAB08 = MyBase.Columns("CANTRAB08")
            Me.columnCANTRAB09 = MyBase.Columns("CANTRAB09")
            Me.columnCANTRAB10 = MyBase.Columns("CANTRAB10")
            Me.columnCANTRAB11 = MyBase.Columns("CANTRAB11")
            Me.columnCANTRAB12 = MyBase.Columns("CANTRAB12")
            Me.columnTOTALIMP = MyBase.Columns("TOTALIMP")
            Me.columnTOTALTRA = MyBase.Columns("TOTALTRA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columnDESC_CUENTA = New Global.System.Data.DataColumn("DESC_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CUENTA)
            Me.columnCOD_NEGOCIO = New Global.System.Data.DataColumn("COD_NEGOCIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_NEGOCIO)
            Me.columnDESC_NEGOCIO = New Global.System.Data.DataColumn("DESC_NEGOCIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_NEGOCIO)
            Me.columnCOD_CC = New Global.System.Data.DataColumn("COD_CC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CC)
            Me.columnDESC_CCOSTO = New Global.System.Data.DataColumn("DESC_CCOSTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CCOSTO)
            Me.columnCOD_ZONA = New Global.System.Data.DataColumn("COD_ZONA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_ZONA)
            Me.columnDESC_ZONA = New Global.System.Data.DataColumn("DESC_ZONA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_ZONA)
            Me.columnSALDO1 = New Global.System.Data.DataColumn("SALDO1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO1)
            Me.columnSALDO2 = New Global.System.Data.DataColumn("SALDO2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO2)
            Me.columnSALDO3 = New Global.System.Data.DataColumn("SALDO3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO3)
            Me.columnSALDO4 = New Global.System.Data.DataColumn("SALDO4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO4)
            Me.columnSALDO5 = New Global.System.Data.DataColumn("SALDO5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO5)
            Me.columnSALDO6 = New Global.System.Data.DataColumn("SALDO6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO6)
            Me.columnSALDO7 = New Global.System.Data.DataColumn("SALDO7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO7)
            Me.columnSALDO8 = New Global.System.Data.DataColumn("SALDO8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO8)
            Me.columnSALDO9 = New Global.System.Data.DataColumn("SALDO9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO9)
            Me.columnSALDO10 = New Global.System.Data.DataColumn("SALDO10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO10)
            Me.columnSALDO11 = New Global.System.Data.DataColumn("SALDO11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO11)
            Me.columnSALDO12 = New Global.System.Data.DataColumn("SALDO12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO12)
            Me.columnCANTRAB01 = New Global.System.Data.DataColumn("CANTRAB01", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB01)
            Me.columnCANTRAB02 = New Global.System.Data.DataColumn("CANTRAB02", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB02)
            Me.columnCANTRAB03 = New Global.System.Data.DataColumn("CANTRAB03", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB03)
            Me.columnCANTRAB04 = New Global.System.Data.DataColumn("CANTRAB04", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB04)
            Me.columnCANTRAB05 = New Global.System.Data.DataColumn("CANTRAB05", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB05)
            Me.columnCANTRAB06 = New Global.System.Data.DataColumn("CANTRAB06", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB06)
            Me.columnCANTRAB07 = New Global.System.Data.DataColumn("CANTRAB07", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB07)
            Me.columnCANTRAB08 = New Global.System.Data.DataColumn("CANTRAB08", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB08)
            Me.columnCANTRAB09 = New Global.System.Data.DataColumn("CANTRAB09", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB09)
            Me.columnCANTRAB10 = New Global.System.Data.DataColumn("CANTRAB10", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB10)
            Me.columnCANTRAB11 = New Global.System.Data.DataColumn("CANTRAB11", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB11)
            Me.columnCANTRAB12 = New Global.System.Data.DataColumn("CANTRAB12", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB12)
            Me.columnTOTALIMP = New Global.System.Data.DataColumn("TOTALIMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALIMP)
            Me.columnTOTALTRA = New Global.System.Data.DataColumn("TOTALTRA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALTRA)
            Me.columnCOD_CUENTA.Caption = "NIVEL1"
            Me.columnDESC_CUENTA.Caption = "NIVEL2"
            Me.columnCOD_NEGOCIO.Caption = "NIVEL3"
            Me.columnDESC_NEGOCIO.Caption = "NIVEL4"
            Me.columnCOD_CC.Caption = "SALDO0"
            Me.columnDESC_CCOSTO.Caption = "SALDO1"
            Me.columnCOD_ZONA.Caption = "SALDO2"
            Me.columnDESC_ZONA.Caption = "SALDO3"
            Me.columnSALDO1.Caption = "SALDO4"
            Me.columnSALDO2.Caption = "SALDO5"
            Me.columnSALDO3.Caption = "SALDO6"
            Me.columnSALDO4.Caption = "SALDO7"
            Me.columnSALDO5.Caption = "SALDO8"
            Me.columnSALDO6.Caption = "SALDO9"
            Me.columnSALDO7.Caption = "SALDO10"
            Me.columnSALDO8.Caption = "SALDO11"
            Me.columnSALDO9.Caption = "SALDO12"
            Me.columnSALDO10.Caption = "SALDO13"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_PERDIDAS_GANANCIASRow() As REPORTE_PERDIDAS_GANANCIASRow
            Return CType(Me.NewRow,REPORTE_PERDIDAS_GANANCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_PERDIDAS_GANANCIASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_PERDIDAS_GANANCIASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_PERDIDAS_GANANCIASRowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_PERDIDAS_GANANCIASRowChanged(Me, New REPORTE_PERDIDAS_GANANCIASRowChangeEvent(CType(e.Row,REPORTE_PERDIDAS_GANANCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_PERDIDAS_GANANCIASRowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_PERDIDAS_GANANCIASRowChanging(Me, New REPORTE_PERDIDAS_GANANCIASRowChangeEvent(CType(e.Row,REPORTE_PERDIDAS_GANANCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_PERDIDAS_GANANCIASRowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_PERDIDAS_GANANCIASRowDeleted(Me, New REPORTE_PERDIDAS_GANANCIASRowChangeEvent(CType(e.Row,REPORTE_PERDIDAS_GANANCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_PERDIDAS_GANANCIASRowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_PERDIDAS_GANANCIASRowDeleting(Me, New REPORTE_PERDIDAS_GANANCIASRowChangeEvent(CType(e.Row,REPORTE_PERDIDAS_GANANCIASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_PERDIDAS_GANANCIASRow(ByVal row As REPORTE_PERDIDAS_GANANCIASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dtEstadisticaPerdidasGanancia = New dtEstadisticaPerdidasGanancia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_PERDIDAS_GANANCIASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_EPP_UNEGOCIODataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_DETALLE As Global.System.Data.DataColumn
        
        Private columnDESC_DETALLE_CAB As Global.System.Data.DataColumn
        
        Private columnDESC_DETALLE_TOT As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columnDESC_CUENTA As Global.System.Data.DataColumn
        
        Private columnCOD_NEGOCIO As Global.System.Data.DataColumn
        
        Private columnNEGOCIO As Global.System.Data.DataColumn
        
        Private columnSALDO1 As Global.System.Data.DataColumn
        
        Private columnSALDO2 As Global.System.Data.DataColumn
        
        Private columnSALDO3 As Global.System.Data.DataColumn
        
        Private columnSALDO4 As Global.System.Data.DataColumn
        
        Private columnSALDO5 As Global.System.Data.DataColumn
        
        Private columnSALDO6 As Global.System.Data.DataColumn
        
        Private columnSALDO7 As Global.System.Data.DataColumn
        
        Private columnSALDO8 As Global.System.Data.DataColumn
        
        Private columnSALDO9 As Global.System.Data.DataColumn
        
        Private columnSALDO10 As Global.System.Data.DataColumn
        
        Private columnSALDO11 As Global.System.Data.DataColumn
        
        Private columnSALDO12 As Global.System.Data.DataColumn
        
        Private columnNIVEL1_CAB As Global.System.Data.DataColumn
        
        Private columnNIVEL1_TOT As Global.System.Data.DataColumn
        
        Private columnNIVEL2_CAB As Global.System.Data.DataColumn
        
        Private columnNIVEL2_TOT As Global.System.Data.DataColumn
        
        Private columnTOTALIMP As Global.System.Data.DataColumn

        Private columnCOD_GRUPO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_EPP_UNEGOCIO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_DETALLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_DETALLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_DETALLE_CABColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_DETALLE_CAB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_DETALLE_TOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_DETALLE_TOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_NEGOCIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_NEGOCIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NEGOCIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEGOCIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NIVEL1_CABColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVEL1_CAB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NIVEL1_TOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVEL1_TOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NIVEL2_CABColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVEL2_CAB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NIVEL2_TOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVEL2_TOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOTALIMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALIMP
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public ReadOnly Property COD_GRUPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_GRUPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_EPP_UNEGOCIORow
            Get
                Return CType(Me.Rows(index),REPORTE_EPP_UNEGOCIORow)
            End Get
        End Property
        
        Public Event REPORTE_EPP_UNEGOCIORowChanging As REPORTE_EPP_UNEGOCIORowChangeEventHandler
        
        Public Event REPORTE_EPP_UNEGOCIORowChanged As REPORTE_EPP_UNEGOCIORowChangeEventHandler
        
        Public Event REPORTE_EPP_UNEGOCIORowDeleting As REPORTE_EPP_UNEGOCIORowChangeEventHandler
        
        Public Event REPORTE_EPP_UNEGOCIORowDeleted As REPORTE_EPP_UNEGOCIORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_EPP_UNEGOCIORow(ByVal row As REPORTE_EPP_UNEGOCIORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overloads Function AddREPORTE_EPP_UNEGOCIORow( _
                    ByVal COD_DETALLE As String, _
                    ByVal DESC_DETALLE_CAB As String, _
                    ByVal DESC_DETALLE_TOT As String, _
                    ByVal COD_CUENTA As String, _
                    ByVal DESC_CUENTA As String, _
                    ByVal COD_NEGOCIO As String, _
                    ByVal NEGOCIO As String, _
                    ByVal SALDO1 As Decimal, _
                    ByVal SALDO2 As Decimal, _
                    ByVal SALDO3 As Decimal, _
                    ByVal SALDO4 As Decimal, _
                    ByVal SALDO5 As Decimal, _
                    ByVal SALDO6 As Decimal, _
                    ByVal SALDO7 As Decimal, _
                    ByVal SALDO8 As Decimal, _
                    ByVal SALDO9 As Decimal, _
                    ByVal SALDO10 As Decimal, _
                    ByVal SALDO11 As Decimal, _
                    ByVal SALDO12 As Decimal, _
                    ByVal NIVEL1_CAB As String, _
                    ByVal NIVEL1_TOT As String, _
                    ByVal NIVEL2_CAB As String, _
                    ByVal NIVEL2_TOT As String, _
                    ByVal TOTALIMP As Decimal, _
                    ByVal COD_GRUPO As Decimal) As REPORTE_EPP_UNEGOCIORow
            Dim rowREPORTE_EPP_UNEGOCIORow As REPORTE_EPP_UNEGOCIORow = CType(Me.NewRow, REPORTE_EPP_UNEGOCIORow)
            Dim columnValuesArray() As Object = New Object() {COD_DETALLE, DESC_DETALLE_CAB, DESC_DETALLE_TOT, COD_CUENTA, DESC_CUENTA, COD_NEGOCIO, NEGOCIO, SALDO1, SALDO2, SALDO3, SALDO4, SALDO5, SALDO6, SALDO7, SALDO8, SALDO9, SALDO10, SALDO11, SALDO12, NIVEL1_CAB, NIVEL1_TOT, NIVEL2_CAB, NIVEL2_TOT, TOTALIMP, COD_GRUPO}
            rowREPORTE_EPP_UNEGOCIORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_EPP_UNEGOCIORow)
            Return rowREPORTE_EPP_UNEGOCIORow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_EPP_UNEGOCIODataTable = CType(MyBase.Clone, REPORTE_EPP_UNEGOCIODataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_EPP_UNEGOCIODataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Friend Sub InitVars()
            Me.columnCOD_DETALLE = MyBase.Columns("COD_DETALLE")
            Me.columnDESC_DETALLE_CAB = MyBase.Columns("DESC_DETALLE_CAB")
            Me.columnDESC_DETALLE_TOT = MyBase.Columns("DESC_DETALLE_TOT")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columnDESC_CUENTA = MyBase.Columns("DESC_CUENTA")
            Me.columnCOD_NEGOCIO = MyBase.Columns("COD_NEGOCIO")
            Me.columnNEGOCIO = MyBase.Columns("NEGOCIO")
            Me.columnSALDO1 = MyBase.Columns("SALDO1")
            Me.columnSALDO2 = MyBase.Columns("SALDO2")
            Me.columnSALDO3 = MyBase.Columns("SALDO3")
            Me.columnSALDO4 = MyBase.Columns("SALDO4")
            Me.columnSALDO5 = MyBase.Columns("SALDO5")
            Me.columnSALDO6 = MyBase.Columns("SALDO6")
            Me.columnSALDO7 = MyBase.Columns("SALDO7")
            Me.columnSALDO8 = MyBase.Columns("SALDO8")
            Me.columnSALDO9 = MyBase.Columns("SALDO9")
            Me.columnSALDO10 = MyBase.Columns("SALDO10")
            Me.columnSALDO11 = MyBase.Columns("SALDO11")
            Me.columnSALDO12 = MyBase.Columns("SALDO12")
            Me.columnNIVEL1_CAB = MyBase.Columns("NIVEL1_CAB")
            Me.columnNIVEL1_TOT = MyBase.Columns("NIVEL1_TOT")
            Me.columnNIVEL2_CAB = MyBase.Columns("NIVEL2_CAB")
            Me.columnNIVEL2_TOT = MyBase.Columns("NIVEL2_TOT")
            Me.columnTOTALIMP = MyBase.Columns("TOTALIMP")
            Me.columnCOD_GRUPO = MyBase.Columns("COD_GRUPO")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Private Sub InitClass()
            Me.columnCOD_DETALLE = New Global.System.Data.DataColumn("COD_DETALLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_DETALLE)
            Me.columnDESC_DETALLE_CAB = New Global.System.Data.DataColumn("DESC_DETALLE_CAB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_DETALLE_CAB)
            Me.columnDESC_DETALLE_TOT = New Global.System.Data.DataColumn("DESC_DETALLE_TOT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_DETALLE_TOT)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columnDESC_CUENTA = New Global.System.Data.DataColumn("DESC_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CUENTA)
            Me.columnCOD_NEGOCIO = New Global.System.Data.DataColumn("COD_NEGOCIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_NEGOCIO)
            Me.columnNEGOCIO = New Global.System.Data.DataColumn("NEGOCIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEGOCIO)
            Me.columnSALDO1 = New Global.System.Data.DataColumn("SALDO1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO1)
            Me.columnSALDO2 = New Global.System.Data.DataColumn("SALDO2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO2)
            Me.columnSALDO3 = New Global.System.Data.DataColumn("SALDO3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO3)
            Me.columnSALDO4 = New Global.System.Data.DataColumn("SALDO4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO4)
            Me.columnSALDO5 = New Global.System.Data.DataColumn("SALDO5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO5)
            Me.columnSALDO6 = New Global.System.Data.DataColumn("SALDO6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO6)
            Me.columnSALDO7 = New Global.System.Data.DataColumn("SALDO7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO7)
            Me.columnSALDO8 = New Global.System.Data.DataColumn("SALDO8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO8)
            Me.columnSALDO9 = New Global.System.Data.DataColumn("SALDO9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO9)
            Me.columnSALDO10 = New Global.System.Data.DataColumn("SALDO10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO10)
            Me.columnSALDO11 = New Global.System.Data.DataColumn("SALDO11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO11)
            Me.columnSALDO12 = New Global.System.Data.DataColumn("SALDO12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO12)
            Me.columnNIVEL1_CAB = New Global.System.Data.DataColumn("NIVEL1_CAB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVEL1_CAB)
            Me.columnNIVEL1_TOT = New Global.System.Data.DataColumn("NIVEL1_TOT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVEL1_TOT)
            Me.columnNIVEL2_CAB = New Global.System.Data.DataColumn("NIVEL2_CAB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVEL2_CAB)
            Me.columnNIVEL2_TOT = New Global.System.Data.DataColumn("NIVEL2_TOT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVEL2_TOT)
            Me.columnTOTALIMP = New Global.System.Data.DataColumn("TOTALIMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALIMP)
            Me.columnCOD_GRUPO = New Global.System.Data.DataColumn("COD_GRUPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_GRUPO)
            Me.columnDESC_DETALLE_CAB.Caption = "Column1"
            Me.columnDESC_DETALLE_TOT.Caption = "Column1"
            Me.columnCOD_CUENTA.Caption = "Column1"
            Me.columnDESC_CUENTA.Caption = "Column1"
            Me.columnCOD_NEGOCIO.Caption = "Column1"
            Me.columnNEGOCIO.Caption = "Column1"
            Me.columnSALDO1.Caption = "Column1"
            Me.columnSALDO2.Caption = "Column1"
            Me.columnSALDO3.Caption = "Column1"
            Me.columnSALDO4.Caption = "Column1"
            Me.columnSALDO5.Caption = "Column1"
            Me.columnSALDO6.Caption = "Column1"
            Me.columnSALDO7.Caption = "Column1"
            Me.columnSALDO8.Caption = "Column1"
            Me.columnSALDO9.Caption = "Column1"
            Me.columnSALDO10.Caption = "Column1"
            Me.columnSALDO11.Caption = "Column1"
            Me.columnSALDO12.Caption = "Column1"
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function NewREPORTE_EPP_UNEGOCIORow() As REPORTE_EPP_UNEGOCIORow
            Return CType(Me.NewRow, REPORTE_EPP_UNEGOCIORow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_EPP_UNEGOCIORow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_EPP_UNEGOCIORow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_EPP_UNEGOCIORowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_EPP_UNEGOCIORowChanged(Me, New REPORTE_EPP_UNEGOCIORowChangeEvent(CType(e.Row, REPORTE_EPP_UNEGOCIORow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_EPP_UNEGOCIORowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_EPP_UNEGOCIORowChanging(Me, New REPORTE_EPP_UNEGOCIORowChangeEvent(CType(e.Row, REPORTE_EPP_UNEGOCIORow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_EPP_UNEGOCIORowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_EPP_UNEGOCIORowDeleted(Me, New REPORTE_EPP_UNEGOCIORowChangeEvent(CType(e.Row, REPORTE_EPP_UNEGOCIORow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_EPP_UNEGOCIORowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_EPP_UNEGOCIORowDeleting(Me, New REPORTE_EPP_UNEGOCIORowChangeEvent(CType(e.Row, REPORTE_EPP_UNEGOCIORow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub RemoveREPORTE_EPP_UNEGOCIORow(ByVal row As REPORTE_EPP_UNEGOCIORow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dtEstadisticaPerdidasGanancia = New dtEstadisticaPerdidasGanancia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_EPP_UNEGOCIODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NEGOCIODataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnDESCRIPCION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NEGOCIO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESCRIPCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NEGOCIORow
            Get
                Return CType(Me.Rows(index),NEGOCIORow)
            End Get
        End Property
        
        Public Event NEGOCIORowChanging As NEGOCIORowChangeEventHandler
        
        Public Event NEGOCIORowChanged As NEGOCIORowChangeEventHandler
        
        Public Event NEGOCIORowDeleting As NEGOCIORowChangeEventHandler
        
        Public Event NEGOCIORowDeleted As NEGOCIORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddNEGOCIORow(ByVal row As NEGOCIORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddNEGOCIORow(ByVal CODIGO As String, ByVal DESCRIPCION As String) As NEGOCIORow
            Dim rowNEGOCIORow As NEGOCIORow = CType(Me.NewRow,NEGOCIORow)
            Dim columnValuesArray() As Object = New Object() {CODIGO, DESCRIPCION}
            rowNEGOCIORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNEGOCIORow)
            Return rowNEGOCIORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NEGOCIODataTable = CType(MyBase.Clone,NEGOCIODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NEGOCIODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnDESCRIPCION = MyBase.Columns("DESCRIPCION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnDESCRIPCION = New Global.System.Data.DataColumn("DESCRIPCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPCION)
            Me.columnCODIGO.Caption = "Column1"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewNEGOCIORow() As NEGOCIORow
            Return CType(Me.NewRow,NEGOCIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NEGOCIORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NEGOCIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NEGOCIORowChangedEvent) Is Nothing) Then
                RaiseEvent NEGOCIORowChanged(Me, New NEGOCIORowChangeEvent(CType(e.Row,NEGOCIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NEGOCIORowChangingEvent) Is Nothing) Then
                RaiseEvent NEGOCIORowChanging(Me, New NEGOCIORowChangeEvent(CType(e.Row,NEGOCIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NEGOCIORowDeletedEvent) Is Nothing) Then
                RaiseEvent NEGOCIORowDeleted(Me, New NEGOCIORowChangeEvent(CType(e.Row,NEGOCIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NEGOCIORowDeletingEvent) Is Nothing) Then
                RaiseEvent NEGOCIORowDeleting(Me, New NEGOCIORowChangeEvent(CType(e.Row,NEGOCIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveNEGOCIORow(ByVal row As NEGOCIORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dtEstadisticaPerdidasGanancia = New dtEstadisticaPerdidasGanancia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NEGOCIODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_TRABAJADORESDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_NEGOCIO As Global.System.Data.DataColumn
        
        Private columnNEGOCIO As Global.System.Data.DataColumn
        
        Private columnCOD_CC As Global.System.Data.DataColumn
        
        Private columnCCOSTO As Global.System.Data.DataColumn
        
        Private columnCOD_ZONA As Global.System.Data.DataColumn
        
        Private columnZONA As Global.System.Data.DataColumn
        
        Private columnCANTRAB01 As Global.System.Data.DataColumn
        
        Private columnCANTRAB02 As Global.System.Data.DataColumn
        
        Private columnCANTRAB03 As Global.System.Data.DataColumn
        
        Private columnCANTRAB04 As Global.System.Data.DataColumn
        
        Private columnCANTRAB05 As Global.System.Data.DataColumn
        
        Private columnCANTRAB06 As Global.System.Data.DataColumn
        
        Private columnCANTRAB07 As Global.System.Data.DataColumn
        
        Private columnCANTRAB08 As Global.System.Data.DataColumn
        
        Private columnCANTRAB09 As Global.System.Data.DataColumn
        
        Private columnCANTRAB10 As Global.System.Data.DataColumn
        
        Private columnCANTRAB11 As Global.System.Data.DataColumn
        
        Private columnCANTRAB12 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_TRABAJADORES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_NEGOCIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_NEGOCIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NEGOCIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEGOCIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CCOSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCOSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_ZONAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_ZONA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ZONAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZONA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CANTRAB12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTRAB12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_TRABAJADORESRow
            Get
                Return CType(Me.Rows(index),REPORTE_TRABAJADORESRow)
            End Get
        End Property
        
        Public Event REPORTE_TRABAJADORESRowChanging As REPORTE_TRABAJADORESRowChangeEventHandler
        
        Public Event REPORTE_TRABAJADORESRowChanged As REPORTE_TRABAJADORESRowChangeEventHandler
        
        Public Event REPORTE_TRABAJADORESRowDeleting As REPORTE_TRABAJADORESRowChangeEventHandler
        
        Public Event REPORTE_TRABAJADORESRowDeleted As REPORTE_TRABAJADORESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_TRABAJADORESRow(ByVal row As REPORTE_TRABAJADORESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_TRABAJADORESRow( _
                    ByVal COD_NEGOCIO As String,  _
                    ByVal NEGOCIO As String,  _
                    ByVal COD_CC As String,  _
                    ByVal CCOSTO As String,  _
                    ByVal COD_ZONA As String,  _
                    ByVal ZONA As String,  _
                    ByVal CANTRAB01 As Integer,  _
                    ByVal CANTRAB02 As Integer,  _
                    ByVal CANTRAB03 As Integer,  _
                    ByVal CANTRAB04 As Integer,  _
                    ByVal CANTRAB05 As Integer,  _
                    ByVal CANTRAB06 As Integer,  _
                    ByVal CANTRAB07 As Integer,  _
                    ByVal CANTRAB08 As Integer,  _
                    ByVal CANTRAB09 As Integer,  _
                    ByVal CANTRAB10 As Integer,  _
                    ByVal CANTRAB11 As Integer,  _
                    ByVal CANTRAB12 As Integer) As REPORTE_TRABAJADORESRow
            Dim rowREPORTE_TRABAJADORESRow As REPORTE_TRABAJADORESRow = CType(Me.NewRow,REPORTE_TRABAJADORESRow)
            Dim columnValuesArray() As Object = New Object() {COD_NEGOCIO, NEGOCIO, COD_CC, CCOSTO, COD_ZONA, ZONA, CANTRAB01, CANTRAB02, CANTRAB03, CANTRAB04, CANTRAB05, CANTRAB06, CANTRAB07, CANTRAB08, CANTRAB09, CANTRAB10, CANTRAB11, CANTRAB12}
            rowREPORTE_TRABAJADORESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_TRABAJADORESRow)
            Return rowREPORTE_TRABAJADORESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_TRABAJADORESDataTable = CType(MyBase.Clone,REPORTE_TRABAJADORESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_TRABAJADORESDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_NEGOCIO = MyBase.Columns("COD_NEGOCIO")
            Me.columnNEGOCIO = MyBase.Columns("NEGOCIO")
            Me.columnCOD_CC = MyBase.Columns("COD_CC")
            Me.columnCCOSTO = MyBase.Columns("CCOSTO")
            Me.columnCOD_ZONA = MyBase.Columns("COD_ZONA")
            Me.columnZONA = MyBase.Columns("ZONA")
            Me.columnCANTRAB01 = MyBase.Columns("CANTRAB01")
            Me.columnCANTRAB02 = MyBase.Columns("CANTRAB02")
            Me.columnCANTRAB03 = MyBase.Columns("CANTRAB03")
            Me.columnCANTRAB04 = MyBase.Columns("CANTRAB04")
            Me.columnCANTRAB05 = MyBase.Columns("CANTRAB05")
            Me.columnCANTRAB06 = MyBase.Columns("CANTRAB06")
            Me.columnCANTRAB07 = MyBase.Columns("CANTRAB07")
            Me.columnCANTRAB08 = MyBase.Columns("CANTRAB08")
            Me.columnCANTRAB09 = MyBase.Columns("CANTRAB09")
            Me.columnCANTRAB10 = MyBase.Columns("CANTRAB10")
            Me.columnCANTRAB11 = MyBase.Columns("CANTRAB11")
            Me.columnCANTRAB12 = MyBase.Columns("CANTRAB12")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_NEGOCIO = New Global.System.Data.DataColumn("COD_NEGOCIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_NEGOCIO)
            Me.columnNEGOCIO = New Global.System.Data.DataColumn("NEGOCIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEGOCIO)
            Me.columnCOD_CC = New Global.System.Data.DataColumn("COD_CC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CC)
            Me.columnCCOSTO = New Global.System.Data.DataColumn("CCOSTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCOSTO)
            Me.columnCOD_ZONA = New Global.System.Data.DataColumn("COD_ZONA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_ZONA)
            Me.columnZONA = New Global.System.Data.DataColumn("ZONA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZONA)
            Me.columnCANTRAB01 = New Global.System.Data.DataColumn("CANTRAB01", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB01)
            Me.columnCANTRAB02 = New Global.System.Data.DataColumn("CANTRAB02", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB02)
            Me.columnCANTRAB03 = New Global.System.Data.DataColumn("CANTRAB03", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB03)
            Me.columnCANTRAB04 = New Global.System.Data.DataColumn("CANTRAB04", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB04)
            Me.columnCANTRAB05 = New Global.System.Data.DataColumn("CANTRAB05", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB05)
            Me.columnCANTRAB06 = New Global.System.Data.DataColumn("CANTRAB06", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB06)
            Me.columnCANTRAB07 = New Global.System.Data.DataColumn("CANTRAB07", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB07)
            Me.columnCANTRAB08 = New Global.System.Data.DataColumn("CANTRAB08", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB08)
            Me.columnCANTRAB09 = New Global.System.Data.DataColumn("CANTRAB09", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB09)
            Me.columnCANTRAB10 = New Global.System.Data.DataColumn("CANTRAB10", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB10)
            Me.columnCANTRAB11 = New Global.System.Data.DataColumn("CANTRAB11", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB11)
            Me.columnCANTRAB12 = New Global.System.Data.DataColumn("CANTRAB12", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTRAB12)
            Me.columnCOD_NEGOCIO.Caption = "SALDO2"
            Me.columnCOD_CC.Caption = "SALDO0"
            Me.columnCOD_ZONA.Caption = "NIVEL3"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_TRABAJADORESRow() As REPORTE_TRABAJADORESRow
            Return CType(Me.NewRow,REPORTE_TRABAJADORESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_TRABAJADORESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_TRABAJADORESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_TRABAJADORESRowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_TRABAJADORESRowChanged(Me, New REPORTE_TRABAJADORESRowChangeEvent(CType(e.Row,REPORTE_TRABAJADORESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_TRABAJADORESRowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_TRABAJADORESRowChanging(Me, New REPORTE_TRABAJADORESRowChangeEvent(CType(e.Row,REPORTE_TRABAJADORESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_TRABAJADORESRowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_TRABAJADORESRowDeleted(Me, New REPORTE_TRABAJADORESRowChangeEvent(CType(e.Row,REPORTE_TRABAJADORESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_TRABAJADORESRowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_TRABAJADORESRowDeleting(Me, New REPORTE_TRABAJADORESRowChangeEvent(CType(e.Row,REPORTE_TRABAJADORESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_TRABAJADORESRow(ByVal row As REPORTE_TRABAJADORESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As dtEstadisticaPerdidasGanancia = New dtEstadisticaPerdidasGanancia
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_TRABAJADORESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_PERDIDAS_GANANCIASRow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_PERDIDAS_GANANCIAS As REPORTE_PERDIDAS_GANANCIASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_PERDIDAS_GANANCIAS = CType(Me.Table,REPORTE_PERDIDAS_GANANCIASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CUENTA' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_NEGOCIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_NEGOCIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_NEGOCIO' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_NEGOCIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_NEGOCIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_NEGOCIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_NEGOCIO' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_NEGOCIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_CCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CC' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_CCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CCOSTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_CCOSTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CCOSTO' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_CCOSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_ZONA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_ZONAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_ZONA' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_ZONAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_ZONA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_ZONAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_ZONA' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_ZONAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO1' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO2' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO3' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO4' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO5' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO6Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO6' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO7' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO8() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO8Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO8' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO9() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO9Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO9' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO10' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO11' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO12' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB01() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB01Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB01' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB02() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB02Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB02' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB03() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB03Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB03' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB04() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB04Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB04' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB05() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB05Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB05' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB06() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB06Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB06' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB07() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB07Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB07' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB08() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB08Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB08' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB09() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB09Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB09' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB10() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB10Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB10' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB11() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB11Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB11' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB12() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB12Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB12' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOTALIMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.TOTALIMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTALIMP' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.TOTALIMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOTALTRA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.TOTALTRAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTALTRA' de la tabla 'REPORTE_PERDIDAS_GANANCIAS' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.TOTALTRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CUENTANull()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_NEGOCIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_NEGOCIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_NEGOCIONull()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_NEGOCIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_NEGOCIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_NEGOCIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_NEGOCIONull()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_NEGOCIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_CCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CCNull()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_CCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CCOSTONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_CCOSTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CCOSTONull()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_CCOSTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_ZONANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_ZONAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_ZONANull()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.COD_ZONAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_ZONANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_ZONAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_ZONANull()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.DESC_ZONAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO1Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO2Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO3Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO3Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO4Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO4Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO5Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO5Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO6Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO6Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO7Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO7Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO8Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO8Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO9Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO9Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO10Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO10Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO11Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO11Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO12Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO12Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.SALDO12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB01Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB01Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB02Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB02Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB03Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB03Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB04Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB04Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB05Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB05Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB06Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB06Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB06Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB06Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB07Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB07Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB07Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB07Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB08Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB08Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB08Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB08Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB09Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB09Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB09Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB09Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB10Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB10Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB11Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB11Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB12Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB12Null()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.CANTRAB12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOTALIMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.TOTALIMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOTALIMPNull()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.TOTALIMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOTALTRANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_PERDIDAS_GANANCIAS.TOTALTRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOTALTRANull()
            Me(Me.tableREPORTE_PERDIDAS_GANANCIAS.TOTALTRAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_EPP_UNEGOCIORow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_EPP_UNEGOCIO As REPORTE_EPP_UNEGOCIODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_EPP_UNEGOCIO = CType(Me.Table,REPORTE_EPP_UNEGOCIODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_DETALLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.COD_DETALLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_DETALLE' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.COD_DETALLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_DETALLE_CAB() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.DESC_DETALLE_CABColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_DETALLE_CAB' de la tabla 'REPORTE_EPP_UNEGOCIO' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.DESC_DETALLE_CABColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_DETALLE_TOT() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.DESC_DETALLE_TOTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_DETALLE_TOT' de la tabla 'REPORTE_EPP_UNEGOCIO' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.DESC_DETALLE_TOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.DESC_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CUENTA' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.DESC_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_NEGOCIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.COD_NEGOCIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_NEGOCIO' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.COD_NEGOCIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NEGOCIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.NEGOCIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NEGOCIO' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.NEGOCIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO1' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO2' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO3' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO4' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO5' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO6Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO6' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO7' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO8() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO8Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO8' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO9() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO9Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO9' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO10' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO11' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO12' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NIVEL1_CAB() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL1_CABColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NIVEL1_CAB' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL1_CABColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NIVEL1_TOT() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL1_TOTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NIVEL1_TOT' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL1_TOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NIVEL2_CAB() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL2_CABColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NIVEL2_CAB' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL2_CABColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NIVEL2_TOT() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL2_TOTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NIVEL2_TOT' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL2_TOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOTALIMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.TOTALIMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTALIMP' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_EPP_UNEGOCIO.TOTALIMPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Property COD_GRUPO() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableREPORTE_EPP_UNEGOCIO.COD_GRUPOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_GRUPO' de la tabla 'REPORTE_EPP_UNEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set(ByVal value As Decimal)
                Me(Me.tableREPORTE_EPP_UNEGOCIO.COD_GRUPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_DETALLENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.COD_DETALLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_DETALLENull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.COD_DETALLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_DETALLE_CABNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.DESC_DETALLE_CABColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_DETALLE_CABNull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.DESC_DETALLE_CABColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_DETALLE_TOTNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.DESC_DETALLE_TOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_DETALLE_TOTNull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.DESC_DETALLE_TOTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.DESC_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CUENTANull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.DESC_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_NEGOCIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.COD_NEGOCIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_NEGOCIONull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.COD_NEGOCIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNEGOCIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.NEGOCIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNEGOCIONull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.NEGOCIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.SALDO1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO1Null()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.SALDO2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO2Null()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO3Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.SALDO3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO3Null()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO4Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.SALDO4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO4Null()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO5Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.SALDO5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO5Null()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO6Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.SALDO6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO6Null()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO7Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.SALDO7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO7Null()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO8Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.SALDO8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO8Null()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO9Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.SALDO9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO9Null()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO10Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.SALDO10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO10Null()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO11Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.SALDO11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO11Null()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO12Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.SALDO12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO12Null()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.SALDO12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNIVEL1_CABNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL1_CABColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNIVEL1_CABNull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL1_CABColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNIVEL1_TOTNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL1_TOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNIVEL1_TOTNull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL1_TOTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNIVEL2_CABNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL2_CABColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNIVEL2_CABNull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL2_CABColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNIVEL2_TOTNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL2_TOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNIVEL2_TOTNull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.NIVEL2_TOTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOTALIMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.TOTALIMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOTALIMPNull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.TOTALIMPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Function IsCOD_GRUPONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_EPP_UNEGOCIO.COD_GRUPOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()> _
        Public Sub SetCOD_GRUPONull()
            Me(Me.tableREPORTE_EPP_UNEGOCIO.COD_GRUPOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class NEGOCIORow
        Inherits Global.System.Data.DataRow
        
        Private tableNEGOCIO As NEGOCIODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableNEGOCIO = CType(Me.Table,NEGOCIODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableNEGOCIO.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CODIGO' de la tabla 'NEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNEGOCIO.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESCRIPCION() As String
            Get
                Try 
                    Return CType(Me(Me.tableNEGOCIO.DESCRIPCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESCRIPCION' de la tabla 'NEGOCIO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNEGOCIO.DESCRIPCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableNEGOCIO.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCODIGONull()
            Me(Me.tableNEGOCIO.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESCRIPCIONNull() As Boolean
            Return Me.IsNull(Me.tableNEGOCIO.DESCRIPCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESCRIPCIONNull()
            Me(Me.tableNEGOCIO.DESCRIPCIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_TRABAJADORESRow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_TRABAJADORES As REPORTE_TRABAJADORESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_TRABAJADORES = CType(Me.Table,REPORTE_TRABAJADORESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_NEGOCIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.COD_NEGOCIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_NEGOCIO' de la tabla 'REPORTE_TRABAJADORES' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.COD_NEGOCIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NEGOCIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.NEGOCIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NEGOCIO' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.NEGOCIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.COD_CCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CC' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.COD_CCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CCOSTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CCOSTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CCOSTO' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CCOSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_ZONA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.COD_ZONAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_ZONA' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.COD_ZONAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ZONA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.ZONAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ZONA' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.ZONAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB01() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CANTRAB01Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB01' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CANTRAB01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB02() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CANTRAB02Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB02' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CANTRAB02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB03() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CANTRAB03Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB03' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CANTRAB03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB04() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CANTRAB04Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB04' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CANTRAB04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB05() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CANTRAB05Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB05' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CANTRAB05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB06() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CANTRAB06Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB06' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CANTRAB06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB07() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CANTRAB07Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB07' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CANTRAB07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB08() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CANTRAB08Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB08' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CANTRAB08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB09() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CANTRAB09Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB09' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CANTRAB09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB10() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CANTRAB10Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB10' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CANTRAB10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB11() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CANTRAB11Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB11' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CANTRAB11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CANTRAB12() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_TRABAJADORES.CANTRAB12Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTRAB12' de la tabla 'REPORTE_TRABAJADORES' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_TRABAJADORES.CANTRAB12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_NEGOCIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.COD_NEGOCIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_NEGOCIONull()
            Me(Me.tableREPORTE_TRABAJADORES.COD_NEGOCIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNEGOCIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.NEGOCIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNEGOCIONull()
            Me(Me.tableREPORTE_TRABAJADORES.NEGOCIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.COD_CCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CCNull()
            Me(Me.tableREPORTE_TRABAJADORES.COD_CCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCCOSTONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CCOSTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCCOSTONull()
            Me(Me.tableREPORTE_TRABAJADORES.CCOSTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_ZONANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.COD_ZONAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_ZONANull()
            Me(Me.tableREPORTE_TRABAJADORES.COD_ZONAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsZONANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.ZONAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetZONANull()
            Me(Me.tableREPORTE_TRABAJADORES.ZONAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB01Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CANTRAB01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB01Null()
            Me(Me.tableREPORTE_TRABAJADORES.CANTRAB01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB02Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CANTRAB02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB02Null()
            Me(Me.tableREPORTE_TRABAJADORES.CANTRAB02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB03Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CANTRAB03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB03Null()
            Me(Me.tableREPORTE_TRABAJADORES.CANTRAB03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB04Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CANTRAB04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB04Null()
            Me(Me.tableREPORTE_TRABAJADORES.CANTRAB04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB05Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CANTRAB05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB05Null()
            Me(Me.tableREPORTE_TRABAJADORES.CANTRAB05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB06Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CANTRAB06Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB06Null()
            Me(Me.tableREPORTE_TRABAJADORES.CANTRAB06Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB07Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CANTRAB07Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB07Null()
            Me(Me.tableREPORTE_TRABAJADORES.CANTRAB07Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB08Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CANTRAB08Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB08Null()
            Me(Me.tableREPORTE_TRABAJADORES.CANTRAB08Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB09Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CANTRAB09Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB09Null()
            Me(Me.tableREPORTE_TRABAJADORES.CANTRAB09Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB10Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CANTRAB10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB10Null()
            Me(Me.tableREPORTE_TRABAJADORES.CANTRAB10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB11Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CANTRAB11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB11Null()
            Me(Me.tableREPORTE_TRABAJADORES.CANTRAB11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCANTRAB12Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_TRABAJADORES.CANTRAB12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCANTRAB12Null()
            Me(Me.tableREPORTE_TRABAJADORES.CANTRAB12Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_PERDIDAS_GANANCIASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_PERDIDAS_GANANCIASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_PERDIDAS_GANANCIASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_PERDIDAS_GANANCIASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_EPP_UNEGOCIORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_EPP_UNEGOCIORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_EPP_UNEGOCIORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_EPP_UNEGOCIORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class NEGOCIORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NEGOCIORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As NEGOCIORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As NEGOCIORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_TRABAJADORESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_TRABAJADORESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_TRABAJADORESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_TRABAJADORESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
