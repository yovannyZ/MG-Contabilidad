'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.8000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DT_CC_T_CON"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DT_CC_T_CON
    Inherits Global.System.Data.DataSet
    
    Private tableREPORTE_CC_CTAS As REPORTE_CC_CTASDataTable
    
    Private tableREPORTE_CC_CTA_DETALLE1 As REPORTE_CC_CTA_DETALLE1DataTable
    
    Private tableREPORTE_CC_SALDO2 As REPORTE_CC_SALDO2DataTable
    
    Private tableREPORTE_CC_CTAS2 As REPORTE_CC_CTAS2DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("REPORTE_CC_CTAS")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CC_CTASDataTable(ds.Tables("REPORTE_CC_CTAS")))
            End If
            If (Not (ds.Tables("REPORTE_CC_CTA_DETALLE1")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CC_CTA_DETALLE1DataTable(ds.Tables("REPORTE_CC_CTA_DETALLE1")))
            End If
            If (Not (ds.Tables("REPORTE_CC_SALDO2")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CC_SALDO2DataTable(ds.Tables("REPORTE_CC_SALDO2")))
            End If
            If (Not (ds.Tables("REPORTE_CC_CTAS2")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CC_CTAS2DataTable(ds.Tables("REPORTE_CC_CTAS2")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_CC_CTAS() As REPORTE_CC_CTASDataTable
        Get
            Return Me.tableREPORTE_CC_CTAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_CC_CTA_DETALLE1() As REPORTE_CC_CTA_DETALLE1DataTable
        Get
            Return Me.tableREPORTE_CC_CTA_DETALLE1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_CC_SALDO2() As REPORTE_CC_SALDO2DataTable
        Get
            Return Me.tableREPORTE_CC_SALDO2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_CC_CTAS2() As REPORTE_CC_CTAS2DataTable
        Get
            Return Me.tableREPORTE_CC_CTAS2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DT_CC_T_CON = CType(MyBase.Clone,DT_CC_T_CON)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("REPORTE_CC_CTAS")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CC_CTASDataTable(ds.Tables("REPORTE_CC_CTAS")))
            End If
            If (Not (ds.Tables("REPORTE_CC_CTA_DETALLE1")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CC_CTA_DETALLE1DataTable(ds.Tables("REPORTE_CC_CTA_DETALLE1")))
            End If
            If (Not (ds.Tables("REPORTE_CC_SALDO2")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CC_SALDO2DataTable(ds.Tables("REPORTE_CC_SALDO2")))
            End If
            If (Not (ds.Tables("REPORTE_CC_CTAS2")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CC_CTAS2DataTable(ds.Tables("REPORTE_CC_CTAS2")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableREPORTE_CC_CTAS = CType(MyBase.Tables("REPORTE_CC_CTAS"),REPORTE_CC_CTASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_CC_CTAS) Is Nothing) Then
                Me.tableREPORTE_CC_CTAS.InitVars
            End If
        End If
        Me.tableREPORTE_CC_CTA_DETALLE1 = CType(MyBase.Tables("REPORTE_CC_CTA_DETALLE1"),REPORTE_CC_CTA_DETALLE1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_CC_CTA_DETALLE1) Is Nothing) Then
                Me.tableREPORTE_CC_CTA_DETALLE1.InitVars
            End If
        End If
        Me.tableREPORTE_CC_SALDO2 = CType(MyBase.Tables("REPORTE_CC_SALDO2"),REPORTE_CC_SALDO2DataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_CC_SALDO2) Is Nothing) Then
                Me.tableREPORTE_CC_SALDO2.InitVars
            End If
        End If
        Me.tableREPORTE_CC_CTAS2 = CType(MyBase.Tables("REPORTE_CC_CTAS2"),REPORTE_CC_CTAS2DataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_CC_CTAS2) Is Nothing) Then
                Me.tableREPORTE_CC_CTAS2.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DT_CC_T_CON"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DT_CC_T_CON.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableREPORTE_CC_CTAS = New REPORTE_CC_CTASDataTable
        MyBase.Tables.Add(Me.tableREPORTE_CC_CTAS)
        Me.tableREPORTE_CC_CTA_DETALLE1 = New REPORTE_CC_CTA_DETALLE1DataTable
        MyBase.Tables.Add(Me.tableREPORTE_CC_CTA_DETALLE1)
        Me.tableREPORTE_CC_SALDO2 = New REPORTE_CC_SALDO2DataTable
        MyBase.Tables.Add(Me.tableREPORTE_CC_SALDO2)
        Me.tableREPORTE_CC_CTAS2 = New REPORTE_CC_CTAS2DataTable
        MyBase.Tables.Add(Me.tableREPORTE_CC_CTAS2)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_CC_CTAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_CC_CTA_DETALLE1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_CC_SALDO2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_CC_CTAS2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DT_CC_T_CON = New DT_CC_T_CON
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub REPORTE_CC_CTASRowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_CC_CTASRowChangeEvent)
    
    Public Delegate Sub REPORTE_CC_CTA_DETALLE1RowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_CC_CTA_DETALLE1RowChangeEvent)
    
    Public Delegate Sub REPORTE_CC_SALDO2RowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_CC_SALDO2RowChangeEvent)
    
    Public Delegate Sub REPORTE_CC_CTAS2RowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_CC_CTAS2RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_CC_CTASDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_CC As Global.System.Data.DataColumn
        
        Private columnDESC_AREA As Global.System.Data.DataColumn
        
        Private columnDESC_CUENTA As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnColumn2 As Global.System.Data.DataColumn
        
        Private columnColumn3 As Global.System.Data.DataColumn
        
        Private columnColumn4 As Global.System.Data.DataColumn
        
        Private columnColumn5 As Global.System.Data.DataColumn
        
        Private columnColumn6 As Global.System.Data.DataColumn
        
        Private columnColumn7 As Global.System.Data.DataColumn
        
        Private columnColumn8 As Global.System.Data.DataColumn
        
        Private columnColumn9 As Global.System.Data.DataColumn
        
        Private columnColumn10 As Global.System.Data.DataColumn
        
        Private columnColumn11 As Global.System.Data.DataColumn
        
        Private columnColumn12 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_CC_CTAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_AREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_CC_CTASRow
            Get
                Return CType(Me.Rows(index),REPORTE_CC_CTASRow)
            End Get
        End Property
        
        Public Event REPORTE_CC_CTASRowChanging As REPORTE_CC_CTASRowChangeEventHandler
        
        Public Event REPORTE_CC_CTASRowChanged As REPORTE_CC_CTASRowChangeEventHandler
        
        Public Event REPORTE_CC_CTASRowDeleting As REPORTE_CC_CTASRowChangeEventHandler
        
        Public Event REPORTE_CC_CTASRowDeleted As REPORTE_CC_CTASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_CC_CTASRow(ByVal row As REPORTE_CC_CTASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_CC_CTASRow( _
                    ByVal COD_CC As String,  _
                    ByVal DESC_AREA As String,  _
                    ByVal DESC_CUENTA As String,  _
                    ByVal COD_CUENTA As String,  _
                    ByVal Column1 As Decimal,  _
                    ByVal Column2 As Decimal,  _
                    ByVal Column3 As Decimal,  _
                    ByVal Column4 As Decimal,  _
                    ByVal Column5 As Decimal,  _
                    ByVal Column6 As Decimal,  _
                    ByVal Column7 As Decimal,  _
                    ByVal Column8 As Decimal,  _
                    ByVal Column9 As Decimal,  _
                    ByVal Column10 As Decimal,  _
                    ByVal Column11 As Decimal,  _
                    ByVal Column12 As Decimal) As REPORTE_CC_CTASRow
            Dim rowREPORTE_CC_CTASRow As REPORTE_CC_CTASRow = CType(Me.NewRow,REPORTE_CC_CTASRow)
            Dim columnValuesArray() As Object = New Object() {COD_CC, DESC_AREA, DESC_CUENTA, COD_CUENTA, Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11, Column12}
            rowREPORTE_CC_CTASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_CC_CTASRow)
            Return rowREPORTE_CC_CTASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_CC_CTASDataTable = CType(MyBase.Clone,REPORTE_CC_CTASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_CC_CTASDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_CC = MyBase.Columns("COD_CC")
            Me.columnDESC_AREA = MyBase.Columns("DESC_AREA")
            Me.columnDESC_CUENTA = MyBase.Columns("DESC_CUENTA")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnColumn2 = MyBase.Columns("Column2")
            Me.columnColumn3 = MyBase.Columns("Column3")
            Me.columnColumn4 = MyBase.Columns("Column4")
            Me.columnColumn5 = MyBase.Columns("Column5")
            Me.columnColumn6 = MyBase.Columns("Column6")
            Me.columnColumn7 = MyBase.Columns("Column7")
            Me.columnColumn8 = MyBase.Columns("Column8")
            Me.columnColumn9 = MyBase.Columns("Column9")
            Me.columnColumn10 = MyBase.Columns("Column10")
            Me.columnColumn11 = MyBase.Columns("Column11")
            Me.columnColumn12 = MyBase.Columns("Column12")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_CC = New Global.System.Data.DataColumn("COD_CC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CC)
            Me.columnDESC_AREA = New Global.System.Data.DataColumn("DESC_AREA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_AREA)
            Me.columnDESC_CUENTA = New Global.System.Data.DataColumn("DESC_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CUENTA)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnColumn2 = New Global.System.Data.DataColumn("Column2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn2)
            Me.columnColumn3 = New Global.System.Data.DataColumn("Column3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn3)
            Me.columnColumn4 = New Global.System.Data.DataColumn("Column4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn4)
            Me.columnColumn5 = New Global.System.Data.DataColumn("Column5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn5)
            Me.columnColumn6 = New Global.System.Data.DataColumn("Column6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn6)
            Me.columnColumn7 = New Global.System.Data.DataColumn("Column7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn7)
            Me.columnColumn8 = New Global.System.Data.DataColumn("Column8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn8)
            Me.columnColumn9 = New Global.System.Data.DataColumn("Column9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn9)
            Me.columnColumn10 = New Global.System.Data.DataColumn("Column10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn10)
            Me.columnColumn11 = New Global.System.Data.DataColumn("Column11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn11)
            Me.columnColumn12 = New Global.System.Data.DataColumn("Column12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn12)
            Me.columnCOD_CC.MaxLength = 5
            Me.columnDESC_AREA.MaxLength = 30
            Me.columnDESC_CUENTA.MaxLength = 60
            Me.columnCOD_CUENTA.MaxLength = 8
            Me.columnColumn1.ReadOnly = true
            Me.columnColumn2.ReadOnly = true
            Me.columnColumn3.ReadOnly = true
            Me.columnColumn4.ReadOnly = true
            Me.columnColumn5.ReadOnly = true
            Me.columnColumn6.ReadOnly = true
            Me.columnColumn7.ReadOnly = true
            Me.columnColumn8.ReadOnly = true
            Me.columnColumn9.ReadOnly = true
            Me.columnColumn10.ReadOnly = true
            Me.columnColumn11.ReadOnly = true
            Me.columnColumn12.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_CC_CTASRow() As REPORTE_CC_CTASRow
            Return CType(Me.NewRow,REPORTE_CC_CTASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_CC_CTASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_CC_CTASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_CC_CTASRowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_CTASRowChanged(Me, New REPORTE_CC_CTASRowChangeEvent(CType(e.Row,REPORTE_CC_CTASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_CC_CTASRowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_CTASRowChanging(Me, New REPORTE_CC_CTASRowChangeEvent(CType(e.Row,REPORTE_CC_CTASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_CC_CTASRowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_CTASRowDeleted(Me, New REPORTE_CC_CTASRowChangeEvent(CType(e.Row,REPORTE_CC_CTASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_CC_CTASRowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_CTASRowDeleting(Me, New REPORTE_CC_CTASRowChangeEvent(CType(e.Row,REPORTE_CC_CTASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_CC_CTASRow(ByVal row As REPORTE_CC_CTASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_CC_T_CON = New DT_CC_T_CON
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_CC_CTASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_CC_CTA_DETALLE1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_COMP As Global.System.Data.DataColumn
        
        Private columnCOD_AUX As Global.System.Data.DataColumn
        
        Private columnNRO_COMP As Global.System.Data.DataColumn
        
        Private columnFECHA_DOC As Global.System.Data.DataColumn
        
        Private columnNRO_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_PER As Global.System.Data.DataColumn
        
        Private columnGLOSA As Global.System.Data.DataColumn
        
        Private columnCOD_REF As Global.System.Data.DataColumn
        
        Private columnNRO_REF As Global.System.Data.DataColumn
        
        Private columnCOD_MONEDA As Global.System.Data.DataColumn
        
        Private columnIMP_DOLARES As Global.System.Data.DataColumn
        
        Private columnIMP_SOLES_DEBE As Global.System.Data.DataColumn
        
        Private columnIMP_SOLES_HABER As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columnDESC_CUENTA As Global.System.Data.DataColumn
        
        Private columnCOD_CC As Global.System.Data.DataColumn
        
        Private columnDESC_AREA As Global.System.Data.DataColumn
        
        Private columnFE_MES As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_CC_CTA_DETALLE1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_AUXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_AUX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_DOLARESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_DOLARES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_SOLES_DEBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_SOLES_DEBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_SOLES_HABERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_SOLES_HABER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_AREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_MES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_CC_CTA_DETALLE1Row
            Get
                Return CType(Me.Rows(index),REPORTE_CC_CTA_DETALLE1Row)
            End Get
        End Property
        
        Public Event REPORTE_CC_CTA_DETALLE1RowChanging As REPORTE_CC_CTA_DETALLE1RowChangeEventHandler
        
        Public Event REPORTE_CC_CTA_DETALLE1RowChanged As REPORTE_CC_CTA_DETALLE1RowChangeEventHandler
        
        Public Event REPORTE_CC_CTA_DETALLE1RowDeleting As REPORTE_CC_CTA_DETALLE1RowChangeEventHandler
        
        Public Event REPORTE_CC_CTA_DETALLE1RowDeleted As REPORTE_CC_CTA_DETALLE1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_CC_CTA_DETALLE1Row(ByVal row As REPORTE_CC_CTA_DETALLE1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_CC_CTA_DETALLE1Row( _
                    ByVal COD_COMP As String,  _
                    ByVal COD_AUX As String,  _
                    ByVal NRO_COMP As String,  _
                    ByVal FECHA_DOC As Date,  _
                    ByVal NRO_DOC As String,  _
                    ByVal COD_DOC As String,  _
                    ByVal COD_PER As String,  _
                    ByVal GLOSA As String,  _
                    ByVal COD_REF As String,  _
                    ByVal NRO_REF As String,  _
                    ByVal COD_MONEDA As String,  _
                    ByVal IMP_DOLARES As Decimal,  _
                    ByVal IMP_SOLES_DEBE As Decimal,  _
                    ByVal IMP_SOLES_HABER As Decimal,  _
                    ByVal COD_CUENTA As String,  _
                    ByVal DESC_CUENTA As String,  _
                    ByVal COD_CC As String,  _
                    ByVal DESC_AREA As String,  _
                    ByVal FE_MES As String) As REPORTE_CC_CTA_DETALLE1Row
            Dim rowREPORTE_CC_CTA_DETALLE1Row As REPORTE_CC_CTA_DETALLE1Row = CType(Me.NewRow,REPORTE_CC_CTA_DETALLE1Row)
            Dim columnValuesArray() As Object = New Object() {COD_COMP, COD_AUX, NRO_COMP, FECHA_DOC, NRO_DOC, COD_DOC, COD_PER, GLOSA, COD_REF, NRO_REF, COD_MONEDA, IMP_DOLARES, IMP_SOLES_DEBE, IMP_SOLES_HABER, COD_CUENTA, DESC_CUENTA, COD_CC, DESC_AREA, FE_MES}
            rowREPORTE_CC_CTA_DETALLE1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_CC_CTA_DETALLE1Row)
            Return rowREPORTE_CC_CTA_DETALLE1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_CC_CTA_DETALLE1DataTable = CType(MyBase.Clone,REPORTE_CC_CTA_DETALLE1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_CC_CTA_DETALLE1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_COMP = MyBase.Columns("COD_COMP")
            Me.columnCOD_AUX = MyBase.Columns("COD_AUX")
            Me.columnNRO_COMP = MyBase.Columns("NRO_COMP")
            Me.columnFECHA_DOC = MyBase.Columns("FECHA_DOC")
            Me.columnNRO_DOC = MyBase.Columns("NRO_DOC")
            Me.columnCOD_DOC = MyBase.Columns("COD_DOC")
            Me.columnCOD_PER = MyBase.Columns("COD_PER")
            Me.columnGLOSA = MyBase.Columns("GLOSA")
            Me.columnCOD_REF = MyBase.Columns("COD_REF")
            Me.columnNRO_REF = MyBase.Columns("NRO_REF")
            Me.columnCOD_MONEDA = MyBase.Columns("COD_MONEDA")
            Me.columnIMP_DOLARES = MyBase.Columns("IMP_DOLARES")
            Me.columnIMP_SOLES_DEBE = MyBase.Columns("IMP_SOLES_DEBE")
            Me.columnIMP_SOLES_HABER = MyBase.Columns("IMP_SOLES_HABER")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columnDESC_CUENTA = MyBase.Columns("DESC_CUENTA")
            Me.columnCOD_CC = MyBase.Columns("COD_CC")
            Me.columnDESC_AREA = MyBase.Columns("DESC_AREA")
            Me.columnFE_MES = MyBase.Columns("FE_MES")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_COMP = New Global.System.Data.DataColumn("COD_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_COMP)
            Me.columnCOD_AUX = New Global.System.Data.DataColumn("COD_AUX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_AUX)
            Me.columnNRO_COMP = New Global.System.Data.DataColumn("NRO_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_COMP)
            Me.columnFECHA_DOC = New Global.System.Data.DataColumn("FECHA_DOC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_DOC)
            Me.columnNRO_DOC = New Global.System.Data.DataColumn("NRO_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC)
            Me.columnCOD_DOC = New Global.System.Data.DataColumn("COD_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_DOC)
            Me.columnCOD_PER = New Global.System.Data.DataColumn("COD_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_PER)
            Me.columnGLOSA = New Global.System.Data.DataColumn("GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA)
            Me.columnCOD_REF = New Global.System.Data.DataColumn("COD_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_REF)
            Me.columnNRO_REF = New Global.System.Data.DataColumn("NRO_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_REF)
            Me.columnCOD_MONEDA = New Global.System.Data.DataColumn("COD_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_MONEDA)
            Me.columnIMP_DOLARES = New Global.System.Data.DataColumn("IMP_DOLARES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_DOLARES)
            Me.columnIMP_SOLES_DEBE = New Global.System.Data.DataColumn("IMP_SOLES_DEBE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_SOLES_DEBE)
            Me.columnIMP_SOLES_HABER = New Global.System.Data.DataColumn("IMP_SOLES_HABER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_SOLES_HABER)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columnDESC_CUENTA = New Global.System.Data.DataColumn("DESC_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CUENTA)
            Me.columnCOD_CC = New Global.System.Data.DataColumn("COD_CC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CC)
            Me.columnDESC_AREA = New Global.System.Data.DataColumn("DESC_AREA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_AREA)
            Me.columnFE_MES = New Global.System.Data.DataColumn("FE_MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_MES)
            Me.columnCOD_COMP.MaxLength = 3
            Me.columnCOD_AUX.MaxLength = 2
            Me.columnNRO_COMP.MaxLength = 4
            Me.columnNRO_DOC.MaxLength = 20
            Me.columnCOD_DOC.MaxLength = 2
            Me.columnCOD_PER.MaxLength = 5
            Me.columnGLOSA.MaxLength = 60
            Me.columnCOD_REF.MaxLength = 2
            Me.columnNRO_REF.MaxLength = 20
            Me.columnCOD_MONEDA.MaxLength = 1
            Me.columnIMP_DOLARES.ReadOnly = true
            Me.columnIMP_SOLES_DEBE.ReadOnly = true
            Me.columnIMP_SOLES_HABER.ReadOnly = true
            Me.columnCOD_CUENTA.MaxLength = 8
            Me.columnDESC_CUENTA.MaxLength = 60
            Me.columnCOD_CC.MaxLength = 5
            Me.columnDESC_AREA.MaxLength = 30
            Me.columnFE_MES.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_CC_CTA_DETALLE1Row() As REPORTE_CC_CTA_DETALLE1Row
            Return CType(Me.NewRow,REPORTE_CC_CTA_DETALLE1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_CC_CTA_DETALLE1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_CC_CTA_DETALLE1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_CC_CTA_DETALLE1RowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_CTA_DETALLE1RowChanged(Me, New REPORTE_CC_CTA_DETALLE1RowChangeEvent(CType(e.Row,REPORTE_CC_CTA_DETALLE1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_CC_CTA_DETALLE1RowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_CTA_DETALLE1RowChanging(Me, New REPORTE_CC_CTA_DETALLE1RowChangeEvent(CType(e.Row,REPORTE_CC_CTA_DETALLE1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_CC_CTA_DETALLE1RowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_CTA_DETALLE1RowDeleted(Me, New REPORTE_CC_CTA_DETALLE1RowChangeEvent(CType(e.Row,REPORTE_CC_CTA_DETALLE1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_CC_CTA_DETALLE1RowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_CTA_DETALLE1RowDeleting(Me, New REPORTE_CC_CTA_DETALLE1RowChangeEvent(CType(e.Row,REPORTE_CC_CTA_DETALLE1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_CC_CTA_DETALLE1Row(ByVal row As REPORTE_CC_CTA_DETALLE1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_CC_T_CON = New DT_CC_T_CON
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_CC_CTA_DETALLE1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_CC_SALDO2DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_CC As Global.System.Data.DataColumn
        
        Private columnDESC_AREA As Global.System.Data.DataColumn
        
        Private columnDESC_CUENTA As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnColumn2 As Global.System.Data.DataColumn
        
        Private columnColumn3 As Global.System.Data.DataColumn
        
        Private columnColumn4 As Global.System.Data.DataColumn
        
        Private columnColumn5 As Global.System.Data.DataColumn
        
        Private columnColumn6 As Global.System.Data.DataColumn
        
        Private columnColumn7 As Global.System.Data.DataColumn
        
        Private columnColumn8 As Global.System.Data.DataColumn
        
        Private columnColumn9 As Global.System.Data.DataColumn
        
        Private columnColumn10 As Global.System.Data.DataColumn
        
        Private columnColumn11 As Global.System.Data.DataColumn
        
        Private columnColumn12 As Global.System.Data.DataColumn
        
        Private columnTOTAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_CC_SALDO2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_AREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_CC_SALDO2Row
            Get
                Return CType(Me.Rows(index),REPORTE_CC_SALDO2Row)
            End Get
        End Property
        
        Public Event REPORTE_CC_SALDO2RowChanging As REPORTE_CC_SALDO2RowChangeEventHandler
        
        Public Event REPORTE_CC_SALDO2RowChanged As REPORTE_CC_SALDO2RowChangeEventHandler
        
        Public Event REPORTE_CC_SALDO2RowDeleting As REPORTE_CC_SALDO2RowChangeEventHandler
        
        Public Event REPORTE_CC_SALDO2RowDeleted As REPORTE_CC_SALDO2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_CC_SALDO2Row(ByVal row As REPORTE_CC_SALDO2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_CC_SALDO2Row( _
                    ByVal COD_CC As String,  _
                    ByVal DESC_AREA As String,  _
                    ByVal DESC_CUENTA As String,  _
                    ByVal COD_CUENTA As String,  _
                    ByVal Column1 As Decimal,  _
                    ByVal Column2 As Decimal,  _
                    ByVal Column3 As Decimal,  _
                    ByVal Column4 As Decimal,  _
                    ByVal Column5 As Decimal,  _
                    ByVal Column6 As Decimal,  _
                    ByVal Column7 As Decimal,  _
                    ByVal Column8 As Decimal,  _
                    ByVal Column9 As Decimal,  _
                    ByVal Column10 As Decimal,  _
                    ByVal Column11 As Decimal,  _
                    ByVal Column12 As Decimal,  _
                    ByVal TOTAL As Decimal) As REPORTE_CC_SALDO2Row
            Dim rowREPORTE_CC_SALDO2Row As REPORTE_CC_SALDO2Row = CType(Me.NewRow,REPORTE_CC_SALDO2Row)
            Dim columnValuesArray() As Object = New Object() {COD_CC, DESC_AREA, DESC_CUENTA, COD_CUENTA, Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11, Column12, TOTAL}
            rowREPORTE_CC_SALDO2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_CC_SALDO2Row)
            Return rowREPORTE_CC_SALDO2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_CC_SALDO2DataTable = CType(MyBase.Clone,REPORTE_CC_SALDO2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_CC_SALDO2DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_CC = MyBase.Columns("COD_CC")
            Me.columnDESC_AREA = MyBase.Columns("DESC_AREA")
            Me.columnDESC_CUENTA = MyBase.Columns("DESC_CUENTA")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnColumn2 = MyBase.Columns("Column2")
            Me.columnColumn3 = MyBase.Columns("Column3")
            Me.columnColumn4 = MyBase.Columns("Column4")
            Me.columnColumn5 = MyBase.Columns("Column5")
            Me.columnColumn6 = MyBase.Columns("Column6")
            Me.columnColumn7 = MyBase.Columns("Column7")
            Me.columnColumn8 = MyBase.Columns("Column8")
            Me.columnColumn9 = MyBase.Columns("Column9")
            Me.columnColumn10 = MyBase.Columns("Column10")
            Me.columnColumn11 = MyBase.Columns("Column11")
            Me.columnColumn12 = MyBase.Columns("Column12")
            Me.columnTOTAL = MyBase.Columns("TOTAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_CC = New Global.System.Data.DataColumn("COD_CC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CC)
            Me.columnDESC_AREA = New Global.System.Data.DataColumn("DESC_AREA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_AREA)
            Me.columnDESC_CUENTA = New Global.System.Data.DataColumn("DESC_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CUENTA)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnColumn2 = New Global.System.Data.DataColumn("Column2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn2)
            Me.columnColumn3 = New Global.System.Data.DataColumn("Column3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn3)
            Me.columnColumn4 = New Global.System.Data.DataColumn("Column4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn4)
            Me.columnColumn5 = New Global.System.Data.DataColumn("Column5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn5)
            Me.columnColumn6 = New Global.System.Data.DataColumn("Column6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn6)
            Me.columnColumn7 = New Global.System.Data.DataColumn("Column7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn7)
            Me.columnColumn8 = New Global.System.Data.DataColumn("Column8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn8)
            Me.columnColumn9 = New Global.System.Data.DataColumn("Column9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn9)
            Me.columnColumn10 = New Global.System.Data.DataColumn("Column10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn10)
            Me.columnColumn11 = New Global.System.Data.DataColumn("Column11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn11)
            Me.columnColumn12 = New Global.System.Data.DataColumn("Column12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn12)
            Me.columnTOTAL = New Global.System.Data.DataColumn("TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_CC_SALDO2Row() As REPORTE_CC_SALDO2Row
            Return CType(Me.NewRow,REPORTE_CC_SALDO2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_CC_SALDO2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_CC_SALDO2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_CC_SALDO2RowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_SALDO2RowChanged(Me, New REPORTE_CC_SALDO2RowChangeEvent(CType(e.Row,REPORTE_CC_SALDO2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_CC_SALDO2RowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_SALDO2RowChanging(Me, New REPORTE_CC_SALDO2RowChangeEvent(CType(e.Row,REPORTE_CC_SALDO2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_CC_SALDO2RowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_SALDO2RowDeleted(Me, New REPORTE_CC_SALDO2RowChangeEvent(CType(e.Row,REPORTE_CC_SALDO2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_CC_SALDO2RowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_SALDO2RowDeleting(Me, New REPORTE_CC_SALDO2RowChangeEvent(CType(e.Row,REPORTE_CC_SALDO2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_CC_SALDO2Row(ByVal row As REPORTE_CC_SALDO2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_CC_T_CON = New DT_CC_T_CON
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_CC_SALDO2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_CC_CTAS2DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_CC As Global.System.Data.DataColumn
        
        Private columnDESC_AREA As Global.System.Data.DataColumn
        
        Private columnDESC_CUENTA As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnColumn2 As Global.System.Data.DataColumn
        
        Private columnColumn3 As Global.System.Data.DataColumn
        
        Private columnColumn4 As Global.System.Data.DataColumn
        
        Private columnColumn5 As Global.System.Data.DataColumn
        
        Private columnColumn6 As Global.System.Data.DataColumn
        
        Private columnColumn7 As Global.System.Data.DataColumn
        
        Private columnColumn8 As Global.System.Data.DataColumn
        
        Private columnColumn9 As Global.System.Data.DataColumn
        
        Private columnColumn10 As Global.System.Data.DataColumn
        
        Private columnColumn11 As Global.System.Data.DataColumn
        
        Private columnColumn12 As Global.System.Data.DataColumn
        
        Private columnTOTAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_CC_CTAS2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_AREAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_AREA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_CC_CTAS2Row
            Get
                Return CType(Me.Rows(index),REPORTE_CC_CTAS2Row)
            End Get
        End Property
        
        Public Event REPORTE_CC_CTAS2RowChanging As REPORTE_CC_CTAS2RowChangeEventHandler
        
        Public Event REPORTE_CC_CTAS2RowChanged As REPORTE_CC_CTAS2RowChangeEventHandler
        
        Public Event REPORTE_CC_CTAS2RowDeleting As REPORTE_CC_CTAS2RowChangeEventHandler
        
        Public Event REPORTE_CC_CTAS2RowDeleted As REPORTE_CC_CTAS2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_CC_CTAS2Row(ByVal row As REPORTE_CC_CTAS2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_CC_CTAS2Row( _
                    ByVal COD_CC As String,  _
                    ByVal DESC_AREA As String,  _
                    ByVal DESC_CUENTA As String,  _
                    ByVal COD_CUENTA As String,  _
                    ByVal Column1 As Decimal,  _
                    ByVal Column2 As Decimal,  _
                    ByVal Column3 As Decimal,  _
                    ByVal Column4 As Decimal,  _
                    ByVal Column5 As Decimal,  _
                    ByVal Column6 As Decimal,  _
                    ByVal Column7 As Decimal,  _
                    ByVal Column8 As Decimal,  _
                    ByVal Column9 As Decimal,  _
                    ByVal Column10 As Decimal,  _
                    ByVal Column11 As Decimal,  _
                    ByVal Column12 As Decimal,  _
                    ByVal TOTAL As Decimal) As REPORTE_CC_CTAS2Row
            Dim rowREPORTE_CC_CTAS2Row As REPORTE_CC_CTAS2Row = CType(Me.NewRow,REPORTE_CC_CTAS2Row)
            Dim columnValuesArray() As Object = New Object() {COD_CC, DESC_AREA, DESC_CUENTA, COD_CUENTA, Column1, Column2, Column3, Column4, Column5, Column6, Column7, Column8, Column9, Column10, Column11, Column12, TOTAL}
            rowREPORTE_CC_CTAS2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_CC_CTAS2Row)
            Return rowREPORTE_CC_CTAS2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_CC_CTAS2DataTable = CType(MyBase.Clone,REPORTE_CC_CTAS2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_CC_CTAS2DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_CC = MyBase.Columns("COD_CC")
            Me.columnDESC_AREA = MyBase.Columns("DESC_AREA")
            Me.columnDESC_CUENTA = MyBase.Columns("DESC_CUENTA")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnColumn2 = MyBase.Columns("Column2")
            Me.columnColumn3 = MyBase.Columns("Column3")
            Me.columnColumn4 = MyBase.Columns("Column4")
            Me.columnColumn5 = MyBase.Columns("Column5")
            Me.columnColumn6 = MyBase.Columns("Column6")
            Me.columnColumn7 = MyBase.Columns("Column7")
            Me.columnColumn8 = MyBase.Columns("Column8")
            Me.columnColumn9 = MyBase.Columns("Column9")
            Me.columnColumn10 = MyBase.Columns("Column10")
            Me.columnColumn11 = MyBase.Columns("Column11")
            Me.columnColumn12 = MyBase.Columns("Column12")
            Me.columnTOTAL = MyBase.Columns("TOTAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_CC = New Global.System.Data.DataColumn("COD_CC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CC)
            Me.columnDESC_AREA = New Global.System.Data.DataColumn("DESC_AREA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_AREA)
            Me.columnDESC_CUENTA = New Global.System.Data.DataColumn("DESC_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CUENTA)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnColumn2 = New Global.System.Data.DataColumn("Column2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn2)
            Me.columnColumn3 = New Global.System.Data.DataColumn("Column3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn3)
            Me.columnColumn4 = New Global.System.Data.DataColumn("Column4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn4)
            Me.columnColumn5 = New Global.System.Data.DataColumn("Column5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn5)
            Me.columnColumn6 = New Global.System.Data.DataColumn("Column6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn6)
            Me.columnColumn7 = New Global.System.Data.DataColumn("Column7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn7)
            Me.columnColumn8 = New Global.System.Data.DataColumn("Column8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn8)
            Me.columnColumn9 = New Global.System.Data.DataColumn("Column9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn9)
            Me.columnColumn10 = New Global.System.Data.DataColumn("Column10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn10)
            Me.columnColumn11 = New Global.System.Data.DataColumn("Column11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn11)
            Me.columnColumn12 = New Global.System.Data.DataColumn("Column12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn12)
            Me.columnTOTAL = New Global.System.Data.DataColumn("TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_CC_CTAS2Row() As REPORTE_CC_CTAS2Row
            Return CType(Me.NewRow,REPORTE_CC_CTAS2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_CC_CTAS2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_CC_CTAS2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_CC_CTAS2RowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_CTAS2RowChanged(Me, New REPORTE_CC_CTAS2RowChangeEvent(CType(e.Row,REPORTE_CC_CTAS2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_CC_CTAS2RowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_CTAS2RowChanging(Me, New REPORTE_CC_CTAS2RowChangeEvent(CType(e.Row,REPORTE_CC_CTAS2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_CC_CTAS2RowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_CTAS2RowDeleted(Me, New REPORTE_CC_CTAS2RowChangeEvent(CType(e.Row,REPORTE_CC_CTAS2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_CC_CTAS2RowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CC_CTAS2RowDeleting(Me, New REPORTE_CC_CTAS2RowChangeEvent(CType(e.Row,REPORTE_CC_CTAS2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_CC_CTAS2Row(ByVal row As REPORTE_CC_CTAS2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_CC_T_CON = New DT_CC_T_CON
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_CC_CTAS2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_CC_CTASRow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_CC_CTAS As REPORTE_CC_CTASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_CC_CTAS = CType(Me.Table,REPORTE_CC_CTASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.COD_CCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CC' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.COD_CCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_AREA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.DESC_AREAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_AREA' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.DESC_AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.DESC_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CUENTA' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.DESC_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.Column1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column1' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.Column2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column2' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.Column2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.Column3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column3' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.Column3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.Column4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column4' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.Column4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.Column5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column5' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.Column5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.Column6Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column6' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.Column6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.Column7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column7' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.Column7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column8() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.Column8Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column8' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.Column8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column9() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.Column9Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column9' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.Column9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.Column10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column10' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.Column10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.Column11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column11' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.Column11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS.Column12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column12' de la tabla 'REPORTE_CC_CTAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS.Column12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.COD_CCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CCNull()
            Me(Me.tableREPORTE_CC_CTAS.COD_CCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_AREANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.DESC_AREAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_AREANull()
            Me(Me.tableREPORTE_CC_CTAS.DESC_AREAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.DESC_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CUENTANull()
            Me(Me.tableREPORTE_CC_CTAS.DESC_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_CC_CTAS.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableREPORTE_CC_CTAS.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.Column2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn2Null()
            Me(Me.tableREPORTE_CC_CTAS.Column2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn3Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.Column3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn3Null()
            Me(Me.tableREPORTE_CC_CTAS.Column3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn4Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.Column4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn4Null()
            Me(Me.tableREPORTE_CC_CTAS.Column4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn5Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.Column5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn5Null()
            Me(Me.tableREPORTE_CC_CTAS.Column5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn6Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.Column6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn6Null()
            Me(Me.tableREPORTE_CC_CTAS.Column6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn7Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.Column7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn7Null()
            Me(Me.tableREPORTE_CC_CTAS.Column7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn8Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.Column8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn8Null()
            Me(Me.tableREPORTE_CC_CTAS.Column8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn9Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.Column9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn9Null()
            Me(Me.tableREPORTE_CC_CTAS.Column9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn10Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.Column10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn10Null()
            Me(Me.tableREPORTE_CC_CTAS.Column10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn11Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.Column11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn11Null()
            Me(Me.tableREPORTE_CC_CTAS.Column11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn12Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS.Column12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn12Null()
            Me(Me.tableREPORTE_CC_CTAS.Column12Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_CC_CTA_DETALLE1Row
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_CC_CTA_DETALLE1 As REPORTE_CC_CTA_DETALLE1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_CC_CTA_DETALLE1 = CType(Me.Table,REPORTE_CC_CTA_DETALLE1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_COMP() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_COMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_COMP' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_AUX() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_AUXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_AUX' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_AUXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_COMP() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.NRO_COMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_COMP' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.NRO_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_DOC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.FECHA_DOCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_DOC' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.FECHA_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.NRO_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.NRO_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_DOC' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_PER' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GLOSA' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_REF' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.NRO_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_REF' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.NRO_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_MONEDA' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_DOLARES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.IMP_DOLARESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_DOLARES' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.IMP_DOLARESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_SOLES_DEBE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.IMP_SOLES_DEBEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_SOLES_DEBE' de la tabla 'REPORTE_CC_CTA_DETALLE1' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.IMP_SOLES_DEBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_SOLES_HABER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.IMP_SOLES_HABERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_SOLES_HABER' de la tabla 'REPORTE_CC_CTA_DETALLE1' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.IMP_SOLES_HABERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.DESC_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CUENTA' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.DESC_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_CCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CC' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_CCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_AREA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.DESC_AREAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_AREA' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.DESC_AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_MES() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTA_DETALLE1.FE_MESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FE_MES' de la tabla 'REPORTE_CC_CTA_DETALLE1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTA_DETALLE1.FE_MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_COMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.COD_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_COMPNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_AUXNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.COD_AUXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_AUXNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_AUXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_COMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.NRO_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_COMPNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.NRO_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.FECHA_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_DOCNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.FECHA_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.NRO_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOCNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.NRO_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.COD_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_DOCNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.COD_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_PERNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGLOSANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGLOSANull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.COD_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_REFNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.NRO_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_REFNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.NRO_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_MONEDANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.COD_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_MONEDANull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_DOLARESNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.IMP_DOLARESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_DOLARESNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.IMP_DOLARESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_SOLES_DEBENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.IMP_SOLES_DEBEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_SOLES_DEBENull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.IMP_SOLES_DEBEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_SOLES_HABERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.IMP_SOLES_HABERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_SOLES_HABERNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.IMP_SOLES_HABERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.DESC_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CUENTANull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.DESC_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.COD_CCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CCNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.COD_CCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_AREANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.DESC_AREAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_AREANull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.DESC_AREAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFE_MESNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTA_DETALLE1.FE_MESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFE_MESNull()
            Me(Me.tableREPORTE_CC_CTA_DETALLE1.FE_MESColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_CC_SALDO2Row
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_CC_SALDO2 As REPORTE_CC_SALDO2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_CC_SALDO2 = CType(Me.Table,REPORTE_CC_SALDO2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.COD_CCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CC' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.COD_CCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_AREA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.DESC_AREAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_AREA' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.DESC_AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.DESC_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CUENTA' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.DESC_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.Column1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column1' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.Column2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column2' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.Column2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.Column3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column3' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.Column3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.Column4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column4' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.Column4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.Column5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column5' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.Column5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.Column6Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column6' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.Column6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.Column7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column7' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.Column7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column8() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.Column8Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column8' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.Column8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column9() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.Column9Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column9' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.Column9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.Column10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column10' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.Column10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.Column11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column11' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.Column11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.Column12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column12' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.Column12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_SALDO2.TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTAL' de la tabla 'REPORTE_CC_SALDO2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_SALDO2.TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.COD_CCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CCNull()
            Me(Me.tableREPORTE_CC_SALDO2.COD_CCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_AREANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.DESC_AREAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_AREANull()
            Me(Me.tableREPORTE_CC_SALDO2.DESC_AREAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.DESC_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CUENTANull()
            Me(Me.tableREPORTE_CC_SALDO2.DESC_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_CC_SALDO2.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableREPORTE_CC_SALDO2.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.Column2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn2Null()
            Me(Me.tableREPORTE_CC_SALDO2.Column2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn3Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.Column3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn3Null()
            Me(Me.tableREPORTE_CC_SALDO2.Column3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn4Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.Column4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn4Null()
            Me(Me.tableREPORTE_CC_SALDO2.Column4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn5Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.Column5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn5Null()
            Me(Me.tableREPORTE_CC_SALDO2.Column5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn6Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.Column6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn6Null()
            Me(Me.tableREPORTE_CC_SALDO2.Column6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn7Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.Column7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn7Null()
            Me(Me.tableREPORTE_CC_SALDO2.Column7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn8Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.Column8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn8Null()
            Me(Me.tableREPORTE_CC_SALDO2.Column8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn9Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.Column9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn9Null()
            Me(Me.tableREPORTE_CC_SALDO2.Column9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn10Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.Column10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn10Null()
            Me(Me.tableREPORTE_CC_SALDO2.Column10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn11Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.Column11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn11Null()
            Me(Me.tableREPORTE_CC_SALDO2.Column11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn12Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.Column12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn12Null()
            Me(Me.tableREPORTE_CC_SALDO2.Column12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOTALNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_SALDO2.TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOTALNull()
            Me(Me.tableREPORTE_CC_SALDO2.TOTALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_CC_CTAS2Row
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_CC_CTAS2 As REPORTE_CC_CTAS2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_CC_CTAS2 = CType(Me.Table,REPORTE_CC_CTAS2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.COD_CCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CC' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.COD_CCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_AREA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.DESC_AREAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_AREA' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.DESC_AREAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.DESC_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CUENTA' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.DESC_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.Column1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column1' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.Column2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column2' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.Column2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.Column3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column3' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.Column3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.Column4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column4' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.Column4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.Column5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column5' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.Column5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.Column6Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column6' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.Column6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.Column7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column7' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.Column7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column8() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.Column8Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column8' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.Column8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column9() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.Column9Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column9' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.Column9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.Column10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column10' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.Column10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.Column11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column11' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.Column11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.Column12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column12' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.Column12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CC_CTAS2.TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TOTAL' de la tabla 'REPORTE_CC_CTAS2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CC_CTAS2.TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.COD_CCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CCNull()
            Me(Me.tableREPORTE_CC_CTAS2.COD_CCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_AREANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.DESC_AREAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_AREANull()
            Me(Me.tableREPORTE_CC_CTAS2.DESC_AREAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.DESC_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CUENTANull()
            Me(Me.tableREPORTE_CC_CTAS2.DESC_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_CC_CTAS2.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableREPORTE_CC_CTAS2.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.Column2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn2Null()
            Me(Me.tableREPORTE_CC_CTAS2.Column2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn3Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.Column3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn3Null()
            Me(Me.tableREPORTE_CC_CTAS2.Column3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn4Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.Column4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn4Null()
            Me(Me.tableREPORTE_CC_CTAS2.Column4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn5Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.Column5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn5Null()
            Me(Me.tableREPORTE_CC_CTAS2.Column5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn6Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.Column6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn6Null()
            Me(Me.tableREPORTE_CC_CTAS2.Column6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn7Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.Column7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn7Null()
            Me(Me.tableREPORTE_CC_CTAS2.Column7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn8Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.Column8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn8Null()
            Me(Me.tableREPORTE_CC_CTAS2.Column8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn9Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.Column9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn9Null()
            Me(Me.tableREPORTE_CC_CTAS2.Column9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn10Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.Column10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn10Null()
            Me(Me.tableREPORTE_CC_CTAS2.Column10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn11Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.Column11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn11Null()
            Me(Me.tableREPORTE_CC_CTAS2.Column11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn12Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.Column12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn12Null()
            Me(Me.tableREPORTE_CC_CTAS2.Column12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOTALNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CC_CTAS2.TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOTALNull()
            Me(Me.tableREPORTE_CC_CTAS2.TOTALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_CC_CTASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_CC_CTASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_CC_CTASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_CC_CTASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_CC_CTA_DETALLE1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_CC_CTA_DETALLE1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_CC_CTA_DETALLE1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_CC_CTA_DETALLE1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_CC_SALDO2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_CC_SALDO2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_CC_SALDO2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_CC_SALDO2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_CC_CTAS2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_CC_CTAS2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_CC_CTAS2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_CC_CTAS2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DT_CC_T_CONTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REPORTE_CC_CTASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REPORTE_CC_CTAS"
            tableMapping.ColumnMappings.Add("COD_CC", "COD_CC")
            tableMapping.ColumnMappings.Add("DESC_AREA", "DESC_AREA")
            tableMapping.ColumnMappings.Add("DESC_CUENTA", "DESC_CUENTA")
            tableMapping.ColumnMappings.Add("COD_CUENTA", "COD_CUENTA")
            tableMapping.ColumnMappings.Add("Column1", "Column1")
            tableMapping.ColumnMappings.Add("Column2", "Column2")
            tableMapping.ColumnMappings.Add("Column3", "Column3")
            tableMapping.ColumnMappings.Add("Column4", "Column4")
            tableMapping.ColumnMappings.Add("Column5", "Column5")
            tableMapping.ColumnMappings.Add("Column6", "Column6")
            tableMapping.ColumnMappings.Add("Column7", "Column7")
            tableMapping.ColumnMappings.Add("Column8", "Column8")
            tableMapping.ColumnMappings.Add("Column9", "Column9")
            tableMapping.ColumnMappings.Add("Column10", "Column10")
            tableMapping.ColumnMappings.Add("Column11", "Column11")
            tableMapping.ColumnMappings.Add("Column12", "Column12")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CONTABILIDAD.My.MySettings.Default.BD_COI02
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.REPORTE_CC_CTAS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ST_CTA", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_CTA", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_MONEDA", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_AÑO", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_CC_T_CON.REPORTE_CC_CTASDataTable, ByVal ST_CTA As String, ByVal COD_CTA As String, ByVal COD_MONEDA As String, ByVal FE_AÑO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ST_CTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ST_CTA,String)
            End If
            If (COD_CTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(COD_CTA,String)
            End If
            If (COD_MONEDA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(COD_MONEDA,String)
            End If
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(FE_AÑO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ST_CTA As String, ByVal COD_CTA As String, ByVal COD_MONEDA As String, ByVal FE_AÑO As String) As DT_CC_T_CON.REPORTE_CC_CTASDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ST_CTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ST_CTA,String)
            End If
            If (COD_CTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(COD_CTA,String)
            End If
            If (COD_MONEDA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(COD_MONEDA,String)
            End If
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(FE_AÑO,String)
            End If
            Dim dataTable As DT_CC_T_CON.REPORTE_CC_CTASDataTable = New DT_CC_T_CON.REPORTE_CC_CTASDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REPORTE_CC_CTA_DETALLE1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REPORTE_CC_CTA_DETALLE1"
            tableMapping.ColumnMappings.Add("COD_COMP", "COD_COMP")
            tableMapping.ColumnMappings.Add("COD_AUX", "COD_AUX")
            tableMapping.ColumnMappings.Add("NRO_COMP", "NRO_COMP")
            tableMapping.ColumnMappings.Add("FECHA_DOC", "FECHA_DOC")
            tableMapping.ColumnMappings.Add("NRO_DOC", "NRO_DOC")
            tableMapping.ColumnMappings.Add("COD_DOC", "COD_DOC")
            tableMapping.ColumnMappings.Add("COD_PER", "COD_PER")
            tableMapping.ColumnMappings.Add("GLOSA", "GLOSA")
            tableMapping.ColumnMappings.Add("COD_REF", "COD_REF")
            tableMapping.ColumnMappings.Add("NRO_REF", "NRO_REF")
            tableMapping.ColumnMappings.Add("COD_MONEDA", "COD_MONEDA")
            tableMapping.ColumnMappings.Add("IMP_DOLARES", "IMP_DOLARES")
            tableMapping.ColumnMappings.Add("IMP_SOLES_DEBE", "IMP_SOLES_DEBE")
            tableMapping.ColumnMappings.Add("IMP_SOLES_HABER", "IMP_SOLES_HABER")
            tableMapping.ColumnMappings.Add("COD_CUENTA", "COD_CUENTA")
            tableMapping.ColumnMappings.Add("DESC_CUENTA", "DESC_CUENTA")
            tableMapping.ColumnMappings.Add("COD_CC", "COD_CC")
            tableMapping.ColumnMappings.Add("DESC_AREA", "DESC_AREA")
            tableMapping.ColumnMappings.Add("FE_MES", "FE_MES")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CONTABILIDAD.My.MySettings.Default.BD_COI02
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.REPORTE_CC_CTA_DETALLE1"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_CTA", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ST_CTA", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_CC", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ST_CC", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_AÑO", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_MES1", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_MES2", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_CC_T_CON.REPORTE_CC_CTA_DETALLE1DataTable, ByVal COD_CTA As String, ByVal ST_CTA As String, ByVal COD_CC As String, ByVal ST_CC As String, ByVal FE_AÑO As String, ByVal FE_MES1 As String, ByVal FE_MES2 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (COD_CTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(COD_CTA,String)
            End If
            If (ST_CTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ST_CTA,String)
            End If
            If (COD_CC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(COD_CC,String)
            End If
            If (ST_CC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(ST_CC,String)
            End If
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(FE_AÑO,String)
            End If
            If (FE_MES1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(FE_MES1,String)
            End If
            If (FE_MES2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(FE_MES2,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal COD_CTA As String, ByVal ST_CTA As String, ByVal COD_CC As String, ByVal ST_CC As String, ByVal FE_AÑO As String, ByVal FE_MES1 As String, ByVal FE_MES2 As String) As DT_CC_T_CON.REPORTE_CC_CTA_DETALLE1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (COD_CTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(COD_CTA,String)
            End If
            If (ST_CTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(ST_CTA,String)
            End If
            If (COD_CC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(COD_CC,String)
            End If
            If (ST_CC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(ST_CC,String)
            End If
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(FE_AÑO,String)
            End If
            If (FE_MES1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(FE_MES1,String)
            End If
            If (FE_MES2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(FE_MES2,String)
            End If
            Dim dataTable As DT_CC_T_CON.REPORTE_CC_CTA_DETALLE1DataTable = New DT_CC_T_CON.REPORTE_CC_CTA_DETALLE1DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
