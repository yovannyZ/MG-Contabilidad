'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5485
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DsUnidadNegocioConcepto"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DsUnidadNegocioConcepto
    Inherits Global.System.Data.DataSet
    
    Private tableDt_1 As Dt_1DataTable
    
    Private tableDt_2 As Dt_2DataTable
    
    Private tableDt_3 As Dt_3DataTable
    
    Private tableDtUnidadNegocio As DtUnidadNegocioDataTable
    
    Private tableDt_4 As Dt_4DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Dt_1")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_1DataTable(ds.Tables("Dt_1")))
            End If
            If (Not (ds.Tables("Dt_2")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_2DataTable(ds.Tables("Dt_2")))
            End If
            If (Not (ds.Tables("Dt_3")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_3DataTable(ds.Tables("Dt_3")))
            End If
            If (Not (ds.Tables("DtUnidadNegocio")) Is Nothing) Then
                MyBase.Tables.Add(New DtUnidadNegocioDataTable(ds.Tables("DtUnidadNegocio")))
            End If
            If (Not (ds.Tables("Dt_4")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_4DataTable(ds.Tables("Dt_4")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Dt_1() As Dt_1DataTable
        Get
            Return Me.tableDt_1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Dt_2() As Dt_2DataTable
        Get
            Return Me.tableDt_2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Dt_3() As Dt_3DataTable
        Get
            Return Me.tableDt_3
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DtUnidadNegocio() As DtUnidadNegocioDataTable
        Get
            Return Me.tableDtUnidadNegocio
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Dt_4() As Dt_4DataTable
        Get
            Return Me.tableDt_4
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DsUnidadNegocioConcepto = CType(MyBase.Clone,DsUnidadNegocioConcepto)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("Dt_1")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_1DataTable(ds.Tables("Dt_1")))
            End If
            If (Not (ds.Tables("Dt_2")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_2DataTable(ds.Tables("Dt_2")))
            End If
            If (Not (ds.Tables("Dt_3")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_3DataTable(ds.Tables("Dt_3")))
            End If
            If (Not (ds.Tables("DtUnidadNegocio")) Is Nothing) Then
                MyBase.Tables.Add(New DtUnidadNegocioDataTable(ds.Tables("DtUnidadNegocio")))
            End If
            If (Not (ds.Tables("Dt_4")) Is Nothing) Then
                MyBase.Tables.Add(New Dt_4DataTable(ds.Tables("Dt_4")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDt_1 = CType(MyBase.Tables("Dt_1"),Dt_1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableDt_1) Is Nothing) Then
                Me.tableDt_1.InitVars
            End If
        End If
        Me.tableDt_2 = CType(MyBase.Tables("Dt_2"),Dt_2DataTable)
        If (initTable = true) Then
            If (Not (Me.tableDt_2) Is Nothing) Then
                Me.tableDt_2.InitVars
            End If
        End If
        Me.tableDt_3 = CType(MyBase.Tables("Dt_3"),Dt_3DataTable)
        If (initTable = true) Then
            If (Not (Me.tableDt_3) Is Nothing) Then
                Me.tableDt_3.InitVars
            End If
        End If
        Me.tableDtUnidadNegocio = CType(MyBase.Tables("DtUnidadNegocio"),DtUnidadNegocioDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDtUnidadNegocio) Is Nothing) Then
                Me.tableDtUnidadNegocio.InitVars
            End If
        End If
        Me.tableDt_4 = CType(MyBase.Tables("Dt_4"),Dt_4DataTable)
        If (initTable = true) Then
            If (Not (Me.tableDt_4) Is Nothing) Then
                Me.tableDt_4.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DsUnidadNegocioConcepto"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DsUnidadNegocioConcepto.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDt_1 = New Dt_1DataTable
        MyBase.Tables.Add(Me.tableDt_1)
        Me.tableDt_2 = New Dt_2DataTable
        MyBase.Tables.Add(Me.tableDt_2)
        Me.tableDt_3 = New Dt_3DataTable
        MyBase.Tables.Add(Me.tableDt_3)
        Me.tableDtUnidadNegocio = New DtUnidadNegocioDataTable
        MyBase.Tables.Add(Me.tableDtUnidadNegocio)
        Me.tableDt_4 = New Dt_4DataTable
        MyBase.Tables.Add(Me.tableDt_4)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDt_1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDt_2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDt_3() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDtUnidadNegocio() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDt_4() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DsUnidadNegocioConcepto = New DsUnidadNegocioConcepto
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub Dt_1RowChangeEventHandler(ByVal sender As Object, ByVal e As Dt_1RowChangeEvent)
    
    Public Delegate Sub Dt_2RowChangeEventHandler(ByVal sender As Object, ByVal e As Dt_2RowChangeEvent)
    
    Public Delegate Sub Dt_3RowChangeEventHandler(ByVal sender As Object, ByVal e As Dt_3RowChangeEvent)
    
    Public Delegate Sub DtUnidadNegocioRowChangeEventHandler(ByVal sender As Object, ByVal e As DtUnidadNegocioRowChangeEvent)
    
    Public Delegate Sub Dt_4RowChangeEventHandler(ByVal sender As Object, ByVal e As Dt_4RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Dt_1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCodConcepto As Global.System.Data.DataColumn
        
        Private columnDescConcepto As Global.System.Data.DataColumn
        
        Private columnTipo As Global.System.Data.DataColumn
        
        Private columnCodNivel As Global.System.Data.DataColumn
        
        Private columnDescNivel As Global.System.Data.DataColumn
        
        Private columnUN1 As Global.System.Data.DataColumn
        
        Private columnUN2 As Global.System.Data.DataColumn
        
        Private columnUN3 As Global.System.Data.DataColumn
        
        Private columnUN4 As Global.System.Data.DataColumn
        
        Private columnUN5 As Global.System.Data.DataColumn
        
        Private columnUN6 As Global.System.Data.DataColumn
        
        Private columnUN7 As Global.System.Data.DataColumn
        
        Private columnUN8 As Global.System.Data.DataColumn
        
        Private columnUN9 As Global.System.Data.DataColumn
        
        Private columnUN10 As Global.System.Data.DataColumn
        
        Private columnSALDO01 As Global.System.Data.DataColumn
        
        Private columnSALDO02 As Global.System.Data.DataColumn
        
        Private columnSALDO03 As Global.System.Data.DataColumn
        
        Private columnSALDO04 As Global.System.Data.DataColumn
        
        Private columnSALDO05 As Global.System.Data.DataColumn
        
        Private columnSALDO06 As Global.System.Data.DataColumn
        
        Private columnSALDO07 As Global.System.Data.DataColumn
        
        Private columnSALDO08 As Global.System.Data.DataColumn
        
        Private columnSALDO09 As Global.System.Data.DataColumn
        
        Private columnSALDO10 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Dt_1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodNivelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodNivel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescNivelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescNivel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Dt_1Row
            Get
                Return CType(Me.Rows(index),Dt_1Row)
            End Get
        End Property
        
        Public Event Dt_1RowChanging As Dt_1RowChangeEventHandler
        
        Public Event Dt_1RowChanged As Dt_1RowChangeEventHandler
        
        Public Event Dt_1RowDeleting As Dt_1RowChangeEventHandler
        
        Public Event Dt_1RowDeleted As Dt_1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDt_1Row(ByVal row As Dt_1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDt_1Row( _
                    ByVal CodConcepto As String,  _
                    ByVal DescConcepto As String,  _
                    ByVal Tipo As String,  _
                    ByVal CodNivel As String,  _
                    ByVal DescNivel As String,  _
                    ByVal UN1 As Decimal,  _
                    ByVal UN2 As Decimal,  _
                    ByVal UN3 As Decimal,  _
                    ByVal UN4 As Decimal,  _
                    ByVal UN5 As Decimal,  _
                    ByVal UN6 As Decimal,  _
                    ByVal UN7 As Decimal,  _
                    ByVal UN8 As Decimal,  _
                    ByVal UN9 As Decimal,  _
                    ByVal UN10 As Decimal,  _
                    ByVal SALDO01 As Decimal,  _
                    ByVal SALDO02 As Decimal,  _
                    ByVal SALDO03 As Decimal,  _
                    ByVal SALDO04 As Decimal,  _
                    ByVal SALDO05 As Decimal,  _
                    ByVal SALDO06 As Decimal,  _
                    ByVal SALDO07 As Decimal,  _
                    ByVal SALDO08 As Decimal,  _
                    ByVal SALDO09 As Decimal,  _
                    ByVal SALDO10 As Decimal) As Dt_1Row
            Dim rowDt_1Row As Dt_1Row = CType(Me.NewRow,Dt_1Row)
            Dim columnValuesArray() As Object = New Object() {CodConcepto, DescConcepto, Tipo, CodNivel, DescNivel, UN1, UN2, UN3, UN4, UN5, UN6, UN7, UN8, UN9, UN10, SALDO01, SALDO02, SALDO03, SALDO04, SALDO05, SALDO06, SALDO07, SALDO08, SALDO09, SALDO10}
            rowDt_1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowDt_1Row)
            Return rowDt_1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Dt_1DataTable = CType(MyBase.Clone,Dt_1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Dt_1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCodConcepto = MyBase.Columns("CodConcepto")
            Me.columnDescConcepto = MyBase.Columns("DescConcepto")
            Me.columnTipo = MyBase.Columns("Tipo")
            Me.columnCodNivel = MyBase.Columns("CodNivel")
            Me.columnDescNivel = MyBase.Columns("DescNivel")
            Me.columnUN1 = MyBase.Columns("UN1")
            Me.columnUN2 = MyBase.Columns("UN2")
            Me.columnUN3 = MyBase.Columns("UN3")
            Me.columnUN4 = MyBase.Columns("UN4")
            Me.columnUN5 = MyBase.Columns("UN5")
            Me.columnUN6 = MyBase.Columns("UN6")
            Me.columnUN7 = MyBase.Columns("UN7")
            Me.columnUN8 = MyBase.Columns("UN8")
            Me.columnUN9 = MyBase.Columns("UN9")
            Me.columnUN10 = MyBase.Columns("UN10")
            Me.columnSALDO01 = MyBase.Columns("SALDO01")
            Me.columnSALDO02 = MyBase.Columns("SALDO02")
            Me.columnSALDO03 = MyBase.Columns("SALDO03")
            Me.columnSALDO04 = MyBase.Columns("SALDO04")
            Me.columnSALDO05 = MyBase.Columns("SALDO05")
            Me.columnSALDO06 = MyBase.Columns("SALDO06")
            Me.columnSALDO07 = MyBase.Columns("SALDO07")
            Me.columnSALDO08 = MyBase.Columns("SALDO08")
            Me.columnSALDO09 = MyBase.Columns("SALDO09")
            Me.columnSALDO10 = MyBase.Columns("SALDO10")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCodConcepto = New Global.System.Data.DataColumn("CodConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodConcepto)
            Me.columnDescConcepto = New Global.System.Data.DataColumn("DescConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescConcepto)
            Me.columnTipo = New Global.System.Data.DataColumn("Tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipo)
            Me.columnCodNivel = New Global.System.Data.DataColumn("CodNivel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodNivel)
            Me.columnDescNivel = New Global.System.Data.DataColumn("DescNivel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescNivel)
            Me.columnUN1 = New Global.System.Data.DataColumn("UN1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN1)
            Me.columnUN2 = New Global.System.Data.DataColumn("UN2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN2)
            Me.columnUN3 = New Global.System.Data.DataColumn("UN3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN3)
            Me.columnUN4 = New Global.System.Data.DataColumn("UN4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN4)
            Me.columnUN5 = New Global.System.Data.DataColumn("UN5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN5)
            Me.columnUN6 = New Global.System.Data.DataColumn("UN6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN6)
            Me.columnUN7 = New Global.System.Data.DataColumn("UN7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN7)
            Me.columnUN8 = New Global.System.Data.DataColumn("UN8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN8)
            Me.columnUN9 = New Global.System.Data.DataColumn("UN9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN9)
            Me.columnUN10 = New Global.System.Data.DataColumn("UN10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN10)
            Me.columnSALDO01 = New Global.System.Data.DataColumn("SALDO01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO01)
            Me.columnSALDO02 = New Global.System.Data.DataColumn("SALDO02", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO02)
            Me.columnSALDO03 = New Global.System.Data.DataColumn("SALDO03", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO03)
            Me.columnSALDO04 = New Global.System.Data.DataColumn("SALDO04", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO04)
            Me.columnSALDO05 = New Global.System.Data.DataColumn("SALDO05", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO05)
            Me.columnSALDO06 = New Global.System.Data.DataColumn("SALDO06", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO06)
            Me.columnSALDO07 = New Global.System.Data.DataColumn("SALDO07", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO07)
            Me.columnSALDO08 = New Global.System.Data.DataColumn("SALDO08", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO08)
            Me.columnSALDO09 = New Global.System.Data.DataColumn("SALDO09", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO09)
            Me.columnSALDO10 = New Global.System.Data.DataColumn("SALDO10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO10)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDt_1Row() As Dt_1Row
            Return CType(Me.NewRow,Dt_1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Dt_1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Dt_1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Dt_1RowChangedEvent) Is Nothing) Then
                RaiseEvent Dt_1RowChanged(Me, New Dt_1RowChangeEvent(CType(e.Row,Dt_1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Dt_1RowChangingEvent) Is Nothing) Then
                RaiseEvent Dt_1RowChanging(Me, New Dt_1RowChangeEvent(CType(e.Row,Dt_1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Dt_1RowDeletedEvent) Is Nothing) Then
                RaiseEvent Dt_1RowDeleted(Me, New Dt_1RowChangeEvent(CType(e.Row,Dt_1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Dt_1RowDeletingEvent) Is Nothing) Then
                RaiseEvent Dt_1RowDeleting(Me, New Dt_1RowChangeEvent(CType(e.Row,Dt_1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDt_1Row(ByVal row As Dt_1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DsUnidadNegocioConcepto = New DsUnidadNegocioConcepto
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Dt_1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Dt_2DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCodConcepto As Global.System.Data.DataColumn
        
        Private columnDescConcepto As Global.System.Data.DataColumn
        
        Private columnTipo As Global.System.Data.DataColumn
        
        Private columnCodUnidadNegocio As Global.System.Data.DataColumn
        
        Private columnDescUnidadNegocio As Global.System.Data.DataColumn
        
        Private columnCodNivel As Global.System.Data.DataColumn
        
        Private columnDescNivel As Global.System.Data.DataColumn
        
        Private columnEnero As Global.System.Data.DataColumn
        
        Private columnFebrero As Global.System.Data.DataColumn
        
        Private columnMarzo As Global.System.Data.DataColumn
        
        Private columnAbril As Global.System.Data.DataColumn
        
        Private columnMayo As Global.System.Data.DataColumn
        
        Private columnJunio As Global.System.Data.DataColumn
        
        Private columnJulio As Global.System.Data.DataColumn
        
        Private columnAgosto As Global.System.Data.DataColumn
        
        Private columnSeptiembre As Global.System.Data.DataColumn
        
        Private columnOctubre As Global.System.Data.DataColumn
        
        Private columnNoviembre As Global.System.Data.DataColumn
        
        Private columnDiciembre As Global.System.Data.DataColumn
        
        Private columnSaldo01 As Global.System.Data.DataColumn
        
        Private columnSaldo02 As Global.System.Data.DataColumn
        
        Private columnSaldo03 As Global.System.Data.DataColumn
        
        Private columnSaldo04 As Global.System.Data.DataColumn
        
        Private columnSaldo05 As Global.System.Data.DataColumn
        
        Private columnSaldo06 As Global.System.Data.DataColumn
        
        Private columnSaldo07 As Global.System.Data.DataColumn
        
        Private columnSaldo08 As Global.System.Data.DataColumn
        
        Private columnSaldo09 As Global.System.Data.DataColumn
        
        Private columnSaldo10 As Global.System.Data.DataColumn
        
        Private columnSaldo11 As Global.System.Data.DataColumn
        
        Private columnSaldo12 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Dt_2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodUnidadNegocioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodUnidadNegocio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescUnidadNegocioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescUnidadNegocio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodNivelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodNivel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescNivelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescNivel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EneroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FebreroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFebrero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MarzoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMarzo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AbrilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbril
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MayoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMayo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JunioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJunio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JulioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJulio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AgostoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAgosto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SeptiembreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeptiembre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OctubreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOctubre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoviembreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoviembre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DiciembreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiciembre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Dt_2Row
            Get
                Return CType(Me.Rows(index),Dt_2Row)
            End Get
        End Property
        
        Public Event Dt_2RowChanging As Dt_2RowChangeEventHandler
        
        Public Event Dt_2RowChanged As Dt_2RowChangeEventHandler
        
        Public Event Dt_2RowDeleting As Dt_2RowChangeEventHandler
        
        Public Event Dt_2RowDeleted As Dt_2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDt_2Row(ByVal row As Dt_2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDt_2Row( _
                    ByVal CodConcepto As String,  _
                    ByVal DescConcepto As String,  _
                    ByVal Tipo As String,  _
                    ByVal CodUnidadNegocio As String,  _
                    ByVal DescUnidadNegocio As String,  _
                    ByVal CodNivel As String,  _
                    ByVal DescNivel As String,  _
                    ByVal Enero As Decimal,  _
                    ByVal Febrero As Decimal,  _
                    ByVal Marzo As Decimal,  _
                    ByVal Abril As Decimal,  _
                    ByVal Mayo As Decimal,  _
                    ByVal Junio As Decimal,  _
                    ByVal Julio As Decimal,  _
                    ByVal Agosto As Decimal,  _
                    ByVal Septiembre As Decimal,  _
                    ByVal Octubre As Decimal,  _
                    ByVal Noviembre As Decimal,  _
                    ByVal Diciembre As Decimal,  _
                    ByVal Saldo01 As Decimal,  _
                    ByVal Saldo02 As Decimal,  _
                    ByVal Saldo03 As Decimal,  _
                    ByVal Saldo04 As Decimal,  _
                    ByVal Saldo05 As Decimal,  _
                    ByVal Saldo06 As Decimal,  _
                    ByVal Saldo07 As Decimal,  _
                    ByVal Saldo08 As Decimal,  _
                    ByVal Saldo09 As Decimal,  _
                    ByVal Saldo10 As Decimal,  _
                    ByVal Saldo11 As Decimal,  _
                    ByVal Saldo12 As Decimal) As Dt_2Row
            Dim rowDt_2Row As Dt_2Row = CType(Me.NewRow,Dt_2Row)
            Dim columnValuesArray() As Object = New Object() {CodConcepto, DescConcepto, Tipo, CodUnidadNegocio, DescUnidadNegocio, CodNivel, DescNivel, Enero, Febrero, Marzo, Abril, Mayo, Junio, Julio, Agosto, Septiembre, Octubre, Noviembre, Diciembre, Saldo01, Saldo02, Saldo03, Saldo04, Saldo05, Saldo06, Saldo07, Saldo08, Saldo09, Saldo10, Saldo11, Saldo12}
            rowDt_2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowDt_2Row)
            Return rowDt_2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Dt_2DataTable = CType(MyBase.Clone,Dt_2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Dt_2DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCodConcepto = MyBase.Columns("CodConcepto")
            Me.columnDescConcepto = MyBase.Columns("DescConcepto")
            Me.columnTipo = MyBase.Columns("Tipo")
            Me.columnCodUnidadNegocio = MyBase.Columns("CodUnidadNegocio")
            Me.columnDescUnidadNegocio = MyBase.Columns("DescUnidadNegocio")
            Me.columnCodNivel = MyBase.Columns("CodNivel")
            Me.columnDescNivel = MyBase.Columns("DescNivel")
            Me.columnEnero = MyBase.Columns("Enero")
            Me.columnFebrero = MyBase.Columns("Febrero")
            Me.columnMarzo = MyBase.Columns("Marzo")
            Me.columnAbril = MyBase.Columns("Abril")
            Me.columnMayo = MyBase.Columns("Mayo")
            Me.columnJunio = MyBase.Columns("Junio")
            Me.columnJulio = MyBase.Columns("Julio")
            Me.columnAgosto = MyBase.Columns("Agosto")
            Me.columnSeptiembre = MyBase.Columns("Septiembre")
            Me.columnOctubre = MyBase.Columns("Octubre")
            Me.columnNoviembre = MyBase.Columns("Noviembre")
            Me.columnDiciembre = MyBase.Columns("Diciembre")
            Me.columnSaldo01 = MyBase.Columns("Saldo01")
            Me.columnSaldo02 = MyBase.Columns("Saldo02")
            Me.columnSaldo03 = MyBase.Columns("Saldo03")
            Me.columnSaldo04 = MyBase.Columns("Saldo04")
            Me.columnSaldo05 = MyBase.Columns("Saldo05")
            Me.columnSaldo06 = MyBase.Columns("Saldo06")
            Me.columnSaldo07 = MyBase.Columns("Saldo07")
            Me.columnSaldo08 = MyBase.Columns("Saldo08")
            Me.columnSaldo09 = MyBase.Columns("Saldo09")
            Me.columnSaldo10 = MyBase.Columns("Saldo10")
            Me.columnSaldo11 = MyBase.Columns("Saldo11")
            Me.columnSaldo12 = MyBase.Columns("Saldo12")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCodConcepto = New Global.System.Data.DataColumn("CodConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodConcepto)
            Me.columnDescConcepto = New Global.System.Data.DataColumn("DescConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescConcepto)
            Me.columnTipo = New Global.System.Data.DataColumn("Tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipo)
            Me.columnCodUnidadNegocio = New Global.System.Data.DataColumn("CodUnidadNegocio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodUnidadNegocio)
            Me.columnDescUnidadNegocio = New Global.System.Data.DataColumn("DescUnidadNegocio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescUnidadNegocio)
            Me.columnCodNivel = New Global.System.Data.DataColumn("CodNivel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodNivel)
            Me.columnDescNivel = New Global.System.Data.DataColumn("DescNivel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescNivel)
            Me.columnEnero = New Global.System.Data.DataColumn("Enero", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnero)
            Me.columnFebrero = New Global.System.Data.DataColumn("Febrero", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFebrero)
            Me.columnMarzo = New Global.System.Data.DataColumn("Marzo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMarzo)
            Me.columnAbril = New Global.System.Data.DataColumn("Abril", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbril)
            Me.columnMayo = New Global.System.Data.DataColumn("Mayo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMayo)
            Me.columnJunio = New Global.System.Data.DataColumn("Junio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJunio)
            Me.columnJulio = New Global.System.Data.DataColumn("Julio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJulio)
            Me.columnAgosto = New Global.System.Data.DataColumn("Agosto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAgosto)
            Me.columnSeptiembre = New Global.System.Data.DataColumn("Septiembre", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeptiembre)
            Me.columnOctubre = New Global.System.Data.DataColumn("Octubre", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOctubre)
            Me.columnNoviembre = New Global.System.Data.DataColumn("Noviembre", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoviembre)
            Me.columnDiciembre = New Global.System.Data.DataColumn("Diciembre", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiciembre)
            Me.columnSaldo01 = New Global.System.Data.DataColumn("Saldo01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo01)
            Me.columnSaldo02 = New Global.System.Data.DataColumn("Saldo02", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo02)
            Me.columnSaldo03 = New Global.System.Data.DataColumn("Saldo03", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo03)
            Me.columnSaldo04 = New Global.System.Data.DataColumn("Saldo04", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo04)
            Me.columnSaldo05 = New Global.System.Data.DataColumn("Saldo05", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo05)
            Me.columnSaldo06 = New Global.System.Data.DataColumn("Saldo06", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo06)
            Me.columnSaldo07 = New Global.System.Data.DataColumn("Saldo07", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo07)
            Me.columnSaldo08 = New Global.System.Data.DataColumn("Saldo08", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo08)
            Me.columnSaldo09 = New Global.System.Data.DataColumn("Saldo09", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo09)
            Me.columnSaldo10 = New Global.System.Data.DataColumn("Saldo10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo10)
            Me.columnSaldo11 = New Global.System.Data.DataColumn("Saldo11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo11)
            Me.columnSaldo12 = New Global.System.Data.DataColumn("Saldo12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo12)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDt_2Row() As Dt_2Row
            Return CType(Me.NewRow,Dt_2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Dt_2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Dt_2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Dt_2RowChangedEvent) Is Nothing) Then
                RaiseEvent Dt_2RowChanged(Me, New Dt_2RowChangeEvent(CType(e.Row,Dt_2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Dt_2RowChangingEvent) Is Nothing) Then
                RaiseEvent Dt_2RowChanging(Me, New Dt_2RowChangeEvent(CType(e.Row,Dt_2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Dt_2RowDeletedEvent) Is Nothing) Then
                RaiseEvent Dt_2RowDeleted(Me, New Dt_2RowChangeEvent(CType(e.Row,Dt_2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Dt_2RowDeletingEvent) Is Nothing) Then
                RaiseEvent Dt_2RowDeleting(Me, New Dt_2RowChangeEvent(CType(e.Row,Dt_2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDt_2Row(ByVal row As Dt_2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DsUnidadNegocioConcepto = New DsUnidadNegocioConcepto
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Dt_2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Dt_3DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCodConcepto As Global.System.Data.DataColumn
        
        Private columnDescConcepto As Global.System.Data.DataColumn
        
        Private columnCodCuenta As Global.System.Data.DataColumn
        
        Private columnDescCuenta As Global.System.Data.DataColumn
        
        Private columnCodCC As Global.System.Data.DataColumn
        
        Private columnDescCC As Global.System.Data.DataColumn
        
        Private columnTipo As Global.System.Data.DataColumn
        
        Private columnCodNivel As Global.System.Data.DataColumn
        
        Private columnDescNivel As Global.System.Data.DataColumn
        
        Private columnUN1 As Global.System.Data.DataColumn
        
        Private columnUN2 As Global.System.Data.DataColumn
        
        Private columnUN3 As Global.System.Data.DataColumn
        
        Private columnUN4 As Global.System.Data.DataColumn
        
        Private columnUN5 As Global.System.Data.DataColumn
        
        Private columnUN6 As Global.System.Data.DataColumn
        
        Private columnUN7 As Global.System.Data.DataColumn
        
        Private columnUN8 As Global.System.Data.DataColumn
        
        Private columnUN9 As Global.System.Data.DataColumn
        
        Private columnUN10 As Global.System.Data.DataColumn
        
        Private columnSALDO01 As Global.System.Data.DataColumn
        
        Private columnSALDO02 As Global.System.Data.DataColumn
        
        Private columnSALDO03 As Global.System.Data.DataColumn
        
        Private columnSALDO04 As Global.System.Data.DataColumn
        
        Private columnSALDO05 As Global.System.Data.DataColumn
        
        Private columnSALDO06 As Global.System.Data.DataColumn
        
        Private columnSALDO07 As Global.System.Data.DataColumn
        
        Private columnSALDO08 As Global.System.Data.DataColumn
        
        Private columnSALDO09 As Global.System.Data.DataColumn
        
        Private columnSALDO10 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Dt_3"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodCuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodCuenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescCuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescCuenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodCCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodCC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescCCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescCC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodNivelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodNivel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescNivelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescNivel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UN10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Dt_3Row
            Get
                Return CType(Me.Rows(index),Dt_3Row)
            End Get
        End Property
        
        Public Event Dt_3RowChanging As Dt_3RowChangeEventHandler
        
        Public Event Dt_3RowChanged As Dt_3RowChangeEventHandler
        
        Public Event Dt_3RowDeleting As Dt_3RowChangeEventHandler
        
        Public Event Dt_3RowDeleted As Dt_3RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDt_3Row(ByVal row As Dt_3Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDt_3Row( _
                    ByVal CodConcepto As String,  _
                    ByVal DescConcepto As String,  _
                    ByVal CodCuenta As String,  _
                    ByVal DescCuenta As String,  _
                    ByVal CodCC As String,  _
                    ByVal DescCC As String,  _
                    ByVal Tipo As String,  _
                    ByVal CodNivel As String,  _
                    ByVal DescNivel As String,  _
                    ByVal UN1 As Decimal,  _
                    ByVal UN2 As Decimal,  _
                    ByVal UN3 As Decimal,  _
                    ByVal UN4 As Decimal,  _
                    ByVal UN5 As Decimal,  _
                    ByVal UN6 As Decimal,  _
                    ByVal UN7 As Decimal,  _
                    ByVal UN8 As Decimal,  _
                    ByVal UN9 As Decimal,  _
                    ByVal UN10 As Decimal,  _
                    ByVal SALDO01 As Decimal,  _
                    ByVal SALDO02 As Decimal,  _
                    ByVal SALDO03 As Decimal,  _
                    ByVal SALDO04 As Decimal,  _
                    ByVal SALDO05 As Decimal,  _
                    ByVal SALDO06 As Decimal,  _
                    ByVal SALDO07 As Decimal,  _
                    ByVal SALDO08 As Decimal,  _
                    ByVal SALDO09 As Decimal,  _
                    ByVal SALDO10 As Decimal) As Dt_3Row
            Dim rowDt_3Row As Dt_3Row = CType(Me.NewRow,Dt_3Row)
            Dim columnValuesArray() As Object = New Object() {CodConcepto, DescConcepto, CodCuenta, DescCuenta, CodCC, DescCC, Tipo, CodNivel, DescNivel, UN1, UN2, UN3, UN4, UN5, UN6, UN7, UN8, UN9, UN10, SALDO01, SALDO02, SALDO03, SALDO04, SALDO05, SALDO06, SALDO07, SALDO08, SALDO09, SALDO10}
            rowDt_3Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowDt_3Row)
            Return rowDt_3Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Dt_3DataTable = CType(MyBase.Clone,Dt_3DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Dt_3DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCodConcepto = MyBase.Columns("CodConcepto")
            Me.columnDescConcepto = MyBase.Columns("DescConcepto")
            Me.columnCodCuenta = MyBase.Columns("CodCuenta")
            Me.columnDescCuenta = MyBase.Columns("DescCuenta")
            Me.columnCodCC = MyBase.Columns("CodCC")
            Me.columnDescCC = MyBase.Columns("DescCC")
            Me.columnTipo = MyBase.Columns("Tipo")
            Me.columnCodNivel = MyBase.Columns("CodNivel")
            Me.columnDescNivel = MyBase.Columns("DescNivel")
            Me.columnUN1 = MyBase.Columns("UN1")
            Me.columnUN2 = MyBase.Columns("UN2")
            Me.columnUN3 = MyBase.Columns("UN3")
            Me.columnUN4 = MyBase.Columns("UN4")
            Me.columnUN5 = MyBase.Columns("UN5")
            Me.columnUN6 = MyBase.Columns("UN6")
            Me.columnUN7 = MyBase.Columns("UN7")
            Me.columnUN8 = MyBase.Columns("UN8")
            Me.columnUN9 = MyBase.Columns("UN9")
            Me.columnUN10 = MyBase.Columns("UN10")
            Me.columnSALDO01 = MyBase.Columns("SALDO01")
            Me.columnSALDO02 = MyBase.Columns("SALDO02")
            Me.columnSALDO03 = MyBase.Columns("SALDO03")
            Me.columnSALDO04 = MyBase.Columns("SALDO04")
            Me.columnSALDO05 = MyBase.Columns("SALDO05")
            Me.columnSALDO06 = MyBase.Columns("SALDO06")
            Me.columnSALDO07 = MyBase.Columns("SALDO07")
            Me.columnSALDO08 = MyBase.Columns("SALDO08")
            Me.columnSALDO09 = MyBase.Columns("SALDO09")
            Me.columnSALDO10 = MyBase.Columns("SALDO10")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCodConcepto = New Global.System.Data.DataColumn("CodConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodConcepto)
            Me.columnDescConcepto = New Global.System.Data.DataColumn("DescConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescConcepto)
            Me.columnCodCuenta = New Global.System.Data.DataColumn("CodCuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodCuenta)
            Me.columnDescCuenta = New Global.System.Data.DataColumn("DescCuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescCuenta)
            Me.columnCodCC = New Global.System.Data.DataColumn("CodCC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodCC)
            Me.columnDescCC = New Global.System.Data.DataColumn("DescCC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescCC)
            Me.columnTipo = New Global.System.Data.DataColumn("Tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipo)
            Me.columnCodNivel = New Global.System.Data.DataColumn("CodNivel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodNivel)
            Me.columnDescNivel = New Global.System.Data.DataColumn("DescNivel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescNivel)
            Me.columnUN1 = New Global.System.Data.DataColumn("UN1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN1)
            Me.columnUN2 = New Global.System.Data.DataColumn("UN2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN2)
            Me.columnUN3 = New Global.System.Data.DataColumn("UN3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN3)
            Me.columnUN4 = New Global.System.Data.DataColumn("UN4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN4)
            Me.columnUN5 = New Global.System.Data.DataColumn("UN5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN5)
            Me.columnUN6 = New Global.System.Data.DataColumn("UN6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN6)
            Me.columnUN7 = New Global.System.Data.DataColumn("UN7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN7)
            Me.columnUN8 = New Global.System.Data.DataColumn("UN8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN8)
            Me.columnUN9 = New Global.System.Data.DataColumn("UN9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN9)
            Me.columnUN10 = New Global.System.Data.DataColumn("UN10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN10)
            Me.columnSALDO01 = New Global.System.Data.DataColumn("SALDO01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO01)
            Me.columnSALDO02 = New Global.System.Data.DataColumn("SALDO02", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO02)
            Me.columnSALDO03 = New Global.System.Data.DataColumn("SALDO03", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO03)
            Me.columnSALDO04 = New Global.System.Data.DataColumn("SALDO04", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO04)
            Me.columnSALDO05 = New Global.System.Data.DataColumn("SALDO05", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO05)
            Me.columnSALDO06 = New Global.System.Data.DataColumn("SALDO06", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO06)
            Me.columnSALDO07 = New Global.System.Data.DataColumn("SALDO07", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO07)
            Me.columnSALDO08 = New Global.System.Data.DataColumn("SALDO08", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO08)
            Me.columnSALDO09 = New Global.System.Data.DataColumn("SALDO09", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO09)
            Me.columnSALDO10 = New Global.System.Data.DataColumn("SALDO10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO10)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDt_3Row() As Dt_3Row
            Return CType(Me.NewRow,Dt_3Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Dt_3Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Dt_3Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Dt_3RowChangedEvent) Is Nothing) Then
                RaiseEvent Dt_3RowChanged(Me, New Dt_3RowChangeEvent(CType(e.Row,Dt_3Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Dt_3RowChangingEvent) Is Nothing) Then
                RaiseEvent Dt_3RowChanging(Me, New Dt_3RowChangeEvent(CType(e.Row,Dt_3Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Dt_3RowDeletedEvent) Is Nothing) Then
                RaiseEvent Dt_3RowDeleted(Me, New Dt_3RowChangeEvent(CType(e.Row,Dt_3Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Dt_3RowDeletingEvent) Is Nothing) Then
                RaiseEvent Dt_3RowDeleting(Me, New Dt_3RowChangeEvent(CType(e.Row,Dt_3Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDt_3Row(ByVal row As Dt_3Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DsUnidadNegocioConcepto = New DsUnidadNegocioConcepto
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Dt_3DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DtUnidadNegocioDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCodigo As Global.System.Data.DataColumn
        
        Private columnDescripcion As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DtUnidadNegocio"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DtUnidadNegocioRow
            Get
                Return CType(Me.Rows(index),DtUnidadNegocioRow)
            End Get
        End Property
        
        Public Event DtUnidadNegocioRowChanging As DtUnidadNegocioRowChangeEventHandler
        
        Public Event DtUnidadNegocioRowChanged As DtUnidadNegocioRowChangeEventHandler
        
        Public Event DtUnidadNegocioRowDeleting As DtUnidadNegocioRowChangeEventHandler
        
        Public Event DtUnidadNegocioRowDeleted As DtUnidadNegocioRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDtUnidadNegocioRow(ByVal row As DtUnidadNegocioRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDtUnidadNegocioRow(ByVal Codigo As String, ByVal Descripcion As String) As DtUnidadNegocioRow
            Dim rowDtUnidadNegocioRow As DtUnidadNegocioRow = CType(Me.NewRow,DtUnidadNegocioRow)
            Dim columnValuesArray() As Object = New Object() {Codigo, Descripcion}
            rowDtUnidadNegocioRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDtUnidadNegocioRow)
            Return rowDtUnidadNegocioRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DtUnidadNegocioDataTable = CType(MyBase.Clone,DtUnidadNegocioDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DtUnidadNegocioDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCodigo = MyBase.Columns("Codigo")
            Me.columnDescripcion = MyBase.Columns("Descripcion")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCodigo = New Global.System.Data.DataColumn("Codigo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigo)
            Me.columnDescripcion = New Global.System.Data.DataColumn("Descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcion)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDtUnidadNegocioRow() As DtUnidadNegocioRow
            Return CType(Me.NewRow,DtUnidadNegocioRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DtUnidadNegocioRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DtUnidadNegocioRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DtUnidadNegocioRowChangedEvent) Is Nothing) Then
                RaiseEvent DtUnidadNegocioRowChanged(Me, New DtUnidadNegocioRowChangeEvent(CType(e.Row,DtUnidadNegocioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DtUnidadNegocioRowChangingEvent) Is Nothing) Then
                RaiseEvent DtUnidadNegocioRowChanging(Me, New DtUnidadNegocioRowChangeEvent(CType(e.Row,DtUnidadNegocioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DtUnidadNegocioRowDeletedEvent) Is Nothing) Then
                RaiseEvent DtUnidadNegocioRowDeleted(Me, New DtUnidadNegocioRowChangeEvent(CType(e.Row,DtUnidadNegocioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DtUnidadNegocioRowDeletingEvent) Is Nothing) Then
                RaiseEvent DtUnidadNegocioRowDeleting(Me, New DtUnidadNegocioRowChangeEvent(CType(e.Row,DtUnidadNegocioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDtUnidadNegocioRow(ByVal row As DtUnidadNegocioRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DsUnidadNegocioConcepto = New DsUnidadNegocioConcepto
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DtUnidadNegocioDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Dt_4DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCodCoencepto As Global.System.Data.DataColumn
        
        Private columnDescConcepto As Global.System.Data.DataColumn
        
        Private columnCodCuenta As Global.System.Data.DataColumn
        
        Private columnDesCuenta As Global.System.Data.DataColumn
        
        Private columnCodCC As Global.System.Data.DataColumn
        
        Private columnDesCC As Global.System.Data.DataColumn
        
        Private columnCodUnidadNegocio As Global.System.Data.DataColumn
        
        Private columnDescUnidadNegocio As Global.System.Data.DataColumn
        
        Private columnTipo As Global.System.Data.DataColumn
        
        Private columnCodNivel As Global.System.Data.DataColumn
        
        Private columnDescNivel As Global.System.Data.DataColumn
        
        Private columnEnero As Global.System.Data.DataColumn
        
        Private columnFebrero As Global.System.Data.DataColumn
        
        Private columnMarzo As Global.System.Data.DataColumn
        
        Private columnAbril As Global.System.Data.DataColumn
        
        Private columnMayo As Global.System.Data.DataColumn
        
        Private columnJunio As Global.System.Data.DataColumn
        
        Private columnJulio As Global.System.Data.DataColumn
        
        Private columnAgosto As Global.System.Data.DataColumn
        
        Private columnSeptiembre As Global.System.Data.DataColumn
        
        Private columnOctubre As Global.System.Data.DataColumn
        
        Private columnNoviembre As Global.System.Data.DataColumn
        
        Private columnDiciembre As Global.System.Data.DataColumn
        
        Private columnSALDO01 As Global.System.Data.DataColumn
        
        Private columnSALDO02 As Global.System.Data.DataColumn
        
        Private columnSALDO03 As Global.System.Data.DataColumn
        
        Private columnSaldo04 As Global.System.Data.DataColumn
        
        Private columnSALDO05 As Global.System.Data.DataColumn
        
        Private columnSALDO06 As Global.System.Data.DataColumn
        
        Private columnSALDO07 As Global.System.Data.DataColumn
        
        Private columnSALDO08 As Global.System.Data.DataColumn
        
        Private columnSALDO09 As Global.System.Data.DataColumn
        
        Private columnSALDO10 As Global.System.Data.DataColumn
        
        Private columnSALDO11 As Global.System.Data.DataColumn
        
        Private columnSALDO12 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Dt_4"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodCoenceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodCoencepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescConceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescConcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodCuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodCuenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DesCuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesCuenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodCCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodCC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DesCCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesCC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodUnidadNegocioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodUnidadNegocio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescUnidadNegocioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescUnidadNegocio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodNivelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodNivel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescNivelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescNivel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EneroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FebreroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFebrero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MarzoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMarzo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AbrilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbril
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MayoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMayo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JunioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJunio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JulioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJulio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AgostoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAgosto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SeptiembreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeptiembre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OctubreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOctubre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoviembreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoviembre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DiciembreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiciembre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Saldo04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaldo04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Dt_4Row
            Get
                Return CType(Me.Rows(index),Dt_4Row)
            End Get
        End Property
        
        Public Event Dt_4RowChanging As Dt_4RowChangeEventHandler
        
        Public Event Dt_4RowChanged As Dt_4RowChangeEventHandler
        
        Public Event Dt_4RowDeleting As Dt_4RowChangeEventHandler
        
        Public Event Dt_4RowDeleted As Dt_4RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDt_4Row(ByVal row As Dt_4Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDt_4Row( _
                    ByVal CodCoencepto As String,  _
                    ByVal DescConcepto As String,  _
                    ByVal CodCuenta As String,  _
                    ByVal DesCuenta As String,  _
                    ByVal CodCC As String,  _
                    ByVal DesCC As String,  _
                    ByVal CodUnidadNegocio As String,  _
                    ByVal DescUnidadNegocio As String,  _
                    ByVal Tipo As String,  _
                    ByVal CodNivel As String,  _
                    ByVal DescNivel As String,  _
                    ByVal Enero As Decimal,  _
                    ByVal Febrero As Decimal,  _
                    ByVal Marzo As Decimal,  _
                    ByVal Abril As Decimal,  _
                    ByVal Mayo As Decimal,  _
                    ByVal Junio As Decimal,  _
                    ByVal Julio As Decimal,  _
                    ByVal Agosto As Decimal,  _
                    ByVal Septiembre As Decimal,  _
                    ByVal Octubre As Decimal,  _
                    ByVal Noviembre As Decimal,  _
                    ByVal Diciembre As Decimal,  _
                    ByVal SALDO01 As Decimal,  _
                    ByVal SALDO02 As Decimal,  _
                    ByVal SALDO03 As Decimal,  _
                    ByVal Saldo04 As Decimal,  _
                    ByVal SALDO05 As Decimal,  _
                    ByVal SALDO06 As Decimal,  _
                    ByVal SALDO07 As Decimal,  _
                    ByVal SALDO08 As Decimal,  _
                    ByVal SALDO09 As Decimal,  _
                    ByVal SALDO10 As Decimal,  _
                    ByVal SALDO11 As Decimal,  _
                    ByVal SALDO12 As Decimal) As Dt_4Row
            Dim rowDt_4Row As Dt_4Row = CType(Me.NewRow,Dt_4Row)
            Dim columnValuesArray() As Object = New Object() {CodCoencepto, DescConcepto, CodCuenta, DesCuenta, CodCC, DesCC, CodUnidadNegocio, DescUnidadNegocio, Tipo, CodNivel, DescNivel, Enero, Febrero, Marzo, Abril, Mayo, Junio, Julio, Agosto, Septiembre, Octubre, Noviembre, Diciembre, SALDO01, SALDO02, SALDO03, Saldo04, SALDO05, SALDO06, SALDO07, SALDO08, SALDO09, SALDO10, SALDO11, SALDO12}
            rowDt_4Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowDt_4Row)
            Return rowDt_4Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Dt_4DataTable = CType(MyBase.Clone,Dt_4DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Dt_4DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCodCoencepto = MyBase.Columns("CodCoencepto")
            Me.columnDescConcepto = MyBase.Columns("DescConcepto")
            Me.columnCodCuenta = MyBase.Columns("CodCuenta")
            Me.columnDesCuenta = MyBase.Columns("DesCuenta")
            Me.columnCodCC = MyBase.Columns("CodCC")
            Me.columnDesCC = MyBase.Columns("DesCC")
            Me.columnCodUnidadNegocio = MyBase.Columns("CodUnidadNegocio")
            Me.columnDescUnidadNegocio = MyBase.Columns("DescUnidadNegocio")
            Me.columnTipo = MyBase.Columns("Tipo")
            Me.columnCodNivel = MyBase.Columns("CodNivel")
            Me.columnDescNivel = MyBase.Columns("DescNivel")
            Me.columnEnero = MyBase.Columns("Enero")
            Me.columnFebrero = MyBase.Columns("Febrero")
            Me.columnMarzo = MyBase.Columns("Marzo")
            Me.columnAbril = MyBase.Columns("Abril")
            Me.columnMayo = MyBase.Columns("Mayo")
            Me.columnJunio = MyBase.Columns("Junio")
            Me.columnJulio = MyBase.Columns("Julio")
            Me.columnAgosto = MyBase.Columns("Agosto")
            Me.columnSeptiembre = MyBase.Columns("Septiembre")
            Me.columnOctubre = MyBase.Columns("Octubre")
            Me.columnNoviembre = MyBase.Columns("Noviembre")
            Me.columnDiciembre = MyBase.Columns("Diciembre")
            Me.columnSALDO01 = MyBase.Columns("Saldo01")
            Me.columnSALDO02 = MyBase.Columns("Saldo02")
            Me.columnSALDO03 = MyBase.Columns("Saldo03")
            Me.columnSaldo04 = MyBase.Columns("Saldo04")
            Me.columnSALDO05 = MyBase.Columns("Saldo05")
            Me.columnSALDO06 = MyBase.Columns("Saldo06")
            Me.columnSALDO07 = MyBase.Columns("Saldo07")
            Me.columnSALDO08 = MyBase.Columns("Saldo08")
            Me.columnSALDO09 = MyBase.Columns("Saldo09")
            Me.columnSALDO10 = MyBase.Columns("Saldo10")
            Me.columnSALDO11 = MyBase.Columns("Saldo11")
            Me.columnSALDO12 = MyBase.Columns("Saldo12")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCodCoencepto = New Global.System.Data.DataColumn("CodCoencepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodCoencepto)
            Me.columnDescConcepto = New Global.System.Data.DataColumn("DescConcepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescConcepto)
            Me.columnCodCuenta = New Global.System.Data.DataColumn("CodCuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodCuenta)
            Me.columnDesCuenta = New Global.System.Data.DataColumn("DesCuenta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesCuenta)
            Me.columnCodCC = New Global.System.Data.DataColumn("CodCC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodCC)
            Me.columnDesCC = New Global.System.Data.DataColumn("DesCC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesCC)
            Me.columnCodUnidadNegocio = New Global.System.Data.DataColumn("CodUnidadNegocio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodUnidadNegocio)
            Me.columnDescUnidadNegocio = New Global.System.Data.DataColumn("DescUnidadNegocio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescUnidadNegocio)
            Me.columnTipo = New Global.System.Data.DataColumn("Tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipo)
            Me.columnCodNivel = New Global.System.Data.DataColumn("CodNivel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodNivel)
            Me.columnDescNivel = New Global.System.Data.DataColumn("DescNivel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescNivel)
            Me.columnEnero = New Global.System.Data.DataColumn("Enero", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnero)
            Me.columnFebrero = New Global.System.Data.DataColumn("Febrero", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFebrero)
            Me.columnMarzo = New Global.System.Data.DataColumn("Marzo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMarzo)
            Me.columnAbril = New Global.System.Data.DataColumn("Abril", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbril)
            Me.columnMayo = New Global.System.Data.DataColumn("Mayo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMayo)
            Me.columnJunio = New Global.System.Data.DataColumn("Junio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJunio)
            Me.columnJulio = New Global.System.Data.DataColumn("Julio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJulio)
            Me.columnAgosto = New Global.System.Data.DataColumn("Agosto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAgosto)
            Me.columnSeptiembre = New Global.System.Data.DataColumn("Septiembre", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeptiembre)
            Me.columnOctubre = New Global.System.Data.DataColumn("Octubre", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOctubre)
            Me.columnNoviembre = New Global.System.Data.DataColumn("Noviembre", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoviembre)
            Me.columnDiciembre = New Global.System.Data.DataColumn("Diciembre", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiciembre)
            Me.columnSALDO01 = New Global.System.Data.DataColumn("Saldo01", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSALDO01.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "SALDO01")
            Me.columnSALDO01.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "SALDO01Column")
            Me.columnSALDO01.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSALDO01")
            Me.columnSALDO01.ExtendedProperties.Add("Generator_UserColumnName", "Saldo01")
            MyBase.Columns.Add(Me.columnSALDO01)
            Me.columnSALDO02 = New Global.System.Data.DataColumn("Saldo02", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSALDO02.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "SALDO02")
            Me.columnSALDO02.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "SALDO02Column")
            Me.columnSALDO02.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSALDO02")
            Me.columnSALDO02.ExtendedProperties.Add("Generator_UserColumnName", "Saldo02")
            MyBase.Columns.Add(Me.columnSALDO02)
            Me.columnSALDO03 = New Global.System.Data.DataColumn("Saldo03", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSALDO03.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "SALDO03")
            Me.columnSALDO03.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "SALDO03Column")
            Me.columnSALDO03.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSALDO03")
            Me.columnSALDO03.ExtendedProperties.Add("Generator_UserColumnName", "Saldo03")
            MyBase.Columns.Add(Me.columnSALDO03)
            Me.columnSaldo04 = New Global.System.Data.DataColumn("Saldo04", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaldo04)
            Me.columnSALDO05 = New Global.System.Data.DataColumn("Saldo05", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSALDO05.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "SALDO05")
            Me.columnSALDO05.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "SALDO05Column")
            Me.columnSALDO05.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSALDO05")
            Me.columnSALDO05.ExtendedProperties.Add("Generator_UserColumnName", "Saldo05")
            MyBase.Columns.Add(Me.columnSALDO05)
            Me.columnSALDO06 = New Global.System.Data.DataColumn("Saldo06", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSALDO06.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "SALDO06")
            Me.columnSALDO06.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "SALDO06Column")
            Me.columnSALDO06.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSALDO06")
            Me.columnSALDO06.ExtendedProperties.Add("Generator_UserColumnName", "Saldo06")
            MyBase.Columns.Add(Me.columnSALDO06)
            Me.columnSALDO07 = New Global.System.Data.DataColumn("Saldo07", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSALDO07.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "SALDO07")
            Me.columnSALDO07.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "SALDO07Column")
            Me.columnSALDO07.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSALDO07")
            Me.columnSALDO07.ExtendedProperties.Add("Generator_UserColumnName", "Saldo07")
            MyBase.Columns.Add(Me.columnSALDO07)
            Me.columnSALDO08 = New Global.System.Data.DataColumn("Saldo08", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSALDO08.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "SALDO08")
            Me.columnSALDO08.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "SALDO08Column")
            Me.columnSALDO08.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSALDO08")
            Me.columnSALDO08.ExtendedProperties.Add("Generator_UserColumnName", "Saldo08")
            MyBase.Columns.Add(Me.columnSALDO08)
            Me.columnSALDO09 = New Global.System.Data.DataColumn("Saldo09", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSALDO09.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "SALDO09")
            Me.columnSALDO09.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "SALDO09Column")
            Me.columnSALDO09.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSALDO09")
            Me.columnSALDO09.ExtendedProperties.Add("Generator_UserColumnName", "Saldo09")
            MyBase.Columns.Add(Me.columnSALDO09)
            Me.columnSALDO10 = New Global.System.Data.DataColumn("Saldo10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSALDO10.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "SALDO10")
            Me.columnSALDO10.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "SALDO10Column")
            Me.columnSALDO10.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSALDO10")
            Me.columnSALDO10.ExtendedProperties.Add("Generator_UserColumnName", "Saldo10")
            MyBase.Columns.Add(Me.columnSALDO10)
            Me.columnSALDO11 = New Global.System.Data.DataColumn("Saldo11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSALDO11.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "SALDO11")
            Me.columnSALDO11.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "SALDO11Column")
            Me.columnSALDO11.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSALDO11")
            Me.columnSALDO11.ExtendedProperties.Add("Generator_UserColumnName", "Saldo11")
            MyBase.Columns.Add(Me.columnSALDO11)
            Me.columnSALDO12 = New Global.System.Data.DataColumn("Saldo12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me.columnSALDO12.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "SALDO12")
            Me.columnSALDO12.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "SALDO12Column")
            Me.columnSALDO12.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnSALDO12")
            Me.columnSALDO12.ExtendedProperties.Add("Generator_UserColumnName", "Saldo12")
            MyBase.Columns.Add(Me.columnSALDO12)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDt_4Row() As Dt_4Row
            Return CType(Me.NewRow,Dt_4Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Dt_4Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Dt_4Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Dt_4RowChangedEvent) Is Nothing) Then
                RaiseEvent Dt_4RowChanged(Me, New Dt_4RowChangeEvent(CType(e.Row,Dt_4Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Dt_4RowChangingEvent) Is Nothing) Then
                RaiseEvent Dt_4RowChanging(Me, New Dt_4RowChangeEvent(CType(e.Row,Dt_4Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Dt_4RowDeletedEvent) Is Nothing) Then
                RaiseEvent Dt_4RowDeleted(Me, New Dt_4RowChangeEvent(CType(e.Row,Dt_4Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Dt_4RowDeletingEvent) Is Nothing) Then
                RaiseEvent Dt_4RowDeleting(Me, New Dt_4RowChangeEvent(CType(e.Row,Dt_4Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDt_4Row(ByVal row As Dt_4Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DsUnidadNegocioConcepto = New DsUnidadNegocioConcepto
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Dt_4DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Dt_1Row
        Inherits Global.System.Data.DataRow
        
        Private tableDt_1 As Dt_1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDt_1 = CType(Me.Table,Dt_1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.CodConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodConcepto' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.CodConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.DescConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescConcepto' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.DescConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tipo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.TipoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Tipo' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.TipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodNivel() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.CodNivelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodNivel' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.CodNivelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescNivel() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.DescNivelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescNivel' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.DescNivelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.UN1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN1' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.UN1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.UN2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN2' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.UN2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.UN3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN3' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.UN3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.UN4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN4' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.UN4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.UN5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN5' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.UN5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.UN6Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN6' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.UN6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.UN7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN7' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.UN7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN8() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.UN8Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN8' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.UN8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN9() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.UN9Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN9' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.UN9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.UN10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN10' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.UN10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO01() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.SALDO01Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO01' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.SALDO01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO02() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.SALDO02Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO02' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.SALDO02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO03() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.SALDO03Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO03' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.SALDO03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO04() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.SALDO04Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO04' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.SALDO04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO05() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.SALDO05Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO05' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.SALDO05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO06() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.SALDO06Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO06' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.SALDO06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO07() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.SALDO07Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO07' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.SALDO07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO08() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.SALDO08Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO08' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.SALDO08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO09() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.SALDO09Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO09' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.SALDO09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_1.SALDO10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO10' de la tabla 'Dt_1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_1.SALDO10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodConceptoNull() As Boolean
            Return Me.IsNull(Me.tableDt_1.CodConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodConceptoNull()
            Me(Me.tableDt_1.CodConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescConceptoNull() As Boolean
            Return Me.IsNull(Me.tableDt_1.DescConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescConceptoNull()
            Me(Me.tableDt_1.DescConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoNull() As Boolean
            Return Me.IsNull(Me.tableDt_1.TipoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoNull()
            Me(Me.tableDt_1.TipoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodNivelNull() As Boolean
            Return Me.IsNull(Me.tableDt_1.CodNivelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodNivelNull()
            Me(Me.tableDt_1.CodNivelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescNivelNull() As Boolean
            Return Me.IsNull(Me.tableDt_1.DescNivelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescNivelNull()
            Me(Me.tableDt_1.DescNivelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN1Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.UN1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN1Null()
            Me(Me.tableDt_1.UN1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN2Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.UN2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN2Null()
            Me(Me.tableDt_1.UN2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN3Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.UN3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN3Null()
            Me(Me.tableDt_1.UN3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN4Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.UN4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN4Null()
            Me(Me.tableDt_1.UN4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN5Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.UN5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN5Null()
            Me(Me.tableDt_1.UN5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN6Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.UN6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN6Null()
            Me(Me.tableDt_1.UN6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN7Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.UN7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN7Null()
            Me(Me.tableDt_1.UN7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN8Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.UN8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN8Null()
            Me(Me.tableDt_1.UN8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN9Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.UN9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN9Null()
            Me(Me.tableDt_1.UN9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN10Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.UN10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN10Null()
            Me(Me.tableDt_1.UN10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO01Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.SALDO01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO01Null()
            Me(Me.tableDt_1.SALDO01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO02Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.SALDO02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO02Null()
            Me(Me.tableDt_1.SALDO02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO03Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.SALDO03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO03Null()
            Me(Me.tableDt_1.SALDO03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO04Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.SALDO04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO04Null()
            Me(Me.tableDt_1.SALDO04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO05Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.SALDO05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO05Null()
            Me(Me.tableDt_1.SALDO05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO06Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.SALDO06Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO06Null()
            Me(Me.tableDt_1.SALDO06Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO07Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.SALDO07Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO07Null()
            Me(Me.tableDt_1.SALDO07Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO08Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.SALDO08Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO08Null()
            Me(Me.tableDt_1.SALDO08Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO09Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.SALDO09Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO09Null()
            Me(Me.tableDt_1.SALDO09Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO10Null() As Boolean
            Return Me.IsNull(Me.tableDt_1.SALDO10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO10Null()
            Me(Me.tableDt_1.SALDO10Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Dt_2Row
        Inherits Global.System.Data.DataRow
        
        Private tableDt_2 As Dt_2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDt_2 = CType(Me.Table,Dt_2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.CodConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodConcepto' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.CodConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.DescConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescConcepto' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.DescConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tipo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.TipoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Tipo' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.TipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodUnidadNegocio() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.CodUnidadNegocioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodUnidadNegocio' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.CodUnidadNegocioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescUnidadNegocio() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.DescUnidadNegocioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescUnidadNegocio' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.DescUnidadNegocioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodNivel() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.CodNivelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodNivel' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.CodNivelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescNivel() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.DescNivelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescNivel' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.DescNivelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Enero() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.EneroColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Enero' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.EneroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Febrero() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.FebreroColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Febrero' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.FebreroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Marzo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.MarzoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Marzo' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.MarzoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abril() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.AbrilColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Abril' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.AbrilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Mayo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.MayoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Mayo' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.MayoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Junio() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.JunioColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Junio' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.JunioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Julio() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.JulioColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Julio' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.JulioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Agosto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.AgostoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Agosto' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.AgostoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Septiembre() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.SeptiembreColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Septiembre' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.SeptiembreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Octubre() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.OctubreColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Octubre' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.OctubreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Noviembre() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.NoviembreColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Noviembre' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.NoviembreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Diciembre() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.DiciembreColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Diciembre' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.DiciembreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo01() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.Saldo01Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo01' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.Saldo01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo02() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.Saldo02Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo02' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.Saldo02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo03() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.Saldo03Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo03' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.Saldo03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo04() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.Saldo04Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo04' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.Saldo04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo05() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.Saldo05Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo05' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.Saldo05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo06() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.Saldo06Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo06' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.Saldo06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo07() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.Saldo07Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo07' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.Saldo07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo08() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.Saldo08Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo08' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.Saldo08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo09() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.Saldo09Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo09' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.Saldo09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.Saldo10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo10' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.Saldo10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.Saldo11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo11' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.Saldo11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_2.Saldo12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo12' de la tabla 'Dt_2' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_2.Saldo12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodConceptoNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.CodConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodConceptoNull()
            Me(Me.tableDt_2.CodConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescConceptoNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.DescConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescConceptoNull()
            Me(Me.tableDt_2.DescConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.TipoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoNull()
            Me(Me.tableDt_2.TipoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodUnidadNegocioNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.CodUnidadNegocioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodUnidadNegocioNull()
            Me(Me.tableDt_2.CodUnidadNegocioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescUnidadNegocioNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.DescUnidadNegocioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescUnidadNegocioNull()
            Me(Me.tableDt_2.DescUnidadNegocioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodNivelNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.CodNivelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodNivelNull()
            Me(Me.tableDt_2.CodNivelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescNivelNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.DescNivelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescNivelNull()
            Me(Me.tableDt_2.DescNivelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEneroNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.EneroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEneroNull()
            Me(Me.tableDt_2.EneroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFebreroNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.FebreroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFebreroNull()
            Me(Me.tableDt_2.FebreroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMarzoNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.MarzoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMarzoNull()
            Me(Me.tableDt_2.MarzoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbrilNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.AbrilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbrilNull()
            Me(Me.tableDt_2.AbrilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMayoNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.MayoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMayoNull()
            Me(Me.tableDt_2.MayoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJunioNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.JunioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJunioNull()
            Me(Me.tableDt_2.JunioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJulioNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.JulioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJulioNull()
            Me(Me.tableDt_2.JulioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAgostoNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.AgostoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAgostoNull()
            Me(Me.tableDt_2.AgostoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSeptiembreNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.SeptiembreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSeptiembreNull()
            Me(Me.tableDt_2.SeptiembreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOctubreNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.OctubreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOctubreNull()
            Me(Me.tableDt_2.OctubreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNoviembreNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.NoviembreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNoviembreNull()
            Me(Me.tableDt_2.NoviembreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiciembreNull() As Boolean
            Return Me.IsNull(Me.tableDt_2.DiciembreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiciembreNull()
            Me(Me.tableDt_2.DiciembreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo01Null() As Boolean
            Return Me.IsNull(Me.tableDt_2.Saldo01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo01Null()
            Me(Me.tableDt_2.Saldo01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo02Null() As Boolean
            Return Me.IsNull(Me.tableDt_2.Saldo02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo02Null()
            Me(Me.tableDt_2.Saldo02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo03Null() As Boolean
            Return Me.IsNull(Me.tableDt_2.Saldo03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo03Null()
            Me(Me.tableDt_2.Saldo03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo04Null() As Boolean
            Return Me.IsNull(Me.tableDt_2.Saldo04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo04Null()
            Me(Me.tableDt_2.Saldo04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo05Null() As Boolean
            Return Me.IsNull(Me.tableDt_2.Saldo05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo05Null()
            Me(Me.tableDt_2.Saldo05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo06Null() As Boolean
            Return Me.IsNull(Me.tableDt_2.Saldo06Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo06Null()
            Me(Me.tableDt_2.Saldo06Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo07Null() As Boolean
            Return Me.IsNull(Me.tableDt_2.Saldo07Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo07Null()
            Me(Me.tableDt_2.Saldo07Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo08Null() As Boolean
            Return Me.IsNull(Me.tableDt_2.Saldo08Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo08Null()
            Me(Me.tableDt_2.Saldo08Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo09Null() As Boolean
            Return Me.IsNull(Me.tableDt_2.Saldo09Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo09Null()
            Me(Me.tableDt_2.Saldo09Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo10Null() As Boolean
            Return Me.IsNull(Me.tableDt_2.Saldo10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo10Null()
            Me(Me.tableDt_2.Saldo10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo11Null() As Boolean
            Return Me.IsNull(Me.tableDt_2.Saldo11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo11Null()
            Me(Me.tableDt_2.Saldo11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo12Null() As Boolean
            Return Me.IsNull(Me.tableDt_2.Saldo12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo12Null()
            Me(Me.tableDt_2.Saldo12Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Dt_3Row
        Inherits Global.System.Data.DataRow
        
        Private tableDt_3 As Dt_3DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDt_3 = CType(Me.Table,Dt_3DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.CodConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodConcepto' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.CodConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.DescConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescConcepto' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.DescConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodCuenta() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.CodCuentaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodCuenta' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.CodCuentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescCuenta() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.DescCuentaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescCuenta' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.DescCuentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodCC() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.CodCCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodCC' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.CodCCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescCC() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.DescCCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescCC' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.DescCCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tipo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.TipoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Tipo' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.TipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodNivel() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.CodNivelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodNivel' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.CodNivelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescNivel() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.DescNivelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescNivel' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.DescNivelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.UN1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN1' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.UN1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.UN2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN2' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.UN2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.UN3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN3' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.UN3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.UN4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN4' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.UN4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.UN5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN5' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.UN5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.UN6Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN6' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.UN6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.UN7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN7' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.UN7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN8() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.UN8Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN8' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.UN8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN9() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.UN9Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN9' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.UN9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UN10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.UN10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UN10' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.UN10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO01() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.SALDO01Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO01' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.SALDO01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO02() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.SALDO02Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO02' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.SALDO02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO03() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.SALDO03Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO03' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.SALDO03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO04() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.SALDO04Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO04' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.SALDO04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO05() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.SALDO05Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO05' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.SALDO05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO06() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.SALDO06Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO06' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.SALDO06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO07() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.SALDO07Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO07' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.SALDO07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO08() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.SALDO08Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO08' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.SALDO08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO09() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.SALDO09Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO09' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.SALDO09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_3.SALDO10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO10' de la tabla 'Dt_3' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_3.SALDO10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodConceptoNull() As Boolean
            Return Me.IsNull(Me.tableDt_3.CodConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodConceptoNull()
            Me(Me.tableDt_3.CodConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescConceptoNull() As Boolean
            Return Me.IsNull(Me.tableDt_3.DescConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescConceptoNull()
            Me(Me.tableDt_3.DescConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodCuentaNull() As Boolean
            Return Me.IsNull(Me.tableDt_3.CodCuentaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodCuentaNull()
            Me(Me.tableDt_3.CodCuentaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescCuentaNull() As Boolean
            Return Me.IsNull(Me.tableDt_3.DescCuentaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescCuentaNull()
            Me(Me.tableDt_3.DescCuentaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodCCNull() As Boolean
            Return Me.IsNull(Me.tableDt_3.CodCCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodCCNull()
            Me(Me.tableDt_3.CodCCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescCCNull() As Boolean
            Return Me.IsNull(Me.tableDt_3.DescCCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescCCNull()
            Me(Me.tableDt_3.DescCCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoNull() As Boolean
            Return Me.IsNull(Me.tableDt_3.TipoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoNull()
            Me(Me.tableDt_3.TipoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodNivelNull() As Boolean
            Return Me.IsNull(Me.tableDt_3.CodNivelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodNivelNull()
            Me(Me.tableDt_3.CodNivelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescNivelNull() As Boolean
            Return Me.IsNull(Me.tableDt_3.DescNivelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescNivelNull()
            Me(Me.tableDt_3.DescNivelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN1Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.UN1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN1Null()
            Me(Me.tableDt_3.UN1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN2Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.UN2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN2Null()
            Me(Me.tableDt_3.UN2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN3Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.UN3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN3Null()
            Me(Me.tableDt_3.UN3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN4Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.UN4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN4Null()
            Me(Me.tableDt_3.UN4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN5Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.UN5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN5Null()
            Me(Me.tableDt_3.UN5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN6Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.UN6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN6Null()
            Me(Me.tableDt_3.UN6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN7Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.UN7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN7Null()
            Me(Me.tableDt_3.UN7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN8Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.UN8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN8Null()
            Me(Me.tableDt_3.UN8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN9Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.UN9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN9Null()
            Me(Me.tableDt_3.UN9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUN10Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.UN10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUN10Null()
            Me(Me.tableDt_3.UN10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO01Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.SALDO01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO01Null()
            Me(Me.tableDt_3.SALDO01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO02Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.SALDO02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO02Null()
            Me(Me.tableDt_3.SALDO02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO03Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.SALDO03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO03Null()
            Me(Me.tableDt_3.SALDO03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO04Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.SALDO04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO04Null()
            Me(Me.tableDt_3.SALDO04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO05Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.SALDO05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO05Null()
            Me(Me.tableDt_3.SALDO05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO06Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.SALDO06Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO06Null()
            Me(Me.tableDt_3.SALDO06Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO07Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.SALDO07Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO07Null()
            Me(Me.tableDt_3.SALDO07Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO08Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.SALDO08Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO08Null()
            Me(Me.tableDt_3.SALDO08Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO09Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.SALDO09Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO09Null()
            Me(Me.tableDt_3.SALDO09Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO10Null() As Boolean
            Return Me.IsNull(Me.tableDt_3.SALDO10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO10Null()
            Me(Me.tableDt_3.SALDO10Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DtUnidadNegocioRow
        Inherits Global.System.Data.DataRow
        
        Private tableDtUnidadNegocio As DtUnidadNegocioDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDtUnidadNegocio = CType(Me.Table,DtUnidadNegocioDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Codigo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDtUnidadNegocio.CodigoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Codigo' de la tabla 'DtUnidadNegocio' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDtUnidadNegocio.CodigoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Descripcion() As String
            Get
                Try 
                    Return CType(Me(Me.tableDtUnidadNegocio.DescripcionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Descripcion' de la tabla 'DtUnidadNegocio' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDtUnidadNegocio.DescripcionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodigoNull() As Boolean
            Return Me.IsNull(Me.tableDtUnidadNegocio.CodigoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodigoNull()
            Me(Me.tableDtUnidadNegocio.CodigoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableDtUnidadNegocio.DescripcionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescripcionNull()
            Me(Me.tableDtUnidadNegocio.DescripcionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Dt_4Row
        Inherits Global.System.Data.DataRow
        
        Private tableDt_4 As Dt_4DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDt_4 = CType(Me.Table,Dt_4DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodCoencepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.CodCoenceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodCoencepto' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.CodCoenceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescConcepto() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.DescConceptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescConcepto' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.DescConceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodCuenta() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.CodCuentaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodCuenta' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.CodCuentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DesCuenta() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.DesCuentaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DesCuenta' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.DesCuentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodCC() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.CodCCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodCC' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.CodCCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DesCC() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.DesCCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DesCC' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.DesCCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodUnidadNegocio() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.CodUnidadNegocioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodUnidadNegocio' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.CodUnidadNegocioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescUnidadNegocio() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.DescUnidadNegocioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescUnidadNegocio' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.DescUnidadNegocioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tipo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.TipoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Tipo' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.TipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodNivel() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.CodNivelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodNivel' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.CodNivelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DescNivel() As String
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.DescNivelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DescNivel' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.DescNivelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Enero() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.EneroColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Enero' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.EneroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Febrero() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.FebreroColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Febrero' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.FebreroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Marzo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.MarzoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Marzo' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.MarzoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Abril() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.AbrilColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Abril' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.AbrilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Mayo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.MayoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Mayo' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.MayoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Junio() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.JunioColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Junio' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.JunioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Julio() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.JulioColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Julio' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.JulioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Agosto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.AgostoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Agosto' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.AgostoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Septiembre() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.SeptiembreColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Septiembre' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.SeptiembreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Octubre() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.OctubreColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Octubre' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.OctubreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Noviembre() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.NoviembreColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Noviembre' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.NoviembreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Diciembre() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.DiciembreColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Diciembre' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.DiciembreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO01() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.SALDO01Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo01' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.SALDO01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO02() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.SALDO02Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo02' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.SALDO02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO03() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.SALDO03Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo03' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.SALDO03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Saldo04() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.Saldo04Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo04' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.Saldo04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO05() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.SALDO05Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo05' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.SALDO05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO06() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.SALDO06Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo06' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.SALDO06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO07() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.SALDO07Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo07' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.SALDO07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO08() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.SALDO08Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo08' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.SALDO08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO09() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.SALDO09Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo09' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.SALDO09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.SALDO10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo10' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.SALDO10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.SALDO11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo11' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.SALDO11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDt_4.SALDO12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Saldo12' de la tabla 'Dt_4' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDt_4.SALDO12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodCoenceptoNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.CodCoenceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodCoenceptoNull()
            Me(Me.tableDt_4.CodCoenceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescConceptoNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.DescConceptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescConceptoNull()
            Me(Me.tableDt_4.DescConceptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodCuentaNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.CodCuentaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodCuentaNull()
            Me(Me.tableDt_4.CodCuentaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDesCuentaNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.DesCuentaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDesCuentaNull()
            Me(Me.tableDt_4.DesCuentaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodCCNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.CodCCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodCCNull()
            Me(Me.tableDt_4.CodCCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDesCCNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.DesCCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDesCCNull()
            Me(Me.tableDt_4.DesCCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodUnidadNegocioNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.CodUnidadNegocioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodUnidadNegocioNull()
            Me(Me.tableDt_4.CodUnidadNegocioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescUnidadNegocioNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.DescUnidadNegocioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescUnidadNegocioNull()
            Me(Me.tableDt_4.DescUnidadNegocioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.TipoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoNull()
            Me(Me.tableDt_4.TipoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodNivelNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.CodNivelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodNivelNull()
            Me(Me.tableDt_4.CodNivelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescNivelNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.DescNivelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescNivelNull()
            Me(Me.tableDt_4.DescNivelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEneroNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.EneroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEneroNull()
            Me(Me.tableDt_4.EneroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFebreroNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.FebreroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFebreroNull()
            Me(Me.tableDt_4.FebreroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMarzoNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.MarzoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMarzoNull()
            Me(Me.tableDt_4.MarzoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAbrilNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.AbrilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAbrilNull()
            Me(Me.tableDt_4.AbrilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMayoNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.MayoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMayoNull()
            Me(Me.tableDt_4.MayoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJunioNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.JunioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJunioNull()
            Me(Me.tableDt_4.JunioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJulioNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.JulioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJulioNull()
            Me(Me.tableDt_4.JulioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAgostoNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.AgostoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAgostoNull()
            Me(Me.tableDt_4.AgostoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSeptiembreNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.SeptiembreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSeptiembreNull()
            Me(Me.tableDt_4.SeptiembreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOctubreNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.OctubreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOctubreNull()
            Me(Me.tableDt_4.OctubreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNoviembreNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.NoviembreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNoviembreNull()
            Me(Me.tableDt_4.NoviembreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiciembreNull() As Boolean
            Return Me.IsNull(Me.tableDt_4.DiciembreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiciembreNull()
            Me(Me.tableDt_4.DiciembreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO01Null() As Boolean
            Return Me.IsNull(Me.tableDt_4.SALDO01Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO01Null()
            Me(Me.tableDt_4.SALDO01Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO02Null() As Boolean
            Return Me.IsNull(Me.tableDt_4.SALDO02Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO02Null()
            Me(Me.tableDt_4.SALDO02Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO03Null() As Boolean
            Return Me.IsNull(Me.tableDt_4.SALDO03Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO03Null()
            Me(Me.tableDt_4.SALDO03Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSaldo04Null() As Boolean
            Return Me.IsNull(Me.tableDt_4.Saldo04Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSaldo04Null()
            Me(Me.tableDt_4.Saldo04Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO05Null() As Boolean
            Return Me.IsNull(Me.tableDt_4.SALDO05Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO05Null()
            Me(Me.tableDt_4.SALDO05Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO06Null() As Boolean
            Return Me.IsNull(Me.tableDt_4.SALDO06Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO06Null()
            Me(Me.tableDt_4.SALDO06Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO07Null() As Boolean
            Return Me.IsNull(Me.tableDt_4.SALDO07Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO07Null()
            Me(Me.tableDt_4.SALDO07Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO08Null() As Boolean
            Return Me.IsNull(Me.tableDt_4.SALDO08Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO08Null()
            Me(Me.tableDt_4.SALDO08Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO09Null() As Boolean
            Return Me.IsNull(Me.tableDt_4.SALDO09Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO09Null()
            Me(Me.tableDt_4.SALDO09Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO10Null() As Boolean
            Return Me.IsNull(Me.tableDt_4.SALDO10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO10Null()
            Me(Me.tableDt_4.SALDO10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO11Null() As Boolean
            Return Me.IsNull(Me.tableDt_4.SALDO11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO11Null()
            Me(Me.tableDt_4.SALDO11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO12Null() As Boolean
            Return Me.IsNull(Me.tableDt_4.SALDO12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO12Null()
            Me(Me.tableDt_4.SALDO12Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Dt_1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Dt_1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Dt_1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Dt_1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Dt_2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Dt_2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Dt_2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Dt_2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Dt_3RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Dt_3Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Dt_3Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Dt_3Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DtUnidadNegocioRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DtUnidadNegocioRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DtUnidadNegocioRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DtUnidadNegocioRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Dt_4RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Dt_4Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Dt_4Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Dt_4Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
