'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.7905
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("REPORTE_VARIOS"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class REPORTE_VARIOS
    Inherits Global.System.Data.DataSet
    
    Private tableREPORTE_CXP_CANC12 As REPORTE_CXP_CANC12DataTable
    
    Private tableREPORTE_CXC_CANC1 As REPORTE_CXC_CANC1DataTable
    
    Private tableREPORTE_FLUJO_EFECTIVO As REPORTE_FLUJO_EFECTIVODataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("REPORTE_CXP_CANC12")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CXP_CANC12DataTable(ds.Tables("REPORTE_CXP_CANC12")))
            End If
            If (Not (ds.Tables("REPORTE_CXC_CANC1")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CXC_CANC1DataTable(ds.Tables("REPORTE_CXC_CANC1")))
            End If
            If (Not (ds.Tables("REPORTE_FLUJO_EFECTIVO")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_FLUJO_EFECTIVODataTable(ds.Tables("REPORTE_FLUJO_EFECTIVO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_CXP_CANC12() As REPORTE_CXP_CANC12DataTable
        Get
            Return Me.tableREPORTE_CXP_CANC12
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_CXC_CANC1() As REPORTE_CXC_CANC1DataTable
        Get
            Return Me.tableREPORTE_CXC_CANC1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_FLUJO_EFECTIVO() As REPORTE_FLUJO_EFECTIVODataTable
        Get
            Return Me.tableREPORTE_FLUJO_EFECTIVO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As REPORTE_VARIOS = CType(MyBase.Clone,REPORTE_VARIOS)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("REPORTE_CXP_CANC12")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CXP_CANC12DataTable(ds.Tables("REPORTE_CXP_CANC12")))
            End If
            If (Not (ds.Tables("REPORTE_CXC_CANC1")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CXC_CANC1DataTable(ds.Tables("REPORTE_CXC_CANC1")))
            End If
            If (Not (ds.Tables("REPORTE_FLUJO_EFECTIVO")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_FLUJO_EFECTIVODataTable(ds.Tables("REPORTE_FLUJO_EFECTIVO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableREPORTE_CXP_CANC12 = CType(MyBase.Tables("REPORTE_CXP_CANC12"),REPORTE_CXP_CANC12DataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_CXP_CANC12) Is Nothing) Then
                Me.tableREPORTE_CXP_CANC12.InitVars
            End If
        End If
        Me.tableREPORTE_CXC_CANC1 = CType(MyBase.Tables("REPORTE_CXC_CANC1"),REPORTE_CXC_CANC1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_CXC_CANC1) Is Nothing) Then
                Me.tableREPORTE_CXC_CANC1.InitVars
            End If
        End If
        Me.tableREPORTE_FLUJO_EFECTIVO = CType(MyBase.Tables("REPORTE_FLUJO_EFECTIVO"),REPORTE_FLUJO_EFECTIVODataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_FLUJO_EFECTIVO) Is Nothing) Then
                Me.tableREPORTE_FLUJO_EFECTIVO.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "REPORTE_VARIOS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/REPORTE_VARIOS.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableREPORTE_CXP_CANC12 = New REPORTE_CXP_CANC12DataTable
        MyBase.Tables.Add(Me.tableREPORTE_CXP_CANC12)
        Me.tableREPORTE_CXC_CANC1 = New REPORTE_CXC_CANC1DataTable
        MyBase.Tables.Add(Me.tableREPORTE_CXC_CANC1)
        Me.tableREPORTE_FLUJO_EFECTIVO = New REPORTE_FLUJO_EFECTIVODataTable
        MyBase.Tables.Add(Me.tableREPORTE_FLUJO_EFECTIVO)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_CXP_CANC12() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_CXC_CANC1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_FLUJO_EFECTIVO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As REPORTE_VARIOS = New REPORTE_VARIOS
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub REPORTE_CXP_CANC12RowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_CXP_CANC12RowChangeEvent)
    
    Public Delegate Sub REPORTE_CXC_CANC1RowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_CXC_CANC1RowChangeEvent)
    
    Public Delegate Sub REPORTE_FLUJO_EFECTIVORowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_FLUJO_EFECTIVORowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_CXP_CANC12DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_SUCURSAL As Global.System.Data.DataColumn
        
        Private columnCOD_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_PER As Global.System.Data.DataColumn
        
        Private columnFE_AÑO As Global.System.Data.DataColumn
        
        Private columnNRO_DOC As Global.System.Data.DataColumn
        
        Private columnFE_MES As Global.System.Data.DataColumn
        
        Private columnCOD_BANCO As Global.System.Data.DataColumn
        
        Private columnCOD_MP As Global.System.Data.DataColumn
        
        Private columnNRO_MP As Global.System.Data.DataColumn
        
        Private columnNRO_DOC_PER As Global.System.Data.DataColumn
        
        Private columnFECHA_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_D_H As Global.System.Data.DataColumn
        
        Private columnCOD_MONEDA As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnIMP_DOC As Global.System.Data.DataColumn
        
        Private columndesc_mp As Global.System.Data.DataColumn
        
        Private columnDESC_PER As Global.System.Data.DataColumn
        
        Private columnDesc_moneda As Global.System.Data.DataColumn
        
        Private columndesc_doc As Global.System.Data.DataColumn
        
        Private columndesc_corta As Global.System.Data.DataColumn
        
        Private columnCOD_AUX As Global.System.Data.DataColumn
        
        Private columnCOD_COMP As Global.System.Data.DataColumn
        
        Private columnNRO_COMP As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columndesc_banco As Global.System.Data.DataColumn
        
        Private columnDESC_SUCURSAL As Global.System.Data.DataColumn
        
        Private columnCOD_CPTO As Global.System.Data.DataColumn
        
        Private columnDESC_CORTA1 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_CXP_CANC12"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_SUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_SUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_AÑOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_AÑO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_MES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_MPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_MP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_MPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_MP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOC_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_D_HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_D_H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc_mpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_mp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Desc_monedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesc_moneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc_docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_doc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc_cortaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_corta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_AUXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_AUX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc_bancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_banco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_SUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_SUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CPTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CPTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CORTA1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CORTA1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_CXP_CANC12Row
            Get
                Return CType(Me.Rows(index),REPORTE_CXP_CANC12Row)
            End Get
        End Property
        
        Public Event REPORTE_CXP_CANC12RowChanging As REPORTE_CXP_CANC12RowChangeEventHandler
        
        Public Event REPORTE_CXP_CANC12RowChanged As REPORTE_CXP_CANC12RowChangeEventHandler
        
        Public Event REPORTE_CXP_CANC12RowDeleting As REPORTE_CXP_CANC12RowChangeEventHandler
        
        Public Event REPORTE_CXP_CANC12RowDeleted As REPORTE_CXP_CANC12RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_CXP_CANC12Row(ByVal row As REPORTE_CXP_CANC12Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_CXP_CANC12Row( _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal COD_DOC As String,  _
                    ByVal COD_PER As String,  _
                    ByVal FE_AÑO As String,  _
                    ByVal NRO_DOC As String,  _
                    ByVal FE_MES As String,  _
                    ByVal COD_BANCO As String,  _
                    ByVal COD_MP As String,  _
                    ByVal NRO_MP As String,  _
                    ByVal NRO_DOC_PER As String,  _
                    ByVal FECHA_DOC As Date,  _
                    ByVal COD_D_H As String,  _
                    ByVal COD_MONEDA As String,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal IMP_DOC As Decimal,  _
                    ByVal desc_mp As String,  _
                    ByVal DESC_PER As String,  _
                    ByVal Desc_moneda As String,  _
                    ByVal desc_doc As String,  _
                    ByVal desc_corta As String,  _
                    ByVal COD_AUX As String,  _
                    ByVal COD_COMP As String,  _
                    ByVal NRO_COMP As String,  _
                    ByVal COD_CUENTA As String,  _
                    ByVal desc_banco As String,  _
                    ByVal DESC_SUCURSAL As String,  _
                    ByVal COD_CPTO As String,  _
                    ByVal DESC_CORTA1 As String) As REPORTE_CXP_CANC12Row
            Dim rowREPORTE_CXP_CANC12Row As REPORTE_CXP_CANC12Row = CType(Me.NewRow,REPORTE_CXP_CANC12Row)
            Dim columnValuesArray() As Object = New Object() {COD_SUCURSAL, COD_DOC, COD_PER, FE_AÑO, NRO_DOC, FE_MES, COD_BANCO, COD_MP, NRO_MP, NRO_DOC_PER, FECHA_DOC, COD_D_H, COD_MONEDA, TIPO_CAMBIO, IMP_DOC, desc_mp, DESC_PER, Desc_moneda, desc_doc, desc_corta, COD_AUX, COD_COMP, NRO_COMP, COD_CUENTA, desc_banco, DESC_SUCURSAL, COD_CPTO, DESC_CORTA1}
            rowREPORTE_CXP_CANC12Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_CXP_CANC12Row)
            Return rowREPORTE_CXP_CANC12Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_CXP_CANC12DataTable = CType(MyBase.Clone,REPORTE_CXP_CANC12DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_CXP_CANC12DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_SUCURSAL = MyBase.Columns("COD_SUCURSAL")
            Me.columnCOD_DOC = MyBase.Columns("COD_DOC")
            Me.columnCOD_PER = MyBase.Columns("COD_PER")
            Me.columnFE_AÑO = MyBase.Columns("FE_AÑO")
            Me.columnNRO_DOC = MyBase.Columns("NRO_DOC")
            Me.columnFE_MES = MyBase.Columns("FE_MES")
            Me.columnCOD_BANCO = MyBase.Columns("COD_BANCO")
            Me.columnCOD_MP = MyBase.Columns("COD_MP")
            Me.columnNRO_MP = MyBase.Columns("NRO_MP")
            Me.columnNRO_DOC_PER = MyBase.Columns("NRO_DOC_PER")
            Me.columnFECHA_DOC = MyBase.Columns("FECHA_DOC")
            Me.columnCOD_D_H = MyBase.Columns("COD_D_H")
            Me.columnCOD_MONEDA = MyBase.Columns("COD_MONEDA")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnIMP_DOC = MyBase.Columns("IMP_DOC")
            Me.columndesc_mp = MyBase.Columns("desc_mp")
            Me.columnDESC_PER = MyBase.Columns("DESC_PER")
            Me.columnDesc_moneda = MyBase.Columns("Desc_moneda")
            Me.columndesc_doc = MyBase.Columns("desc_doc")
            Me.columndesc_corta = MyBase.Columns("desc_corta")
            Me.columnCOD_AUX = MyBase.Columns("COD_AUX")
            Me.columnCOD_COMP = MyBase.Columns("COD_COMP")
            Me.columnNRO_COMP = MyBase.Columns("NRO_COMP")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columndesc_banco = MyBase.Columns("desc_banco")
            Me.columnDESC_SUCURSAL = MyBase.Columns("DESC_SUCURSAL")
            Me.columnCOD_CPTO = MyBase.Columns("COD_CPTO")
            Me.columnDESC_CORTA1 = MyBase.Columns("DESC_CORTA1")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_SUCURSAL = New Global.System.Data.DataColumn("COD_SUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_SUCURSAL)
            Me.columnCOD_DOC = New Global.System.Data.DataColumn("COD_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_DOC)
            Me.columnCOD_PER = New Global.System.Data.DataColumn("COD_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_PER)
            Me.columnFE_AÑO = New Global.System.Data.DataColumn("FE_AÑO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_AÑO)
            Me.columnNRO_DOC = New Global.System.Data.DataColumn("NRO_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC)
            Me.columnFE_MES = New Global.System.Data.DataColumn("FE_MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_MES)
            Me.columnCOD_BANCO = New Global.System.Data.DataColumn("COD_BANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_BANCO)
            Me.columnCOD_MP = New Global.System.Data.DataColumn("COD_MP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_MP)
            Me.columnNRO_MP = New Global.System.Data.DataColumn("NRO_MP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_MP)
            Me.columnNRO_DOC_PER = New Global.System.Data.DataColumn("NRO_DOC_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC_PER)
            Me.columnFECHA_DOC = New Global.System.Data.DataColumn("FECHA_DOC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_DOC)
            Me.columnCOD_D_H = New Global.System.Data.DataColumn("COD_D_H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_D_H)
            Me.columnCOD_MONEDA = New Global.System.Data.DataColumn("COD_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_MONEDA)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnIMP_DOC = New Global.System.Data.DataColumn("IMP_DOC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_DOC)
            Me.columndesc_mp = New Global.System.Data.DataColumn("desc_mp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_mp)
            Me.columnDESC_PER = New Global.System.Data.DataColumn("DESC_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_PER)
            Me.columnDesc_moneda = New Global.System.Data.DataColumn("Desc_moneda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesc_moneda)
            Me.columndesc_doc = New Global.System.Data.DataColumn("desc_doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_doc)
            Me.columndesc_corta = New Global.System.Data.DataColumn("desc_corta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_corta)
            Me.columnCOD_AUX = New Global.System.Data.DataColumn("COD_AUX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_AUX)
            Me.columnCOD_COMP = New Global.System.Data.DataColumn("COD_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_COMP)
            Me.columnNRO_COMP = New Global.System.Data.DataColumn("NRO_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_COMP)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columndesc_banco = New Global.System.Data.DataColumn("desc_banco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_banco)
            Me.columnDESC_SUCURSAL = New Global.System.Data.DataColumn("DESC_SUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_SUCURSAL)
            Me.columnCOD_CPTO = New Global.System.Data.DataColumn("COD_CPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CPTO)
            Me.columnDESC_CORTA1 = New Global.System.Data.DataColumn("DESC_CORTA1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CORTA1)
            Me.columnCOD_SUCURSAL.MaxLength = 2
            Me.columnCOD_DOC.MaxLength = 2
            Me.columnCOD_PER.MaxLength = 5
            Me.columnFE_AÑO.AllowDBNull = false
            Me.columnFE_AÑO.MaxLength = 4
            Me.columnNRO_DOC.MaxLength = 20
            Me.columnFE_MES.AllowDBNull = false
            Me.columnFE_MES.MaxLength = 2
            Me.columnCOD_BANCO.AllowDBNull = false
            Me.columnCOD_BANCO.MaxLength = 4
            Me.columnCOD_MP.AllowDBNull = false
            Me.columnCOD_MP.MaxLength = 3
            Me.columnNRO_MP.AllowDBNull = false
            Me.columnNRO_MP.MaxLength = 15
            Me.columnNRO_DOC_PER.MaxLength = 20
            Me.columnCOD_D_H.MaxLength = 1
            Me.columnCOD_MONEDA.MaxLength = 1
            Me.columndesc_mp.MaxLength = 40
            Me.columnDESC_PER.MaxLength = 60
            Me.columnDesc_moneda.MaxLength = 20
            Me.columndesc_doc.AllowDBNull = false
            Me.columndesc_doc.MaxLength = 30
            Me.columndesc_corta.MaxLength = 15
            Me.columnCOD_AUX.MaxLength = 2
            Me.columnCOD_COMP.MaxLength = 3
            Me.columnNRO_COMP.MaxLength = 4
            Me.columnCOD_CUENTA.MaxLength = 8
            Me.columndesc_banco.MaxLength = 40
            Me.columnDESC_SUCURSAL.MaxLength = 60
            Me.columnCOD_CPTO.MaxLength = 5
            Me.columnDESC_CORTA1.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_CXP_CANC12Row() As REPORTE_CXP_CANC12Row
            Return CType(Me.NewRow,REPORTE_CXP_CANC12Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_CXP_CANC12Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_CXP_CANC12Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_CXP_CANC12RowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CXP_CANC12RowChanged(Me, New REPORTE_CXP_CANC12RowChangeEvent(CType(e.Row,REPORTE_CXP_CANC12Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_CXP_CANC12RowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CXP_CANC12RowChanging(Me, New REPORTE_CXP_CANC12RowChangeEvent(CType(e.Row,REPORTE_CXP_CANC12Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_CXP_CANC12RowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CXP_CANC12RowDeleted(Me, New REPORTE_CXP_CANC12RowChangeEvent(CType(e.Row,REPORTE_CXP_CANC12Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_CXP_CANC12RowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CXP_CANC12RowDeleting(Me, New REPORTE_CXP_CANC12RowChangeEvent(CType(e.Row,REPORTE_CXP_CANC12Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_CXP_CANC12Row(ByVal row As REPORTE_CXP_CANC12Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As REPORTE_VARIOS = New REPORTE_VARIOS
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_CXP_CANC12DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_CXC_CANC1DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_SUCURSAL As Global.System.Data.DataColumn
        
        Private columnCOD_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_PER As Global.System.Data.DataColumn
        
        Private columnFE_AÑO As Global.System.Data.DataColumn
        
        Private columnNRO_DOC As Global.System.Data.DataColumn
        
        Private columnFE_MES As Global.System.Data.DataColumn
        
        Private columnCOD_BANCO As Global.System.Data.DataColumn
        
        Private columnCOD_MP As Global.System.Data.DataColumn
        
        Private columnNRO_MP As Global.System.Data.DataColumn
        
        Private columnNRO_DOC_PER As Global.System.Data.DataColumn
        
        Private columnFECHA_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_D_H As Global.System.Data.DataColumn
        
        Private columnCOD_MONEDA As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnIMP_DOC As Global.System.Data.DataColumn
        
        Private columndesc_mp As Global.System.Data.DataColumn
        
        Private columnDESC_SUCURSAL As Global.System.Data.DataColumn
        
        Private columnDESC_PER As Global.System.Data.DataColumn
        
        Private columnDesc_moneda As Global.System.Data.DataColumn
        
        Private columndesc_doc As Global.System.Data.DataColumn
        
        Private columndesc_corta As Global.System.Data.DataColumn
        
        Private columnCOD_AUX As Global.System.Data.DataColumn
        
        Private columnCOD_COMP As Global.System.Data.DataColumn
        
        Private columnNRO_COMP As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columndesc_banco As Global.System.Data.DataColumn
        
        Private columncod_cpto As Global.System.Data.DataColumn
        
        Private columndesc_corta1 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_CXC_CANC1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_SUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_SUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_AÑOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_AÑO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_MES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_BANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_BANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_MPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_MP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_MPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_MP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOC_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_D_HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_D_H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc_mpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_mp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_SUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_SUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Desc_monedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesc_moneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc_docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_doc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc_cortaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_corta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_AUXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_AUX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc_bancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_banco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cod_cptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_cpto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc_corta1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_corta1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_CXC_CANC1Row
            Get
                Return CType(Me.Rows(index),REPORTE_CXC_CANC1Row)
            End Get
        End Property
        
        Public Event REPORTE_CXC_CANC1RowChanging As REPORTE_CXC_CANC1RowChangeEventHandler
        
        Public Event REPORTE_CXC_CANC1RowChanged As REPORTE_CXC_CANC1RowChangeEventHandler
        
        Public Event REPORTE_CXC_CANC1RowDeleting As REPORTE_CXC_CANC1RowChangeEventHandler
        
        Public Event REPORTE_CXC_CANC1RowDeleted As REPORTE_CXC_CANC1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_CXC_CANC1Row(ByVal row As REPORTE_CXC_CANC1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_CXC_CANC1Row( _
                    ByVal COD_SUCURSAL As String,  _
                    ByVal COD_DOC As String,  _
                    ByVal COD_PER As String,  _
                    ByVal FE_AÑO As String,  _
                    ByVal NRO_DOC As String,  _
                    ByVal FE_MES As String,  _
                    ByVal COD_BANCO As String,  _
                    ByVal COD_MP As String,  _
                    ByVal NRO_MP As String,  _
                    ByVal NRO_DOC_PER As String,  _
                    ByVal FECHA_DOC As Date,  _
                    ByVal COD_D_H As String,  _
                    ByVal COD_MONEDA As String,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal IMP_DOC As Decimal,  _
                    ByVal desc_mp As String,  _
                    ByVal DESC_SUCURSAL As String,  _
                    ByVal DESC_PER As String,  _
                    ByVal Desc_moneda As String,  _
                    ByVal desc_doc As String,  _
                    ByVal desc_corta As String,  _
                    ByVal COD_AUX As String,  _
                    ByVal COD_COMP As String,  _
                    ByVal NRO_COMP As String,  _
                    ByVal COD_CUENTA As String,  _
                    ByVal desc_banco As String,  _
                    ByVal cod_cpto As String,  _
                    ByVal desc_corta1 As String) As REPORTE_CXC_CANC1Row
            Dim rowREPORTE_CXC_CANC1Row As REPORTE_CXC_CANC1Row = CType(Me.NewRow,REPORTE_CXC_CANC1Row)
            Dim columnValuesArray() As Object = New Object() {COD_SUCURSAL, COD_DOC, COD_PER, FE_AÑO, NRO_DOC, FE_MES, COD_BANCO, COD_MP, NRO_MP, NRO_DOC_PER, FECHA_DOC, COD_D_H, COD_MONEDA, TIPO_CAMBIO, IMP_DOC, desc_mp, DESC_SUCURSAL, DESC_PER, Desc_moneda, desc_doc, desc_corta, COD_AUX, COD_COMP, NRO_COMP, COD_CUENTA, desc_banco, cod_cpto, desc_corta1}
            rowREPORTE_CXC_CANC1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_CXC_CANC1Row)
            Return rowREPORTE_CXC_CANC1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_CXC_CANC1DataTable = CType(MyBase.Clone,REPORTE_CXC_CANC1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_CXC_CANC1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_SUCURSAL = MyBase.Columns("COD_SUCURSAL")
            Me.columnCOD_DOC = MyBase.Columns("COD_DOC")
            Me.columnCOD_PER = MyBase.Columns("COD_PER")
            Me.columnFE_AÑO = MyBase.Columns("FE_AÑO")
            Me.columnNRO_DOC = MyBase.Columns("NRO_DOC")
            Me.columnFE_MES = MyBase.Columns("FE_MES")
            Me.columnCOD_BANCO = MyBase.Columns("COD_BANCO")
            Me.columnCOD_MP = MyBase.Columns("COD_MP")
            Me.columnNRO_MP = MyBase.Columns("NRO_MP")
            Me.columnNRO_DOC_PER = MyBase.Columns("NRO_DOC_PER")
            Me.columnFECHA_DOC = MyBase.Columns("FECHA_DOC")
            Me.columnCOD_D_H = MyBase.Columns("COD_D_H")
            Me.columnCOD_MONEDA = MyBase.Columns("COD_MONEDA")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnIMP_DOC = MyBase.Columns("IMP_DOC")
            Me.columndesc_mp = MyBase.Columns("desc_mp")
            Me.columnDESC_SUCURSAL = MyBase.Columns("DESC_SUCURSAL")
            Me.columnDESC_PER = MyBase.Columns("DESC_PER")
            Me.columnDesc_moneda = MyBase.Columns("Desc_moneda")
            Me.columndesc_doc = MyBase.Columns("desc_doc")
            Me.columndesc_corta = MyBase.Columns("desc_corta")
            Me.columnCOD_AUX = MyBase.Columns("COD_AUX")
            Me.columnCOD_COMP = MyBase.Columns("COD_COMP")
            Me.columnNRO_COMP = MyBase.Columns("NRO_COMP")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columndesc_banco = MyBase.Columns("desc_banco")
            Me.columncod_cpto = MyBase.Columns("cod_cpto")
            Me.columndesc_corta1 = MyBase.Columns("desc_corta1")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_SUCURSAL = New Global.System.Data.DataColumn("COD_SUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_SUCURSAL)
            Me.columnCOD_DOC = New Global.System.Data.DataColumn("COD_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_DOC)
            Me.columnCOD_PER = New Global.System.Data.DataColumn("COD_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_PER)
            Me.columnFE_AÑO = New Global.System.Data.DataColumn("FE_AÑO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_AÑO)
            Me.columnNRO_DOC = New Global.System.Data.DataColumn("NRO_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC)
            Me.columnFE_MES = New Global.System.Data.DataColumn("FE_MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_MES)
            Me.columnCOD_BANCO = New Global.System.Data.DataColumn("COD_BANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_BANCO)
            Me.columnCOD_MP = New Global.System.Data.DataColumn("COD_MP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_MP)
            Me.columnNRO_MP = New Global.System.Data.DataColumn("NRO_MP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_MP)
            Me.columnNRO_DOC_PER = New Global.System.Data.DataColumn("NRO_DOC_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC_PER)
            Me.columnFECHA_DOC = New Global.System.Data.DataColumn("FECHA_DOC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_DOC)
            Me.columnCOD_D_H = New Global.System.Data.DataColumn("COD_D_H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_D_H)
            Me.columnCOD_MONEDA = New Global.System.Data.DataColumn("COD_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_MONEDA)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnIMP_DOC = New Global.System.Data.DataColumn("IMP_DOC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_DOC)
            Me.columndesc_mp = New Global.System.Data.DataColumn("desc_mp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_mp)
            Me.columnDESC_SUCURSAL = New Global.System.Data.DataColumn("DESC_SUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_SUCURSAL)
            Me.columnDESC_PER = New Global.System.Data.DataColumn("DESC_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_PER)
            Me.columnDesc_moneda = New Global.System.Data.DataColumn("Desc_moneda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesc_moneda)
            Me.columndesc_doc = New Global.System.Data.DataColumn("desc_doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_doc)
            Me.columndesc_corta = New Global.System.Data.DataColumn("desc_corta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_corta)
            Me.columnCOD_AUX = New Global.System.Data.DataColumn("COD_AUX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_AUX)
            Me.columnCOD_COMP = New Global.System.Data.DataColumn("COD_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_COMP)
            Me.columnNRO_COMP = New Global.System.Data.DataColumn("NRO_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_COMP)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columndesc_banco = New Global.System.Data.DataColumn("desc_banco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_banco)
            Me.columncod_cpto = New Global.System.Data.DataColumn("cod_cpto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_cpto)
            Me.columndesc_corta1 = New Global.System.Data.DataColumn("desc_corta1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_corta1)
            Me.columnCOD_SUCURSAL.MaxLength = 2
            Me.columnCOD_DOC.MaxLength = 2
            Me.columnCOD_PER.MaxLength = 5
            Me.columnFE_AÑO.AllowDBNull = false
            Me.columnFE_AÑO.MaxLength = 4
            Me.columnNRO_DOC.MaxLength = 20
            Me.columnFE_MES.AllowDBNull = false
            Me.columnFE_MES.MaxLength = 2
            Me.columnCOD_BANCO.AllowDBNull = false
            Me.columnCOD_BANCO.MaxLength = 4
            Me.columnCOD_MP.AllowDBNull = false
            Me.columnCOD_MP.MaxLength = 3
            Me.columnNRO_MP.AllowDBNull = false
            Me.columnNRO_MP.MaxLength = 15
            Me.columnNRO_DOC_PER.MaxLength = 20
            Me.columnCOD_D_H.MaxLength = 1
            Me.columnCOD_MONEDA.MaxLength = 1
            Me.columndesc_mp.MaxLength = 40
            Me.columnDESC_SUCURSAL.MaxLength = 60
            Me.columnDESC_PER.MaxLength = 60
            Me.columnDesc_moneda.MaxLength = 20
            Me.columndesc_doc.AllowDBNull = false
            Me.columndesc_doc.MaxLength = 30
            Me.columndesc_corta.MaxLength = 15
            Me.columnCOD_AUX.MaxLength = 2
            Me.columnCOD_COMP.MaxLength = 3
            Me.columnNRO_COMP.MaxLength = 4
            Me.columnCOD_CUENTA.MaxLength = 8
            Me.columndesc_banco.MaxLength = 40
            Me.columncod_cpto.MaxLength = 5
            Me.columndesc_corta1.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_CXC_CANC1Row() As REPORTE_CXC_CANC1Row
            Return CType(Me.NewRow,REPORTE_CXC_CANC1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_CXC_CANC1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_CXC_CANC1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_CXC_CANC1RowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CXC_CANC1RowChanged(Me, New REPORTE_CXC_CANC1RowChangeEvent(CType(e.Row,REPORTE_CXC_CANC1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_CXC_CANC1RowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CXC_CANC1RowChanging(Me, New REPORTE_CXC_CANC1RowChangeEvent(CType(e.Row,REPORTE_CXC_CANC1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_CXC_CANC1RowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CXC_CANC1RowDeleted(Me, New REPORTE_CXC_CANC1RowChangeEvent(CType(e.Row,REPORTE_CXC_CANC1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_CXC_CANC1RowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CXC_CANC1RowDeleting(Me, New REPORTE_CXC_CANC1RowChangeEvent(CType(e.Row,REPORTE_CXC_CANC1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_CXC_CANC1Row(ByVal row As REPORTE_CXC_CANC1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As REPORTE_VARIOS = New REPORTE_VARIOS
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_CXC_CANC1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_FLUJO_EFECTIVODataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_CPTO_FLUJO As Global.System.Data.DataColumn
        
        Private columnDESC_CPTO_FLUJO As Global.System.Data.DataColumn
        
        Private columnIMPORTE As Global.System.Data.DataColumn
        
        Private columnNIVEL1 As Global.System.Data.DataColumn
        
        Private columnDESC_CPTO_NIVEL1 As Global.System.Data.DataColumn
        
        Private columnNIVEL2 As Global.System.Data.DataColumn
        
        Private columnDESC_CPTO_NIVEL2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_FLUJO_EFECTIVO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CPTO_FLUJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CPTO_FLUJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CPTO_FLUJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CPTO_FLUJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NIVEL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVEL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CPTO_NIVEL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CPTO_NIVEL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NIVEL2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVEL2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CPTO_NIVEL2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CPTO_NIVEL2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_FLUJO_EFECTIVORow
            Get
                Return CType(Me.Rows(index),REPORTE_FLUJO_EFECTIVORow)
            End Get
        End Property
        
        Public Event REPORTE_FLUJO_EFECTIVORowChanging As REPORTE_FLUJO_EFECTIVORowChangeEventHandler
        
        Public Event REPORTE_FLUJO_EFECTIVORowChanged As REPORTE_FLUJO_EFECTIVORowChangeEventHandler
        
        Public Event REPORTE_FLUJO_EFECTIVORowDeleting As REPORTE_FLUJO_EFECTIVORowChangeEventHandler
        
        Public Event REPORTE_FLUJO_EFECTIVORowDeleted As REPORTE_FLUJO_EFECTIVORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_FLUJO_EFECTIVORow(ByVal row As REPORTE_FLUJO_EFECTIVORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_FLUJO_EFECTIVORow(ByVal COD_CPTO_FLUJO As String, ByVal DESC_CPTO_FLUJO As String, ByVal IMPORTE As String, ByVal NIVEL1 As String, ByVal DESC_CPTO_NIVEL1 As String, ByVal NIVEL2 As String, ByVal DESC_CPTO_NIVEL2 As String) As REPORTE_FLUJO_EFECTIVORow
            Dim rowREPORTE_FLUJO_EFECTIVORow As REPORTE_FLUJO_EFECTIVORow = CType(Me.NewRow,REPORTE_FLUJO_EFECTIVORow)
            Dim columnValuesArray() As Object = New Object() {COD_CPTO_FLUJO, DESC_CPTO_FLUJO, IMPORTE, NIVEL1, DESC_CPTO_NIVEL1, NIVEL2, DESC_CPTO_NIVEL2}
            rowREPORTE_FLUJO_EFECTIVORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_FLUJO_EFECTIVORow)
            Return rowREPORTE_FLUJO_EFECTIVORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_FLUJO_EFECTIVODataTable = CType(MyBase.Clone,REPORTE_FLUJO_EFECTIVODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_FLUJO_EFECTIVODataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_CPTO_FLUJO = MyBase.Columns("COD_CPTO_FLUJO")
            Me.columnDESC_CPTO_FLUJO = MyBase.Columns("DESC_CPTO_FLUJO")
            Me.columnIMPORTE = MyBase.Columns("IMPORTE")
            Me.columnNIVEL1 = MyBase.Columns("NIVEL1")
            Me.columnDESC_CPTO_NIVEL1 = MyBase.Columns("DESC_CPTO_NIVEL1")
            Me.columnNIVEL2 = MyBase.Columns("NIVEL2")
            Me.columnDESC_CPTO_NIVEL2 = MyBase.Columns("DESC_CPTO_NIVEL2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_CPTO_FLUJO = New Global.System.Data.DataColumn("COD_CPTO_FLUJO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CPTO_FLUJO)
            Me.columnDESC_CPTO_FLUJO = New Global.System.Data.DataColumn("DESC_CPTO_FLUJO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CPTO_FLUJO)
            Me.columnIMPORTE = New Global.System.Data.DataColumn("IMPORTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE)
            Me.columnNIVEL1 = New Global.System.Data.DataColumn("NIVEL1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVEL1)
            Me.columnDESC_CPTO_NIVEL1 = New Global.System.Data.DataColumn("DESC_CPTO_NIVEL1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CPTO_NIVEL1)
            Me.columnNIVEL2 = New Global.System.Data.DataColumn("NIVEL2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVEL2)
            Me.columnDESC_CPTO_NIVEL2 = New Global.System.Data.DataColumn("DESC_CPTO_NIVEL2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CPTO_NIVEL2)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_FLUJO_EFECTIVORow() As REPORTE_FLUJO_EFECTIVORow
            Return CType(Me.NewRow,REPORTE_FLUJO_EFECTIVORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_FLUJO_EFECTIVORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_FLUJO_EFECTIVORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_FLUJO_EFECTIVORowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_FLUJO_EFECTIVORowChanged(Me, New REPORTE_FLUJO_EFECTIVORowChangeEvent(CType(e.Row,REPORTE_FLUJO_EFECTIVORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_FLUJO_EFECTIVORowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_FLUJO_EFECTIVORowChanging(Me, New REPORTE_FLUJO_EFECTIVORowChangeEvent(CType(e.Row,REPORTE_FLUJO_EFECTIVORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_FLUJO_EFECTIVORowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_FLUJO_EFECTIVORowDeleted(Me, New REPORTE_FLUJO_EFECTIVORowChangeEvent(CType(e.Row,REPORTE_FLUJO_EFECTIVORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_FLUJO_EFECTIVORowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_FLUJO_EFECTIVORowDeleting(Me, New REPORTE_FLUJO_EFECTIVORowChangeEvent(CType(e.Row,REPORTE_FLUJO_EFECTIVORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_FLUJO_EFECTIVORow(ByVal row As REPORTE_FLUJO_EFECTIVORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As REPORTE_VARIOS = New REPORTE_VARIOS
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_FLUJO_EFECTIVODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_CXP_CANC12Row
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_CXP_CANC12 As REPORTE_CXP_CANC12DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_CXP_CANC12 = CType(Me.Table,REPORTE_CXP_CANC12DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_SUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.COD_SUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_SUCURSAL' de la tabla 'REPORTE_CXP_CANC12' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.COD_SUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.COD_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_DOC' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.COD_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.COD_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_PER' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.COD_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_AÑO() As String
            Get
                Return CType(Me(Me.tableREPORTE_CXP_CANC12.FE_AÑOColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.FE_AÑOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.NRO_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.NRO_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_MES() As String
            Get
                Return CType(Me(Me.tableREPORTE_CXP_CANC12.FE_MESColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.FE_MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_BANCO() As String
            Get
                Return CType(Me(Me.tableREPORTE_CXP_CANC12.COD_BANCOColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.COD_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_MP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CXP_CANC12.COD_MPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.COD_MPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_MP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CXP_CANC12.NRO_MPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.NRO_MPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.NRO_DOC_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC_PER' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.NRO_DOC_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_DOC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.FECHA_DOCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_DOC' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.FECHA_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_D_H() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.COD_D_HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_D_H' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.COD_D_HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.COD_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_MONEDA' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.COD_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.TIPO_CAMBIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CAMBIO' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_DOC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.IMP_DOCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_DOC' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.IMP_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc_mp() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.desc_mpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'desc_mp' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.desc_mpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.DESC_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_PER' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.DESC_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Desc_moneda() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.Desc_monedaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Desc_moneda' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.Desc_monedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc_doc() As String
            Get
                Return CType(Me(Me.tableREPORTE_CXP_CANC12.desc_docColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.desc_docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc_corta() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.desc_cortaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'desc_corta' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.desc_cortaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_AUX() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.COD_AUXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_AUX' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.COD_AUXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_COMP() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.COD_COMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_COMP' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.COD_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_COMP() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.NRO_COMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_COMP' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.NRO_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc_banco() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.desc_bancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'desc_banco' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.desc_bancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_SUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.DESC_SUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_SUCURSAL' de la tabla 'REPORTE_CXP_CANC12' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.DESC_SUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CPTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.COD_CPTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CPTO' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.COD_CPTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CORTA1() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXP_CANC12.DESC_CORTA1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CORTA1' de la tabla 'REPORTE_CXP_CANC12' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXP_CANC12.DESC_CORTA1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_SUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.COD_SUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_SUCURSALNull()
            Me(Me.tableREPORTE_CXP_CANC12.COD_SUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.COD_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_DOCNull()
            Me(Me.tableREPORTE_CXP_CANC12.COD_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.COD_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_PERNull()
            Me(Me.tableREPORTE_CXP_CANC12.COD_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.NRO_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOCNull()
            Me(Me.tableREPORTE_CXP_CANC12.NRO_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOC_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.NRO_DOC_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOC_PERNull()
            Me(Me.tableREPORTE_CXP_CANC12.NRO_DOC_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.FECHA_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_DOCNull()
            Me(Me.tableREPORTE_CXP_CANC12.FECHA_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_D_HNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.COD_D_HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_D_HNull()
            Me(Me.tableREPORTE_CXP_CANC12.COD_D_HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_MONEDANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.COD_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_MONEDANull()
            Me(Me.tableREPORTE_CXP_CANC12.COD_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTIPO_CAMBIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.TIPO_CAMBIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTIPO_CAMBIONull()
            Me(Me.tableREPORTE_CXP_CANC12.TIPO_CAMBIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.IMP_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_DOCNull()
            Me(Me.tableREPORTE_CXP_CANC12.IMP_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdesc_mpNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.desc_mpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdesc_mpNull()
            Me(Me.tableREPORTE_CXP_CANC12.desc_mpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.DESC_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_PERNull()
            Me(Me.tableREPORTE_CXP_CANC12.DESC_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDesc_monedaNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.Desc_monedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDesc_monedaNull()
            Me(Me.tableREPORTE_CXP_CANC12.Desc_monedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdesc_cortaNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.desc_cortaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdesc_cortaNull()
            Me(Me.tableREPORTE_CXP_CANC12.desc_cortaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_AUXNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.COD_AUXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_AUXNull()
            Me(Me.tableREPORTE_CXP_CANC12.COD_AUXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_COMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.COD_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_COMPNull()
            Me(Me.tableREPORTE_CXP_CANC12.COD_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_COMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.NRO_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_COMPNull()
            Me(Me.tableREPORTE_CXP_CANC12.NRO_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_CXP_CANC12.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdesc_bancoNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.desc_bancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdesc_bancoNull()
            Me(Me.tableREPORTE_CXP_CANC12.desc_bancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_SUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.DESC_SUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_SUCURSALNull()
            Me(Me.tableREPORTE_CXP_CANC12.DESC_SUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CPTONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.COD_CPTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CPTONull()
            Me(Me.tableREPORTE_CXP_CANC12.COD_CPTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CORTA1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXP_CANC12.DESC_CORTA1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CORTA1Null()
            Me(Me.tableREPORTE_CXP_CANC12.DESC_CORTA1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_CXC_CANC1Row
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_CXC_CANC1 As REPORTE_CXC_CANC1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_CXC_CANC1 = CType(Me.Table,REPORTE_CXC_CANC1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_SUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.COD_SUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_SUCURSAL' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.COD_SUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.COD_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_DOC' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.COD_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.COD_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_PER' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.COD_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_AÑO() As String
            Get
                Return CType(Me(Me.tableREPORTE_CXC_CANC1.FE_AÑOColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.FE_AÑOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.NRO_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.NRO_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_MES() As String
            Get
                Return CType(Me(Me.tableREPORTE_CXC_CANC1.FE_MESColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.FE_MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_BANCO() As String
            Get
                Return CType(Me(Me.tableREPORTE_CXC_CANC1.COD_BANCOColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.COD_BANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_MP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CXC_CANC1.COD_MPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.COD_MPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_MP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CXC_CANC1.NRO_MPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.NRO_MPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.NRO_DOC_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC_PER' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.NRO_DOC_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_DOC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.FECHA_DOCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_DOC' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.FECHA_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_D_H() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.COD_D_HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_D_H' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.COD_D_HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.COD_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_MONEDA' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.COD_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.TIPO_CAMBIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CAMBIO' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_DOC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.IMP_DOCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_DOC' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.IMP_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc_mp() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.desc_mpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'desc_mp' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.desc_mpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_SUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.DESC_SUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_SUCURSAL' de la tabla 'REPORTE_CXC_CANC1' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.DESC_SUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.DESC_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_PER' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.DESC_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Desc_moneda() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.Desc_monedaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Desc_moneda' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.Desc_monedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc_doc() As String
            Get
                Return CType(Me(Me.tableREPORTE_CXC_CANC1.desc_docColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.desc_docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc_corta() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.desc_cortaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'desc_corta' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.desc_cortaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_AUX() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.COD_AUXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_AUX' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.COD_AUXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_COMP() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.COD_COMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_COMP' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.COD_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_COMP() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.NRO_COMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_COMP' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.NRO_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc_banco() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.desc_bancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'desc_banco' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.desc_bancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cod_cpto() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.cod_cptoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'cod_cpto' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.cod_cptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc_corta1() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CXC_CANC1.desc_corta1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'desc_corta1' de la tabla 'REPORTE_CXC_CANC1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CXC_CANC1.desc_corta1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_SUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.COD_SUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_SUCURSALNull()
            Me(Me.tableREPORTE_CXC_CANC1.COD_SUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.COD_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_DOCNull()
            Me(Me.tableREPORTE_CXC_CANC1.COD_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.COD_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_PERNull()
            Me(Me.tableREPORTE_CXC_CANC1.COD_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.NRO_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOCNull()
            Me(Me.tableREPORTE_CXC_CANC1.NRO_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOC_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.NRO_DOC_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOC_PERNull()
            Me(Me.tableREPORTE_CXC_CANC1.NRO_DOC_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.FECHA_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_DOCNull()
            Me(Me.tableREPORTE_CXC_CANC1.FECHA_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_D_HNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.COD_D_HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_D_HNull()
            Me(Me.tableREPORTE_CXC_CANC1.COD_D_HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_MONEDANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.COD_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_MONEDANull()
            Me(Me.tableREPORTE_CXC_CANC1.COD_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTIPO_CAMBIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.TIPO_CAMBIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTIPO_CAMBIONull()
            Me(Me.tableREPORTE_CXC_CANC1.TIPO_CAMBIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.IMP_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_DOCNull()
            Me(Me.tableREPORTE_CXC_CANC1.IMP_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdesc_mpNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.desc_mpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdesc_mpNull()
            Me(Me.tableREPORTE_CXC_CANC1.desc_mpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_SUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.DESC_SUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_SUCURSALNull()
            Me(Me.tableREPORTE_CXC_CANC1.DESC_SUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.DESC_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_PERNull()
            Me(Me.tableREPORTE_CXC_CANC1.DESC_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDesc_monedaNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.Desc_monedaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDesc_monedaNull()
            Me(Me.tableREPORTE_CXC_CANC1.Desc_monedaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdesc_cortaNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.desc_cortaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdesc_cortaNull()
            Me(Me.tableREPORTE_CXC_CANC1.desc_cortaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_AUXNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.COD_AUXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_AUXNull()
            Me(Me.tableREPORTE_CXC_CANC1.COD_AUXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_COMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.COD_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_COMPNull()
            Me(Me.tableREPORTE_CXC_CANC1.COD_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_COMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.NRO_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_COMPNull()
            Me(Me.tableREPORTE_CXC_CANC1.NRO_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_CXC_CANC1.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdesc_bancoNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.desc_bancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdesc_bancoNull()
            Me(Me.tableREPORTE_CXC_CANC1.desc_bancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iscod_cptoNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.cod_cptoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setcod_cptoNull()
            Me(Me.tableREPORTE_CXC_CANC1.cod_cptoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdesc_corta1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CXC_CANC1.desc_corta1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdesc_corta1Null()
            Me(Me.tableREPORTE_CXC_CANC1.desc_corta1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_FLUJO_EFECTIVORow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_FLUJO_EFECTIVO As REPORTE_FLUJO_EFECTIVODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_FLUJO_EFECTIVO = CType(Me.Table,REPORTE_FLUJO_EFECTIVODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CPTO_FLUJO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_FLUJO_EFECTIVO.COD_CPTO_FLUJOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CPTO_FLUJO' de la tabla 'REPORTE_FLUJO_EFECTIVO' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_FLUJO_EFECTIVO.COD_CPTO_FLUJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CPTO_FLUJO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_FLUJO_EFECTIVO.DESC_CPTO_FLUJOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CPTO_FLUJO' de la tabla 'REPORTE_FLUJO_EFECTIVO' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_FLUJO_EFECTIVO.DESC_CPTO_FLUJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMPORTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_FLUJO_EFECTIVO.IMPORTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMPORTE' de la tabla 'REPORTE_FLUJO_EFECTIVO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_FLUJO_EFECTIVO.IMPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NIVEL1() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_FLUJO_EFECTIVO.NIVEL1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NIVEL1' de la tabla 'REPORTE_FLUJO_EFECTIVO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_FLUJO_EFECTIVO.NIVEL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CPTO_NIVEL1() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_FLUJO_EFECTIVO.DESC_CPTO_NIVEL1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CPTO_NIVEL1' de la tabla 'REPORTE_FLUJO_EFECTIVO' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_FLUJO_EFECTIVO.DESC_CPTO_NIVEL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NIVEL2() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_FLUJO_EFECTIVO.NIVEL2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NIVEL2' de la tabla 'REPORTE_FLUJO_EFECTIVO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_FLUJO_EFECTIVO.NIVEL2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CPTO_NIVEL2() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_FLUJO_EFECTIVO.DESC_CPTO_NIVEL2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CPTO_NIVEL2' de la tabla 'REPORTE_FLUJO_EFECTIVO' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_FLUJO_EFECTIVO.DESC_CPTO_NIVEL2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CPTO_FLUJONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_FLUJO_EFECTIVO.COD_CPTO_FLUJOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CPTO_FLUJONull()
            Me(Me.tableREPORTE_FLUJO_EFECTIVO.COD_CPTO_FLUJOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CPTO_FLUJONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_FLUJO_EFECTIVO.DESC_CPTO_FLUJOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CPTO_FLUJONull()
            Me(Me.tableREPORTE_FLUJO_EFECTIVO.DESC_CPTO_FLUJOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMPORTENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_FLUJO_EFECTIVO.IMPORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMPORTENull()
            Me(Me.tableREPORTE_FLUJO_EFECTIVO.IMPORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNIVEL1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_FLUJO_EFECTIVO.NIVEL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNIVEL1Null()
            Me(Me.tableREPORTE_FLUJO_EFECTIVO.NIVEL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CPTO_NIVEL1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_FLUJO_EFECTIVO.DESC_CPTO_NIVEL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CPTO_NIVEL1Null()
            Me(Me.tableREPORTE_FLUJO_EFECTIVO.DESC_CPTO_NIVEL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNIVEL2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_FLUJO_EFECTIVO.NIVEL2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNIVEL2Null()
            Me(Me.tableREPORTE_FLUJO_EFECTIVO.NIVEL2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CPTO_NIVEL2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_FLUJO_EFECTIVO.DESC_CPTO_NIVEL2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CPTO_NIVEL2Null()
            Me(Me.tableREPORTE_FLUJO_EFECTIVO.DESC_CPTO_NIVEL2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_CXP_CANC12RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_CXP_CANC12Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_CXP_CANC12Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_CXP_CANC12Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_CXC_CANC1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_CXC_CANC1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_CXC_CANC1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_CXC_CANC1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_FLUJO_EFECTIVORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_FLUJO_EFECTIVORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_FLUJO_EFECTIVORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_FLUJO_EFECTIVORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace REPORTE_VARIOSTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REPORTE_CXP_CANC12TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REPORTE_CXP_CANC12"
            tableMapping.ColumnMappings.Add("COD_SUCURSAL", "COD_SUCURSAL")
            tableMapping.ColumnMappings.Add("COD_DOC", "COD_DOC")
            tableMapping.ColumnMappings.Add("COD_PER", "COD_PER")
            tableMapping.ColumnMappings.Add("FE_AÑO", "FE_AÑO")
            tableMapping.ColumnMappings.Add("NRO_DOC", "NRO_DOC")
            tableMapping.ColumnMappings.Add("FE_MES", "FE_MES")
            tableMapping.ColumnMappings.Add("COD_BANCO", "COD_BANCO")
            tableMapping.ColumnMappings.Add("COD_MP", "COD_MP")
            tableMapping.ColumnMappings.Add("NRO_MP", "NRO_MP")
            tableMapping.ColumnMappings.Add("NRO_DOC_PER", "NRO_DOC_PER")
            tableMapping.ColumnMappings.Add("FECHA_DOC", "FECHA_DOC")
            tableMapping.ColumnMappings.Add("COD_D_H", "COD_D_H")
            tableMapping.ColumnMappings.Add("COD_MONEDA", "COD_MONEDA")
            tableMapping.ColumnMappings.Add("TIPO_CAMBIO", "TIPO_CAMBIO")
            tableMapping.ColumnMappings.Add("IMP_DOC", "IMP_DOC")
            tableMapping.ColumnMappings.Add("desc_mp", "desc_mp")
            tableMapping.ColumnMappings.Add("DESC_PER", "DESC_PER")
            tableMapping.ColumnMappings.Add("Desc_moneda", "Desc_moneda")
            tableMapping.ColumnMappings.Add("desc_doc", "desc_doc")
            tableMapping.ColumnMappings.Add("desc_corta", "desc_corta")
            tableMapping.ColumnMappings.Add("COD_AUX", "COD_AUX")
            tableMapping.ColumnMappings.Add("COD_COMP", "COD_COMP")
            tableMapping.ColumnMappings.Add("NRO_COMP", "NRO_COMP")
            tableMapping.ColumnMappings.Add("COD_CUENTA", "COD_CUENTA")
            tableMapping.ColumnMappings.Add("desc_banco", "desc_banco")
            tableMapping.ColumnMappings.Add("DESC_SUCURSAL", "DESC_SUCURSAL")
            tableMapping.ColumnMappings.Add("COD_CPTO", "COD_CPTO")
            tableMapping.ColumnMappings.Add("DESC_CORTA1", "DESC_CORTA1")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CONTABILIDAD.My.MySettings.Default.BD_COI02
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.REPORTE_CXP_CANC12"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ST_SUC", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_SUCURSAL", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA2", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ST_BANCO", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_BANCO", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As REPORTE_VARIOS.REPORTE_CXP_CANC12DataTable, ByVal ST_SUC As String, ByVal COD_SUCURSAL As String, ByVal FECHA1 As Global.System.Nullable(Of Date), ByVal FECHA2 As Global.System.Nullable(Of Date), ByVal ST_BANCO As String, ByVal COD_BANCO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ST_SUC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ST_SUC,String)
            End If
            If (COD_SUCURSAL Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(COD_SUCURSAL,String)
            End If
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (FECHA2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(FECHA2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ST_BANCO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(ST_BANCO,String)
            End If
            If (COD_BANCO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(COD_BANCO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ST_SUC As String, ByVal COD_SUCURSAL As String, ByVal FECHA1 As Global.System.Nullable(Of Date), ByVal FECHA2 As Global.System.Nullable(Of Date), ByVal ST_BANCO As String, ByVal COD_BANCO As String) As REPORTE_VARIOS.REPORTE_CXP_CANC12DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ST_SUC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ST_SUC,String)
            End If
            If (COD_SUCURSAL Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(COD_SUCURSAL,String)
            End If
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (FECHA2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(FECHA2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ST_BANCO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(ST_BANCO,String)
            End If
            If (COD_BANCO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(COD_BANCO,String)
            End If
            Dim dataTable As REPORTE_VARIOS.REPORTE_CXP_CANC12DataTable = New REPORTE_VARIOS.REPORTE_CXP_CANC12DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REPORTE_CXC_CANC1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REPORTE_CXC_CANC1"
            tableMapping.ColumnMappings.Add("COD_SUCURSAL", "COD_SUCURSAL")
            tableMapping.ColumnMappings.Add("COD_DOC", "COD_DOC")
            tableMapping.ColumnMappings.Add("COD_PER", "COD_PER")
            tableMapping.ColumnMappings.Add("FE_AÑO", "FE_AÑO")
            tableMapping.ColumnMappings.Add("NRO_DOC", "NRO_DOC")
            tableMapping.ColumnMappings.Add("FE_MES", "FE_MES")
            tableMapping.ColumnMappings.Add("COD_BANCO", "COD_BANCO")
            tableMapping.ColumnMappings.Add("COD_MP", "COD_MP")
            tableMapping.ColumnMappings.Add("NRO_MP", "NRO_MP")
            tableMapping.ColumnMappings.Add("NRO_DOC_PER", "NRO_DOC_PER")
            tableMapping.ColumnMappings.Add("FECHA_DOC", "FECHA_DOC")
            tableMapping.ColumnMappings.Add("COD_D_H", "COD_D_H")
            tableMapping.ColumnMappings.Add("COD_MONEDA", "COD_MONEDA")
            tableMapping.ColumnMappings.Add("TIPO_CAMBIO", "TIPO_CAMBIO")
            tableMapping.ColumnMappings.Add("IMP_DOC", "IMP_DOC")
            tableMapping.ColumnMappings.Add("desc_mp", "desc_mp")
            tableMapping.ColumnMappings.Add("DESC_SUCURSAL", "DESC_SUCURSAL")
            tableMapping.ColumnMappings.Add("DESC_PER", "DESC_PER")
            tableMapping.ColumnMappings.Add("Desc_moneda", "Desc_moneda")
            tableMapping.ColumnMappings.Add("desc_doc", "desc_doc")
            tableMapping.ColumnMappings.Add("desc_corta", "desc_corta")
            tableMapping.ColumnMappings.Add("COD_AUX", "COD_AUX")
            tableMapping.ColumnMappings.Add("COD_COMP", "COD_COMP")
            tableMapping.ColumnMappings.Add("NRO_COMP", "NRO_COMP")
            tableMapping.ColumnMappings.Add("COD_CUENTA", "COD_CUENTA")
            tableMapping.ColumnMappings.Add("desc_banco", "desc_banco")
            tableMapping.ColumnMappings.Add("cod_cpto", "cod_cpto")
            tableMapping.ColumnMappings.Add("desc_corta1", "desc_corta1")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CONTABILIDAD.My.MySettings.Default.BD_COI02
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.REPORTE_CXC_CANC1"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ST_SUC", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_SUCURSAL", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ST_PER", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_PER", Global.System.Data.SqlDbType.[Char], 5, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA2", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ST_BANCO", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_BANCO", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As REPORTE_VARIOS.REPORTE_CXC_CANC1DataTable, ByVal ST_SUC As String, ByVal COD_SUCURSAL As String, ByVal ST_PER As String, ByVal COD_PER As String, ByVal FECHA1 As Global.System.Nullable(Of Date), ByVal FECHA2 As Global.System.Nullable(Of Date), ByVal ST_BANCO As String, ByVal COD_BANCO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ST_SUC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ST_SUC,String)
            End If
            If (COD_SUCURSAL Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(COD_SUCURSAL,String)
            End If
            If (ST_PER Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ST_PER,String)
            End If
            If (COD_PER Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(COD_PER,String)
            End If
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECHA2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(FECHA2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (ST_BANCO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(ST_BANCO,String)
            End If
            If (COD_BANCO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(COD_BANCO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal ST_SUC As String, ByVal COD_SUCURSAL As String, ByVal ST_PER As String, ByVal COD_PER As String, ByVal FECHA1 As Global.System.Nullable(Of Date), ByVal FECHA2 As Global.System.Nullable(Of Date), ByVal ST_BANCO As String, ByVal COD_BANCO As String) As REPORTE_VARIOS.REPORTE_CXC_CANC1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ST_SUC Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ST_SUC,String)
            End If
            If (COD_SUCURSAL Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(COD_SUCURSAL,String)
            End If
            If (ST_PER Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(ST_PER,String)
            End If
            If (COD_PER Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(COD_PER,String)
            End If
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECHA2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(FECHA2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (ST_BANCO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(ST_BANCO,String)
            End If
            If (COD_BANCO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(COD_BANCO,String)
            End If
            Dim dataTable As REPORTE_VARIOS.REPORTE_CXC_CANC1DataTable = New REPORTE_VARIOS.REPORTE_CXC_CANC1DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
