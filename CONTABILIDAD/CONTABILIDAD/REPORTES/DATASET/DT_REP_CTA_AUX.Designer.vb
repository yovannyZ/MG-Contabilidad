'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.7905
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DT_REP_CTA_AUX"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DT_REP_CTA_AUX
    Inherits Global.System.Data.DataSet
    
    Private tableREPORTE_CTA_AUX As REPORTE_CTA_AUXDataTable
    
    Private tableREPORTE_CTA_COMP As REPORTE_CTA_COMPDataTable
    
    Private tableREPORTE_CTA_CTA_CTE As REPORTE_CTA_CTA_CTEDataTable
    
    Private tableREPORTE_CTA_MASK As REPORTE_CTA_MASKDataTable
    
    Private tableREPORTE_CTA_RESUMEN As REPORTE_CTA_RESUMENDataTable
    
    Private tableREPORTE_CTA_GRAL As REPORTE_CTA_GRALDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("REPORTE_CTA_AUX")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CTA_AUXDataTable(ds.Tables("REPORTE_CTA_AUX")))
            End If
            If (Not (ds.Tables("REPORTE_CTA_COMP")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CTA_COMPDataTable(ds.Tables("REPORTE_CTA_COMP")))
            End If
            If (Not (ds.Tables("REPORTE_CTA_CTA_CTE")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CTA_CTA_CTEDataTable(ds.Tables("REPORTE_CTA_CTA_CTE")))
            End If
            If (Not (ds.Tables("REPORTE_CTA_MASK")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CTA_MASKDataTable(ds.Tables("REPORTE_CTA_MASK")))
            End If
            If (Not (ds.Tables("REPORTE_CTA_RESUMEN")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CTA_RESUMENDataTable(ds.Tables("REPORTE_CTA_RESUMEN")))
            End If
            If (Not (ds.Tables("REPORTE_CTA_GRAL")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CTA_GRALDataTable(ds.Tables("REPORTE_CTA_GRAL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_CTA_AUX() As REPORTE_CTA_AUXDataTable
        Get
            Return Me.tableREPORTE_CTA_AUX
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_CTA_COMP() As REPORTE_CTA_COMPDataTable
        Get
            Return Me.tableREPORTE_CTA_COMP
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_CTA_CTA_CTE() As REPORTE_CTA_CTA_CTEDataTable
        Get
            Return Me.tableREPORTE_CTA_CTA_CTE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_CTA_MASK() As REPORTE_CTA_MASKDataTable
        Get
            Return Me.tableREPORTE_CTA_MASK
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_CTA_RESUMEN() As REPORTE_CTA_RESUMENDataTable
        Get
            Return Me.tableREPORTE_CTA_RESUMEN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REPORTE_CTA_GRAL() As REPORTE_CTA_GRALDataTable
        Get
            Return Me.tableREPORTE_CTA_GRAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DT_REP_CTA_AUX = CType(MyBase.Clone,DT_REP_CTA_AUX)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("REPORTE_CTA_AUX")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CTA_AUXDataTable(ds.Tables("REPORTE_CTA_AUX")))
            End If
            If (Not (ds.Tables("REPORTE_CTA_COMP")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CTA_COMPDataTable(ds.Tables("REPORTE_CTA_COMP")))
            End If
            If (Not (ds.Tables("REPORTE_CTA_CTA_CTE")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CTA_CTA_CTEDataTable(ds.Tables("REPORTE_CTA_CTA_CTE")))
            End If
            If (Not (ds.Tables("REPORTE_CTA_MASK")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CTA_MASKDataTable(ds.Tables("REPORTE_CTA_MASK")))
            End If
            If (Not (ds.Tables("REPORTE_CTA_RESUMEN")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CTA_RESUMENDataTable(ds.Tables("REPORTE_CTA_RESUMEN")))
            End If
            If (Not (ds.Tables("REPORTE_CTA_GRAL")) Is Nothing) Then
                MyBase.Tables.Add(New REPORTE_CTA_GRALDataTable(ds.Tables("REPORTE_CTA_GRAL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableREPORTE_CTA_AUX = CType(MyBase.Tables("REPORTE_CTA_AUX"),REPORTE_CTA_AUXDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_CTA_AUX) Is Nothing) Then
                Me.tableREPORTE_CTA_AUX.InitVars
            End If
        End If
        Me.tableREPORTE_CTA_COMP = CType(MyBase.Tables("REPORTE_CTA_COMP"),REPORTE_CTA_COMPDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_CTA_COMP) Is Nothing) Then
                Me.tableREPORTE_CTA_COMP.InitVars
            End If
        End If
        Me.tableREPORTE_CTA_CTA_CTE = CType(MyBase.Tables("REPORTE_CTA_CTA_CTE"),REPORTE_CTA_CTA_CTEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_CTA_CTA_CTE) Is Nothing) Then
                Me.tableREPORTE_CTA_CTA_CTE.InitVars
            End If
        End If
        Me.tableREPORTE_CTA_MASK = CType(MyBase.Tables("REPORTE_CTA_MASK"),REPORTE_CTA_MASKDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_CTA_MASK) Is Nothing) Then
                Me.tableREPORTE_CTA_MASK.InitVars
            End If
        End If
        Me.tableREPORTE_CTA_RESUMEN = CType(MyBase.Tables("REPORTE_CTA_RESUMEN"),REPORTE_CTA_RESUMENDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_CTA_RESUMEN) Is Nothing) Then
                Me.tableREPORTE_CTA_RESUMEN.InitVars
            End If
        End If
        Me.tableREPORTE_CTA_GRAL = CType(MyBase.Tables("REPORTE_CTA_GRAL"),REPORTE_CTA_GRALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREPORTE_CTA_GRAL) Is Nothing) Then
                Me.tableREPORTE_CTA_GRAL.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DT_REP_CTA_AUX"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DT_REP_CTA_AUX.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableREPORTE_CTA_AUX = New REPORTE_CTA_AUXDataTable
        MyBase.Tables.Add(Me.tableREPORTE_CTA_AUX)
        Me.tableREPORTE_CTA_COMP = New REPORTE_CTA_COMPDataTable
        MyBase.Tables.Add(Me.tableREPORTE_CTA_COMP)
        Me.tableREPORTE_CTA_CTA_CTE = New REPORTE_CTA_CTA_CTEDataTable
        MyBase.Tables.Add(Me.tableREPORTE_CTA_CTA_CTE)
        Me.tableREPORTE_CTA_MASK = New REPORTE_CTA_MASKDataTable
        MyBase.Tables.Add(Me.tableREPORTE_CTA_MASK)
        Me.tableREPORTE_CTA_RESUMEN = New REPORTE_CTA_RESUMENDataTable
        MyBase.Tables.Add(Me.tableREPORTE_CTA_RESUMEN)
        Me.tableREPORTE_CTA_GRAL = New REPORTE_CTA_GRALDataTable
        MyBase.Tables.Add(Me.tableREPORTE_CTA_GRAL)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_CTA_AUX() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_CTA_COMP() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_CTA_CTA_CTE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_CTA_MASK() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_CTA_RESUMEN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeREPORTE_CTA_GRAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DT_REP_CTA_AUX = New DT_REP_CTA_AUX
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub REPORTE_CTA_AUXRowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_CTA_AUXRowChangeEvent)
    
    Public Delegate Sub REPORTE_CTA_COMPRowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_CTA_COMPRowChangeEvent)
    
    Public Delegate Sub REPORTE_CTA_CTA_CTERowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_CTA_CTA_CTERowChangeEvent)
    
    Public Delegate Sub REPORTE_CTA_MASKRowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_CTA_MASKRowChangeEvent)
    
    Public Delegate Sub REPORTE_CTA_RESUMENRowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_CTA_RESUMENRowChangeEvent)
    
    Public Delegate Sub REPORTE_CTA_GRALRowChangeEventHandler(ByVal sender As Object, ByVal e As REPORTE_CTA_GRALRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_CTA_AUXDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_AUX As Global.System.Data.DataColumn
        
        Private columnCOD_COMP As Global.System.Data.DataColumn
        
        Private columnNRO_COMP As Global.System.Data.DataColumn
        
        Private columnFE_AÑO As Global.System.Data.DataColumn
        
        Private columnFE_MES As Global.System.Data.DataColumn
        
        Private columnFECHA_COMP As Global.System.Data.DataColumn
        
        Private columnITEM As Global.System.Data.DataColumn
        
        Private columnCOD_DOC As Global.System.Data.DataColumn
        
        Private columnNRO_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_PER As Global.System.Data.DataColumn
        
        Private columnNRO_DOC_PER As Global.System.Data.DataColumn
        
        Private columnFECHA_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_REF As Global.System.Data.DataColumn
        
        Private columnNRO_REF As Global.System.Data.DataColumn
        
        Private columnFECHA_REF As Global.System.Data.DataColumn
        
        Private columnGLOSA As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columnIMP_S As Global.System.Data.DataColumn
        
        Private columnIMP_D As Global.System.Data.DataColumn
        
        Private columnCOD_D_H As Global.System.Data.DataColumn
        
        Private columnCOD_MONEDA As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnCOD_CC As Global.System.Data.DataColumn
        
        Private columnDEBE As Global.System.Data.DataColumn
        
        Private columnHABER As Global.System.Data.DataColumn
        
        Private columnDIA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_CTA_AUX"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_AUXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_AUX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_AÑOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_AÑO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_MES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOC_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_SColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_S
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_D_HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_D_H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_CTA_AUXRow
            Get
                Return CType(Me.Rows(index),REPORTE_CTA_AUXRow)
            End Get
        End Property
        
        Public Event REPORTE_CTA_AUXRowChanging As REPORTE_CTA_AUXRowChangeEventHandler
        
        Public Event REPORTE_CTA_AUXRowChanged As REPORTE_CTA_AUXRowChangeEventHandler
        
        Public Event REPORTE_CTA_AUXRowDeleting As REPORTE_CTA_AUXRowChangeEventHandler
        
        Public Event REPORTE_CTA_AUXRowDeleted As REPORTE_CTA_AUXRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_CTA_AUXRow(ByVal row As REPORTE_CTA_AUXRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_CTA_AUXRow( _
                    ByVal COD_AUX As String,  _
                    ByVal COD_COMP As String,  _
                    ByVal NRO_COMP As String,  _
                    ByVal FE_AÑO As String,  _
                    ByVal FE_MES As String,  _
                    ByVal FECHA_COMP As Date,  _
                    ByVal ITEM As String,  _
                    ByVal COD_DOC As String,  _
                    ByVal NRO_DOC As String,  _
                    ByVal COD_PER As String,  _
                    ByVal NRO_DOC_PER As String,  _
                    ByVal FECHA_DOC As Date,  _
                    ByVal COD_REF As String,  _
                    ByVal NRO_REF As String,  _
                    ByVal FECHA_REF As Date,  _
                    ByVal GLOSA As String,  _
                    ByVal COD_CUENTA As String,  _
                    ByVal IMP_S As Decimal,  _
                    ByVal IMP_D As Decimal,  _
                    ByVal COD_D_H As String,  _
                    ByVal COD_MONEDA As String,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal COD_CC As String,  _
                    ByVal DEBE As Decimal,  _
                    ByVal HABER As Decimal,  _
                    ByVal DIA As Integer) As REPORTE_CTA_AUXRow
            Dim rowREPORTE_CTA_AUXRow As REPORTE_CTA_AUXRow = CType(Me.NewRow,REPORTE_CTA_AUXRow)
            Dim columnValuesArray() As Object = New Object() {COD_AUX, COD_COMP, NRO_COMP, FE_AÑO, FE_MES, FECHA_COMP, ITEM, COD_DOC, NRO_DOC, COD_PER, NRO_DOC_PER, FECHA_DOC, COD_REF, NRO_REF, FECHA_REF, GLOSA, COD_CUENTA, IMP_S, IMP_D, COD_D_H, COD_MONEDA, TIPO_CAMBIO, COD_CC, DEBE, HABER, DIA}
            rowREPORTE_CTA_AUXRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_CTA_AUXRow)
            Return rowREPORTE_CTA_AUXRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_CTA_AUXDataTable = CType(MyBase.Clone,REPORTE_CTA_AUXDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_CTA_AUXDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_AUX = MyBase.Columns("COD_AUX")
            Me.columnCOD_COMP = MyBase.Columns("COD_COMP")
            Me.columnNRO_COMP = MyBase.Columns("NRO_COMP")
            Me.columnFE_AÑO = MyBase.Columns("FE_AÑO")
            Me.columnFE_MES = MyBase.Columns("FE_MES")
            Me.columnFECHA_COMP = MyBase.Columns("FECHA_COMP")
            Me.columnITEM = MyBase.Columns("ITEM")
            Me.columnCOD_DOC = MyBase.Columns("COD_DOC")
            Me.columnNRO_DOC = MyBase.Columns("NRO_DOC")
            Me.columnCOD_PER = MyBase.Columns("COD_PER")
            Me.columnNRO_DOC_PER = MyBase.Columns("NRO_DOC_PER")
            Me.columnFECHA_DOC = MyBase.Columns("FECHA_DOC")
            Me.columnCOD_REF = MyBase.Columns("COD_REF")
            Me.columnNRO_REF = MyBase.Columns("NRO_REF")
            Me.columnFECHA_REF = MyBase.Columns("FECHA_REF")
            Me.columnGLOSA = MyBase.Columns("GLOSA")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columnIMP_S = MyBase.Columns("IMP_S")
            Me.columnIMP_D = MyBase.Columns("IMP_D")
            Me.columnCOD_D_H = MyBase.Columns("COD_D_H")
            Me.columnCOD_MONEDA = MyBase.Columns("COD_MONEDA")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnCOD_CC = MyBase.Columns("COD_CC")
            Me.columnDEBE = MyBase.Columns("DEBE")
            Me.columnHABER = MyBase.Columns("HABER")
            Me.columnDIA = MyBase.Columns("DIA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_AUX = New Global.System.Data.DataColumn("COD_AUX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_AUX)
            Me.columnCOD_COMP = New Global.System.Data.DataColumn("COD_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_COMP)
            Me.columnNRO_COMP = New Global.System.Data.DataColumn("NRO_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_COMP)
            Me.columnFE_AÑO = New Global.System.Data.DataColumn("FE_AÑO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_AÑO)
            Me.columnFE_MES = New Global.System.Data.DataColumn("FE_MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_MES)
            Me.columnFECHA_COMP = New Global.System.Data.DataColumn("FECHA_COMP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_COMP)
            Me.columnITEM = New Global.System.Data.DataColumn("ITEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM)
            Me.columnCOD_DOC = New Global.System.Data.DataColumn("COD_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_DOC)
            Me.columnNRO_DOC = New Global.System.Data.DataColumn("NRO_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC)
            Me.columnCOD_PER = New Global.System.Data.DataColumn("COD_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_PER)
            Me.columnNRO_DOC_PER = New Global.System.Data.DataColumn("NRO_DOC_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC_PER)
            Me.columnFECHA_DOC = New Global.System.Data.DataColumn("FECHA_DOC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_DOC)
            Me.columnCOD_REF = New Global.System.Data.DataColumn("COD_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_REF)
            Me.columnNRO_REF = New Global.System.Data.DataColumn("NRO_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_REF)
            Me.columnFECHA_REF = New Global.System.Data.DataColumn("FECHA_REF", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REF)
            Me.columnGLOSA = New Global.System.Data.DataColumn("GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columnIMP_S = New Global.System.Data.DataColumn("IMP_S", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_S)
            Me.columnIMP_D = New Global.System.Data.DataColumn("IMP_D", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_D)
            Me.columnCOD_D_H = New Global.System.Data.DataColumn("COD_D_H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_D_H)
            Me.columnCOD_MONEDA = New Global.System.Data.DataColumn("COD_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_MONEDA)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnCOD_CC = New Global.System.Data.DataColumn("COD_CC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CC)
            Me.columnDEBE = New Global.System.Data.DataColumn("DEBE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE)
            Me.columnHABER = New Global.System.Data.DataColumn("HABER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER)
            Me.columnDIA = New Global.System.Data.DataColumn("DIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIA)
            Me.columnCOD_AUX.AllowDBNull = false
            Me.columnCOD_AUX.MaxLength = 2
            Me.columnCOD_COMP.AllowDBNull = false
            Me.columnCOD_COMP.MaxLength = 3
            Me.columnNRO_COMP.AllowDBNull = false
            Me.columnNRO_COMP.MaxLength = 4
            Me.columnFE_AÑO.AllowDBNull = false
            Me.columnFE_AÑO.MaxLength = 4
            Me.columnFE_MES.AllowDBNull = false
            Me.columnFE_MES.MaxLength = 2
            Me.columnITEM.AllowDBNull = false
            Me.columnITEM.MaxLength = 4
            Me.columnCOD_DOC.MaxLength = 2
            Me.columnNRO_DOC.MaxLength = 20
            Me.columnCOD_PER.MaxLength = 5
            Me.columnNRO_DOC_PER.MaxLength = 20
            Me.columnCOD_REF.MaxLength = 2
            Me.columnNRO_REF.MaxLength = 20
            Me.columnGLOSA.MaxLength = 60
            Me.columnCOD_CUENTA.MaxLength = 8
            Me.columnCOD_D_H.MaxLength = 1
            Me.columnCOD_MONEDA.MaxLength = 1
            Me.columnCOD_CC.MaxLength = 5
            Me.columnDEBE.ReadOnly = true
            Me.columnHABER.ReadOnly = true
            Me.columnDIA.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_CTA_AUXRow() As REPORTE_CTA_AUXRow
            Return CType(Me.NewRow,REPORTE_CTA_AUXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_CTA_AUXRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_CTA_AUXRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_CTA_AUXRowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_AUXRowChanged(Me, New REPORTE_CTA_AUXRowChangeEvent(CType(e.Row,REPORTE_CTA_AUXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_CTA_AUXRowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_AUXRowChanging(Me, New REPORTE_CTA_AUXRowChangeEvent(CType(e.Row,REPORTE_CTA_AUXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_CTA_AUXRowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_AUXRowDeleted(Me, New REPORTE_CTA_AUXRowChangeEvent(CType(e.Row,REPORTE_CTA_AUXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_CTA_AUXRowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_AUXRowDeleting(Me, New REPORTE_CTA_AUXRowChangeEvent(CType(e.Row,REPORTE_CTA_AUXRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_CTA_AUXRow(ByVal row As REPORTE_CTA_AUXRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_REP_CTA_AUX = New DT_REP_CTA_AUX
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_CTA_AUXDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_CTA_COMPDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_AUX As Global.System.Data.DataColumn
        
        Private columnCOD_COMP As Global.System.Data.DataColumn
        
        Private columnNRO_COMP As Global.System.Data.DataColumn
        
        Private columnFE_AÑO As Global.System.Data.DataColumn
        
        Private columnFE_MES As Global.System.Data.DataColumn
        
        Private columnFECHA_COMP As Global.System.Data.DataColumn
        
        Private columnITEM As Global.System.Data.DataColumn
        
        Private columnCOD_DOC As Global.System.Data.DataColumn
        
        Private columnNRO_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_PER As Global.System.Data.DataColumn
        
        Private columnNRO_DOC_PER As Global.System.Data.DataColumn
        
        Private columnFECHA_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_REF As Global.System.Data.DataColumn
        
        Private columnNRO_REF As Global.System.Data.DataColumn
        
        Private columnFECHA_REF As Global.System.Data.DataColumn
        
        Private columnGLOSA As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columnIMP_S As Global.System.Data.DataColumn
        
        Private columnIMP_D As Global.System.Data.DataColumn
        
        Private columnCOD_D_H As Global.System.Data.DataColumn
        
        Private columnCOD_MONEDA As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnCOD_CC As Global.System.Data.DataColumn
        
        Private columnDEBE As Global.System.Data.DataColumn
        
        Private columnHABER As Global.System.Data.DataColumn
        
        Private columnDIA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_CTA_COMP"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_AUXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_AUX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_AÑOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_AÑO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_MES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOC_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_SColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_S
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_D_HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_D_H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_CTA_COMPRow
            Get
                Return CType(Me.Rows(index),REPORTE_CTA_COMPRow)
            End Get
        End Property
        
        Public Event REPORTE_CTA_COMPRowChanging As REPORTE_CTA_COMPRowChangeEventHandler
        
        Public Event REPORTE_CTA_COMPRowChanged As REPORTE_CTA_COMPRowChangeEventHandler
        
        Public Event REPORTE_CTA_COMPRowDeleting As REPORTE_CTA_COMPRowChangeEventHandler
        
        Public Event REPORTE_CTA_COMPRowDeleted As REPORTE_CTA_COMPRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_CTA_COMPRow(ByVal row As REPORTE_CTA_COMPRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_CTA_COMPRow( _
                    ByVal COD_AUX As String,  _
                    ByVal COD_COMP As String,  _
                    ByVal NRO_COMP As String,  _
                    ByVal FE_AÑO As String,  _
                    ByVal FE_MES As String,  _
                    ByVal FECHA_COMP As Date,  _
                    ByVal ITEM As String,  _
                    ByVal COD_DOC As String,  _
                    ByVal NRO_DOC As String,  _
                    ByVal COD_PER As String,  _
                    ByVal NRO_DOC_PER As String,  _
                    ByVal FECHA_DOC As Date,  _
                    ByVal COD_REF As String,  _
                    ByVal NRO_REF As String,  _
                    ByVal FECHA_REF As Date,  _
                    ByVal GLOSA As String,  _
                    ByVal COD_CUENTA As String,  _
                    ByVal IMP_S As Decimal,  _
                    ByVal IMP_D As Decimal,  _
                    ByVal COD_D_H As String,  _
                    ByVal COD_MONEDA As String,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal COD_CC As String,  _
                    ByVal DEBE As Decimal,  _
                    ByVal HABER As Decimal,  _
                    ByVal DIA As Integer) As REPORTE_CTA_COMPRow
            Dim rowREPORTE_CTA_COMPRow As REPORTE_CTA_COMPRow = CType(Me.NewRow,REPORTE_CTA_COMPRow)
            Dim columnValuesArray() As Object = New Object() {COD_AUX, COD_COMP, NRO_COMP, FE_AÑO, FE_MES, FECHA_COMP, ITEM, COD_DOC, NRO_DOC, COD_PER, NRO_DOC_PER, FECHA_DOC, COD_REF, NRO_REF, FECHA_REF, GLOSA, COD_CUENTA, IMP_S, IMP_D, COD_D_H, COD_MONEDA, TIPO_CAMBIO, COD_CC, DEBE, HABER, DIA}
            rowREPORTE_CTA_COMPRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_CTA_COMPRow)
            Return rowREPORTE_CTA_COMPRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_CTA_COMPDataTable = CType(MyBase.Clone,REPORTE_CTA_COMPDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_CTA_COMPDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_AUX = MyBase.Columns("COD_AUX")
            Me.columnCOD_COMP = MyBase.Columns("COD_COMP")
            Me.columnNRO_COMP = MyBase.Columns("NRO_COMP")
            Me.columnFE_AÑO = MyBase.Columns("FE_AÑO")
            Me.columnFE_MES = MyBase.Columns("FE_MES")
            Me.columnFECHA_COMP = MyBase.Columns("FECHA_COMP")
            Me.columnITEM = MyBase.Columns("ITEM")
            Me.columnCOD_DOC = MyBase.Columns("COD_DOC")
            Me.columnNRO_DOC = MyBase.Columns("NRO_DOC")
            Me.columnCOD_PER = MyBase.Columns("COD_PER")
            Me.columnNRO_DOC_PER = MyBase.Columns("NRO_DOC_PER")
            Me.columnFECHA_DOC = MyBase.Columns("FECHA_DOC")
            Me.columnCOD_REF = MyBase.Columns("COD_REF")
            Me.columnNRO_REF = MyBase.Columns("NRO_REF")
            Me.columnFECHA_REF = MyBase.Columns("FECHA_REF")
            Me.columnGLOSA = MyBase.Columns("GLOSA")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columnIMP_S = MyBase.Columns("IMP_S")
            Me.columnIMP_D = MyBase.Columns("IMP_D")
            Me.columnCOD_D_H = MyBase.Columns("COD_D_H")
            Me.columnCOD_MONEDA = MyBase.Columns("COD_MONEDA")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnCOD_CC = MyBase.Columns("COD_CC")
            Me.columnDEBE = MyBase.Columns("DEBE")
            Me.columnHABER = MyBase.Columns("HABER")
            Me.columnDIA = MyBase.Columns("DIA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_AUX = New Global.System.Data.DataColumn("COD_AUX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_AUX)
            Me.columnCOD_COMP = New Global.System.Data.DataColumn("COD_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_COMP)
            Me.columnNRO_COMP = New Global.System.Data.DataColumn("NRO_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_COMP)
            Me.columnFE_AÑO = New Global.System.Data.DataColumn("FE_AÑO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_AÑO)
            Me.columnFE_MES = New Global.System.Data.DataColumn("FE_MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_MES)
            Me.columnFECHA_COMP = New Global.System.Data.DataColumn("FECHA_COMP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_COMP)
            Me.columnITEM = New Global.System.Data.DataColumn("ITEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM)
            Me.columnCOD_DOC = New Global.System.Data.DataColumn("COD_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_DOC)
            Me.columnNRO_DOC = New Global.System.Data.DataColumn("NRO_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC)
            Me.columnCOD_PER = New Global.System.Data.DataColumn("COD_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_PER)
            Me.columnNRO_DOC_PER = New Global.System.Data.DataColumn("NRO_DOC_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC_PER)
            Me.columnFECHA_DOC = New Global.System.Data.DataColumn("FECHA_DOC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_DOC)
            Me.columnCOD_REF = New Global.System.Data.DataColumn("COD_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_REF)
            Me.columnNRO_REF = New Global.System.Data.DataColumn("NRO_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_REF)
            Me.columnFECHA_REF = New Global.System.Data.DataColumn("FECHA_REF", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REF)
            Me.columnGLOSA = New Global.System.Data.DataColumn("GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columnIMP_S = New Global.System.Data.DataColumn("IMP_S", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_S)
            Me.columnIMP_D = New Global.System.Data.DataColumn("IMP_D", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_D)
            Me.columnCOD_D_H = New Global.System.Data.DataColumn("COD_D_H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_D_H)
            Me.columnCOD_MONEDA = New Global.System.Data.DataColumn("COD_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_MONEDA)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnCOD_CC = New Global.System.Data.DataColumn("COD_CC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CC)
            Me.columnDEBE = New Global.System.Data.DataColumn("DEBE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE)
            Me.columnHABER = New Global.System.Data.DataColumn("HABER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER)
            Me.columnDIA = New Global.System.Data.DataColumn("DIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIA)
            Me.columnCOD_AUX.AllowDBNull = false
            Me.columnCOD_AUX.MaxLength = 2
            Me.columnCOD_COMP.AllowDBNull = false
            Me.columnCOD_COMP.MaxLength = 3
            Me.columnNRO_COMP.AllowDBNull = false
            Me.columnNRO_COMP.MaxLength = 4
            Me.columnFE_AÑO.AllowDBNull = false
            Me.columnFE_AÑO.MaxLength = 4
            Me.columnFE_MES.AllowDBNull = false
            Me.columnFE_MES.MaxLength = 2
            Me.columnITEM.AllowDBNull = false
            Me.columnITEM.MaxLength = 4
            Me.columnCOD_DOC.MaxLength = 2
            Me.columnNRO_DOC.MaxLength = 20
            Me.columnCOD_PER.MaxLength = 5
            Me.columnNRO_DOC_PER.MaxLength = 20
            Me.columnCOD_REF.MaxLength = 2
            Me.columnNRO_REF.MaxLength = 20
            Me.columnGLOSA.MaxLength = 60
            Me.columnCOD_CUENTA.MaxLength = 8
            Me.columnCOD_D_H.MaxLength = 1
            Me.columnCOD_MONEDA.MaxLength = 1
            Me.columnCOD_CC.MaxLength = 5
            Me.columnDEBE.ReadOnly = true
            Me.columnHABER.ReadOnly = true
            Me.columnDIA.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_CTA_COMPRow() As REPORTE_CTA_COMPRow
            Return CType(Me.NewRow,REPORTE_CTA_COMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_CTA_COMPRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_CTA_COMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_CTA_COMPRowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_COMPRowChanged(Me, New REPORTE_CTA_COMPRowChangeEvent(CType(e.Row,REPORTE_CTA_COMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_CTA_COMPRowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_COMPRowChanging(Me, New REPORTE_CTA_COMPRowChangeEvent(CType(e.Row,REPORTE_CTA_COMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_CTA_COMPRowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_COMPRowDeleted(Me, New REPORTE_CTA_COMPRowChangeEvent(CType(e.Row,REPORTE_CTA_COMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_CTA_COMPRowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_COMPRowDeleting(Me, New REPORTE_CTA_COMPRowChangeEvent(CType(e.Row,REPORTE_CTA_COMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_CTA_COMPRow(ByVal row As REPORTE_CTA_COMPRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_REP_CTA_AUX = New DT_REP_CTA_AUX
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_CTA_COMPDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_CTA_CTA_CTEDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFE_AÑO As Global.System.Data.DataColumn
        
        Private columnFE_MES As Global.System.Data.DataColumn
        
        Private columnCOD_AUX As Global.System.Data.DataColumn
        
        Private columnCOD_COMP As Global.System.Data.DataColumn
        
        Private columnNRO_COMP As Global.System.Data.DataColumn
        
        Private columnCOD_DOC As Global.System.Data.DataColumn
        
        Private columnNRO_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_PER As Global.System.Data.DataColumn
        
        Private columnITEM As Global.System.Data.DataColumn
        
        Private columnFECHA_DOC As Global.System.Data.DataColumn
        
        Private columnNRO_REF As Global.System.Data.DataColumn
        
        Private columnGLOSA As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columnIMP_S As Global.System.Data.DataColumn
        
        Private columnIMP_D As Global.System.Data.DataColumn
        
        Private columnCOD_D_H As Global.System.Data.DataColumn
        
        Private columnCOD_MONEDA As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnCOD_CC As Global.System.Data.DataColumn
        
        Private columnFECHA_COMP As Global.System.Data.DataColumn
        
        Private columnIMP_S_DEBE As Global.System.Data.DataColumn
        
        Private columnIMP_S_HABER As Global.System.Data.DataColumn
        
        Private columnDESC_PER As Global.System.Data.DataColumn
        
        Private columnIMP_D_DEBE As Global.System.Data.DataColumn
        
        Private columnIMP_D_HABER As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_CTA_CTA_CTE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_AÑOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_AÑO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_MES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_AUXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_AUX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_SColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_S
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_D_HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_D_H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_S_DEBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_S_DEBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_S_HABERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_S_HABER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_D_DEBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_D_DEBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_D_HABERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_D_HABER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_CTA_CTA_CTERow
            Get
                Return CType(Me.Rows(index),REPORTE_CTA_CTA_CTERow)
            End Get
        End Property
        
        Public Event REPORTE_CTA_CTA_CTERowChanging As REPORTE_CTA_CTA_CTERowChangeEventHandler
        
        Public Event REPORTE_CTA_CTA_CTERowChanged As REPORTE_CTA_CTA_CTERowChangeEventHandler
        
        Public Event REPORTE_CTA_CTA_CTERowDeleting As REPORTE_CTA_CTA_CTERowChangeEventHandler
        
        Public Event REPORTE_CTA_CTA_CTERowDeleted As REPORTE_CTA_CTA_CTERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_CTA_CTA_CTERow(ByVal row As REPORTE_CTA_CTA_CTERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_CTA_CTA_CTERow( _
                    ByVal FE_AÑO As String,  _
                    ByVal FE_MES As String,  _
                    ByVal COD_AUX As String,  _
                    ByVal COD_COMP As String,  _
                    ByVal NRO_COMP As String,  _
                    ByVal COD_DOC As String,  _
                    ByVal NRO_DOC As String,  _
                    ByVal COD_PER As String,  _
                    ByVal ITEM As String,  _
                    ByVal FECHA_DOC As Date,  _
                    ByVal NRO_REF As String,  _
                    ByVal GLOSA As String,  _
                    ByVal COD_CUENTA As String,  _
                    ByVal IMP_S As Decimal,  _
                    ByVal IMP_D As Decimal,  _
                    ByVal COD_D_H As String,  _
                    ByVal COD_MONEDA As String,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal COD_CC As String,  _
                    ByVal FECHA_COMP As Date,  _
                    ByVal IMP_S_DEBE As Decimal,  _
                    ByVal IMP_S_HABER As Decimal,  _
                    ByVal DESC_PER As String,  _
                    ByVal IMP_D_DEBE As Decimal,  _
                    ByVal IMP_D_HABER As Decimal) As REPORTE_CTA_CTA_CTERow
            Dim rowREPORTE_CTA_CTA_CTERow As REPORTE_CTA_CTA_CTERow = CType(Me.NewRow,REPORTE_CTA_CTA_CTERow)
            Dim columnValuesArray() As Object = New Object() {FE_AÑO, FE_MES, COD_AUX, COD_COMP, NRO_COMP, COD_DOC, NRO_DOC, COD_PER, ITEM, FECHA_DOC, NRO_REF, GLOSA, COD_CUENTA, IMP_S, IMP_D, COD_D_H, COD_MONEDA, TIPO_CAMBIO, COD_CC, FECHA_COMP, IMP_S_DEBE, IMP_S_HABER, DESC_PER, IMP_D_DEBE, IMP_D_HABER}
            rowREPORTE_CTA_CTA_CTERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_CTA_CTA_CTERow)
            Return rowREPORTE_CTA_CTA_CTERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByFE_AÑOFE_MESCOD_AUXCOD_COMPNRO_COMPITEM(ByVal FE_AÑO As String, ByVal FE_MES As String, ByVal COD_AUX As String, ByVal COD_COMP As String, ByVal NRO_COMP As String, ByVal ITEM As String) As REPORTE_CTA_CTA_CTERow
            Return CType(Me.Rows.Find(New Object() {FE_AÑO, FE_MES, COD_AUX, COD_COMP, NRO_COMP, ITEM}),REPORTE_CTA_CTA_CTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_CTA_CTA_CTEDataTable = CType(MyBase.Clone,REPORTE_CTA_CTA_CTEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_CTA_CTA_CTEDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnFE_AÑO = MyBase.Columns("FE_AÑO")
            Me.columnFE_MES = MyBase.Columns("FE_MES")
            Me.columnCOD_AUX = MyBase.Columns("COD_AUX")
            Me.columnCOD_COMP = MyBase.Columns("COD_COMP")
            Me.columnNRO_COMP = MyBase.Columns("NRO_COMP")
            Me.columnCOD_DOC = MyBase.Columns("COD_DOC")
            Me.columnNRO_DOC = MyBase.Columns("NRO_DOC")
            Me.columnCOD_PER = MyBase.Columns("COD_PER")
            Me.columnITEM = MyBase.Columns("ITEM")
            Me.columnFECHA_DOC = MyBase.Columns("FECHA_DOC")
            Me.columnNRO_REF = MyBase.Columns("NRO_REF")
            Me.columnGLOSA = MyBase.Columns("GLOSA")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columnIMP_S = MyBase.Columns("IMP_S")
            Me.columnIMP_D = MyBase.Columns("IMP_D")
            Me.columnCOD_D_H = MyBase.Columns("COD_D_H")
            Me.columnCOD_MONEDA = MyBase.Columns("COD_MONEDA")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnCOD_CC = MyBase.Columns("COD_CC")
            Me.columnFECHA_COMP = MyBase.Columns("FECHA_COMP")
            Me.columnIMP_S_DEBE = MyBase.Columns("IMP_S_DEBE")
            Me.columnIMP_S_HABER = MyBase.Columns("IMP_S_HABER")
            Me.columnDESC_PER = MyBase.Columns("DESC_PER")
            Me.columnIMP_D_DEBE = MyBase.Columns("IMP_D_DEBE")
            Me.columnIMP_D_HABER = MyBase.Columns("IMP_D_HABER")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnFE_AÑO = New Global.System.Data.DataColumn("FE_AÑO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_AÑO)
            Me.columnFE_MES = New Global.System.Data.DataColumn("FE_MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_MES)
            Me.columnCOD_AUX = New Global.System.Data.DataColumn("COD_AUX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_AUX)
            Me.columnCOD_COMP = New Global.System.Data.DataColumn("COD_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_COMP)
            Me.columnNRO_COMP = New Global.System.Data.DataColumn("NRO_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_COMP)
            Me.columnCOD_DOC = New Global.System.Data.DataColumn("COD_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_DOC)
            Me.columnNRO_DOC = New Global.System.Data.DataColumn("NRO_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC)
            Me.columnCOD_PER = New Global.System.Data.DataColumn("COD_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_PER)
            Me.columnITEM = New Global.System.Data.DataColumn("ITEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM)
            Me.columnFECHA_DOC = New Global.System.Data.DataColumn("FECHA_DOC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_DOC)
            Me.columnNRO_REF = New Global.System.Data.DataColumn("NRO_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_REF)
            Me.columnGLOSA = New Global.System.Data.DataColumn("GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columnIMP_S = New Global.System.Data.DataColumn("IMP_S", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_S)
            Me.columnIMP_D = New Global.System.Data.DataColumn("IMP_D", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_D)
            Me.columnCOD_D_H = New Global.System.Data.DataColumn("COD_D_H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_D_H)
            Me.columnCOD_MONEDA = New Global.System.Data.DataColumn("COD_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_MONEDA)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnCOD_CC = New Global.System.Data.DataColumn("COD_CC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CC)
            Me.columnFECHA_COMP = New Global.System.Data.DataColumn("FECHA_COMP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_COMP)
            Me.columnIMP_S_DEBE = New Global.System.Data.DataColumn("IMP_S_DEBE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_S_DEBE)
            Me.columnIMP_S_HABER = New Global.System.Data.DataColumn("IMP_S_HABER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_S_HABER)
            Me.columnDESC_PER = New Global.System.Data.DataColumn("DESC_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_PER)
            Me.columnIMP_D_DEBE = New Global.System.Data.DataColumn("IMP_D_DEBE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_D_DEBE)
            Me.columnIMP_D_HABER = New Global.System.Data.DataColumn("IMP_D_HABER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_D_HABER)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFE_AÑO, Me.columnFE_MES, Me.columnCOD_AUX, Me.columnCOD_COMP, Me.columnNRO_COMP, Me.columnITEM}, true))
            Me.columnFE_AÑO.AllowDBNull = false
            Me.columnFE_AÑO.MaxLength = 4
            Me.columnFE_MES.AllowDBNull = false
            Me.columnFE_MES.MaxLength = 2
            Me.columnCOD_AUX.AllowDBNull = false
            Me.columnCOD_AUX.MaxLength = 2
            Me.columnCOD_COMP.AllowDBNull = false
            Me.columnCOD_COMP.MaxLength = 3
            Me.columnNRO_COMP.AllowDBNull = false
            Me.columnNRO_COMP.MaxLength = 4
            Me.columnCOD_DOC.MaxLength = 2
            Me.columnNRO_DOC.MaxLength = 20
            Me.columnCOD_PER.MaxLength = 5
            Me.columnITEM.AllowDBNull = false
            Me.columnITEM.MaxLength = 4
            Me.columnNRO_REF.MaxLength = 20
            Me.columnGLOSA.MaxLength = 60
            Me.columnCOD_CUENTA.MaxLength = 8
            Me.columnCOD_D_H.MaxLength = 1
            Me.columnCOD_MONEDA.MaxLength = 1
            Me.columnCOD_CC.ReadOnly = true
            Me.columnCOD_CC.MaxLength = 5
            Me.columnIMP_S_DEBE.ReadOnly = true
            Me.columnIMP_S_HABER.ReadOnly = true
            Me.columnDESC_PER.ReadOnly = true
            Me.columnDESC_PER.MaxLength = 60
            Me.columnIMP_D_DEBE.ReadOnly = true
            Me.columnIMP_D_HABER.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_CTA_CTA_CTERow() As REPORTE_CTA_CTA_CTERow
            Return CType(Me.NewRow,REPORTE_CTA_CTA_CTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_CTA_CTA_CTERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_CTA_CTA_CTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_CTA_CTA_CTERowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_CTA_CTERowChanged(Me, New REPORTE_CTA_CTA_CTERowChangeEvent(CType(e.Row,REPORTE_CTA_CTA_CTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_CTA_CTA_CTERowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_CTA_CTERowChanging(Me, New REPORTE_CTA_CTA_CTERowChangeEvent(CType(e.Row,REPORTE_CTA_CTA_CTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_CTA_CTA_CTERowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_CTA_CTERowDeleted(Me, New REPORTE_CTA_CTA_CTERowChangeEvent(CType(e.Row,REPORTE_CTA_CTA_CTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_CTA_CTA_CTERowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_CTA_CTERowDeleting(Me, New REPORTE_CTA_CTA_CTERowChangeEvent(CType(e.Row,REPORTE_CTA_CTA_CTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_CTA_CTA_CTERow(ByVal row As REPORTE_CTA_CTA_CTERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_REP_CTA_AUX = New DT_REP_CTA_AUX
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_CTA_CTA_CTEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_CTA_MASKDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFE_AÑO As Global.System.Data.DataColumn
        
        Private columnFE_MES As Global.System.Data.DataColumn
        
        Private columnCOD_AUX As Global.System.Data.DataColumn
        
        Private columnCOD_COMP As Global.System.Data.DataColumn
        
        Private columnNRO_COMP As Global.System.Data.DataColumn
        
        Private columnCOD_DOC As Global.System.Data.DataColumn
        
        Private columnNRO_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_PER As Global.System.Data.DataColumn
        
        Private columnITEM As Global.System.Data.DataColumn
        
        Private columnFECHA_DOC As Global.System.Data.DataColumn
        
        Private columnNRO_REF As Global.System.Data.DataColumn
        
        Private columnGLOSA As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columnIMP_S As Global.System.Data.DataColumn
        
        Private columnIMP_D As Global.System.Data.DataColumn
        
        Private columnCOD_D_H As Global.System.Data.DataColumn
        
        Private columnCOD_MONEDA As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnCOD_CC As Global.System.Data.DataColumn
        
        Private columnFECHA_COMP As Global.System.Data.DataColumn
        
        Private columnIMP_S_DEBE As Global.System.Data.DataColumn
        
        Private columnIMP_S_HABER As Global.System.Data.DataColumn
        
        Private columnDIA As Global.System.Data.DataColumn
        
        Private columnDESC_CUENTA As Global.System.Data.DataColumn
        
        Private columnCOD_REF As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_CTA_MASK"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_AÑOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_AÑO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_MES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_AUXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_AUX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_SColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_S
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_D_HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_D_H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_S_DEBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_S_DEBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_S_HABERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_S_HABER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_CTA_MASKRow
            Get
                Return CType(Me.Rows(index),REPORTE_CTA_MASKRow)
            End Get
        End Property
        
        Public Event REPORTE_CTA_MASKRowChanging As REPORTE_CTA_MASKRowChangeEventHandler
        
        Public Event REPORTE_CTA_MASKRowChanged As REPORTE_CTA_MASKRowChangeEventHandler
        
        Public Event REPORTE_CTA_MASKRowDeleting As REPORTE_CTA_MASKRowChangeEventHandler
        
        Public Event REPORTE_CTA_MASKRowDeleted As REPORTE_CTA_MASKRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_CTA_MASKRow(ByVal row As REPORTE_CTA_MASKRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_CTA_MASKRow( _
                    ByVal FE_AÑO As String,  _
                    ByVal FE_MES As String,  _
                    ByVal COD_AUX As String,  _
                    ByVal COD_COMP As String,  _
                    ByVal NRO_COMP As String,  _
                    ByVal COD_DOC As String,  _
                    ByVal NRO_DOC As String,  _
                    ByVal COD_PER As String,  _
                    ByVal ITEM As String,  _
                    ByVal FECHA_DOC As Date,  _
                    ByVal NRO_REF As String,  _
                    ByVal GLOSA As String,  _
                    ByVal COD_CUENTA As String,  _
                    ByVal IMP_S As Decimal,  _
                    ByVal IMP_D As Decimal,  _
                    ByVal COD_D_H As String,  _
                    ByVal COD_MONEDA As String,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal COD_CC As String,  _
                    ByVal FECHA_COMP As Date,  _
                    ByVal IMP_S_DEBE As Decimal,  _
                    ByVal IMP_S_HABER As Decimal,  _
                    ByVal DIA As Integer,  _
                    ByVal DESC_CUENTA As String,  _
                    ByVal COD_REF As String) As REPORTE_CTA_MASKRow
            Dim rowREPORTE_CTA_MASKRow As REPORTE_CTA_MASKRow = CType(Me.NewRow,REPORTE_CTA_MASKRow)
            Dim columnValuesArray() As Object = New Object() {FE_AÑO, FE_MES, COD_AUX, COD_COMP, NRO_COMP, COD_DOC, NRO_DOC, COD_PER, ITEM, FECHA_DOC, NRO_REF, GLOSA, COD_CUENTA, IMP_S, IMP_D, COD_D_H, COD_MONEDA, TIPO_CAMBIO, COD_CC, FECHA_COMP, IMP_S_DEBE, IMP_S_HABER, DIA, DESC_CUENTA, COD_REF}
            rowREPORTE_CTA_MASKRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_CTA_MASKRow)
            Return rowREPORTE_CTA_MASKRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByFE_AÑOFE_MESCOD_AUXCOD_COMPNRO_COMPITEM(ByVal FE_AÑO As String, ByVal FE_MES As String, ByVal COD_AUX As String, ByVal COD_COMP As String, ByVal NRO_COMP As String, ByVal ITEM As String) As REPORTE_CTA_MASKRow
            Return CType(Me.Rows.Find(New Object() {FE_AÑO, FE_MES, COD_AUX, COD_COMP, NRO_COMP, ITEM}),REPORTE_CTA_MASKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_CTA_MASKDataTable = CType(MyBase.Clone,REPORTE_CTA_MASKDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_CTA_MASKDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnFE_AÑO = MyBase.Columns("FE_AÑO")
            Me.columnFE_MES = MyBase.Columns("FE_MES")
            Me.columnCOD_AUX = MyBase.Columns("COD_AUX")
            Me.columnCOD_COMP = MyBase.Columns("COD_COMP")
            Me.columnNRO_COMP = MyBase.Columns("NRO_COMP")
            Me.columnCOD_DOC = MyBase.Columns("COD_DOC")
            Me.columnNRO_DOC = MyBase.Columns("NRO_DOC")
            Me.columnCOD_PER = MyBase.Columns("COD_PER")
            Me.columnITEM = MyBase.Columns("ITEM")
            Me.columnFECHA_DOC = MyBase.Columns("FECHA_DOC")
            Me.columnNRO_REF = MyBase.Columns("NRO_REF")
            Me.columnGLOSA = MyBase.Columns("GLOSA")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columnIMP_S = MyBase.Columns("IMP_S")
            Me.columnIMP_D = MyBase.Columns("IMP_D")
            Me.columnCOD_D_H = MyBase.Columns("COD_D_H")
            Me.columnCOD_MONEDA = MyBase.Columns("COD_MONEDA")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnCOD_CC = MyBase.Columns("COD_CC")
            Me.columnFECHA_COMP = MyBase.Columns("FECHA_COMP")
            Me.columnIMP_S_DEBE = MyBase.Columns("IMP_S_DEBE")
            Me.columnIMP_S_HABER = MyBase.Columns("IMP_S_HABER")
            Me.columnDIA = MyBase.Columns("DIA")
            Me.columnDESC_CUENTA = MyBase.Columns("DESC_CUENTA")
            Me.columnCOD_REF = MyBase.Columns("COD_REF")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnFE_AÑO = New Global.System.Data.DataColumn("FE_AÑO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_AÑO)
            Me.columnFE_MES = New Global.System.Data.DataColumn("FE_MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_MES)
            Me.columnCOD_AUX = New Global.System.Data.DataColumn("COD_AUX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_AUX)
            Me.columnCOD_COMP = New Global.System.Data.DataColumn("COD_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_COMP)
            Me.columnNRO_COMP = New Global.System.Data.DataColumn("NRO_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_COMP)
            Me.columnCOD_DOC = New Global.System.Data.DataColumn("COD_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_DOC)
            Me.columnNRO_DOC = New Global.System.Data.DataColumn("NRO_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC)
            Me.columnCOD_PER = New Global.System.Data.DataColumn("COD_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_PER)
            Me.columnITEM = New Global.System.Data.DataColumn("ITEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM)
            Me.columnFECHA_DOC = New Global.System.Data.DataColumn("FECHA_DOC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_DOC)
            Me.columnNRO_REF = New Global.System.Data.DataColumn("NRO_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_REF)
            Me.columnGLOSA = New Global.System.Data.DataColumn("GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columnIMP_S = New Global.System.Data.DataColumn("IMP_S", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_S)
            Me.columnIMP_D = New Global.System.Data.DataColumn("IMP_D", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_D)
            Me.columnCOD_D_H = New Global.System.Data.DataColumn("COD_D_H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_D_H)
            Me.columnCOD_MONEDA = New Global.System.Data.DataColumn("COD_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_MONEDA)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnCOD_CC = New Global.System.Data.DataColumn("COD_CC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CC)
            Me.columnFECHA_COMP = New Global.System.Data.DataColumn("FECHA_COMP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_COMP)
            Me.columnIMP_S_DEBE = New Global.System.Data.DataColumn("IMP_S_DEBE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_S_DEBE)
            Me.columnIMP_S_HABER = New Global.System.Data.DataColumn("IMP_S_HABER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_S_HABER)
            Me.columnDIA = New Global.System.Data.DataColumn("DIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIA)
            Me.columnDESC_CUENTA = New Global.System.Data.DataColumn("DESC_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CUENTA)
            Me.columnCOD_REF = New Global.System.Data.DataColumn("COD_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_REF)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFE_AÑO, Me.columnFE_MES, Me.columnCOD_AUX, Me.columnCOD_COMP, Me.columnNRO_COMP, Me.columnITEM}, true))
            Me.columnFE_AÑO.AllowDBNull = false
            Me.columnFE_AÑO.MaxLength = 4
            Me.columnFE_MES.AllowDBNull = false
            Me.columnFE_MES.MaxLength = 2
            Me.columnCOD_AUX.AllowDBNull = false
            Me.columnCOD_AUX.MaxLength = 2
            Me.columnCOD_COMP.AllowDBNull = false
            Me.columnCOD_COMP.MaxLength = 3
            Me.columnNRO_COMP.AllowDBNull = false
            Me.columnNRO_COMP.MaxLength = 4
            Me.columnCOD_DOC.MaxLength = 2
            Me.columnNRO_DOC.MaxLength = 20
            Me.columnCOD_PER.MaxLength = 5
            Me.columnITEM.AllowDBNull = false
            Me.columnITEM.MaxLength = 4
            Me.columnNRO_REF.MaxLength = 20
            Me.columnGLOSA.MaxLength = 60
            Me.columnCOD_CUENTA.MaxLength = 8
            Me.columnCOD_D_H.MaxLength = 1
            Me.columnCOD_MONEDA.MaxLength = 1
            Me.columnCOD_CC.ReadOnly = true
            Me.columnCOD_CC.MaxLength = 5
            Me.columnIMP_S_DEBE.ReadOnly = true
            Me.columnIMP_S_HABER.ReadOnly = true
            Me.columnDIA.ReadOnly = true
            Me.columnDESC_CUENTA.MaxLength = 60
            Me.columnCOD_REF.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_CTA_MASKRow() As REPORTE_CTA_MASKRow
            Return CType(Me.NewRow,REPORTE_CTA_MASKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_CTA_MASKRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_CTA_MASKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_CTA_MASKRowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_MASKRowChanged(Me, New REPORTE_CTA_MASKRowChangeEvent(CType(e.Row,REPORTE_CTA_MASKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_CTA_MASKRowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_MASKRowChanging(Me, New REPORTE_CTA_MASKRowChangeEvent(CType(e.Row,REPORTE_CTA_MASKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_CTA_MASKRowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_MASKRowDeleted(Me, New REPORTE_CTA_MASKRowChangeEvent(CType(e.Row,REPORTE_CTA_MASKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_CTA_MASKRowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_MASKRowDeleting(Me, New REPORTE_CTA_MASKRowChangeEvent(CType(e.Row,REPORTE_CTA_MASKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_CTA_MASKRow(ByVal row As REPORTE_CTA_MASKRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_REP_CTA_AUX = New DT_REP_CTA_AUX
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_CTA_MASKDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_CTA_RESUMENDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_AUX As Global.System.Data.DataColumn
        
        Private columnITEM As Global.System.Data.DataColumn
        
        Private columnFE_AÑO As Global.System.Data.DataColumn
        
        Private columnFE_MES As Global.System.Data.DataColumn
        
        Private columnIMP_D As Global.System.Data.DataColumn
        
        Private columnCOD_D_H As Global.System.Data.DataColumn
        
        Private columnIMP_S As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columnDESC_CUENTA As Global.System.Data.DataColumn
        
        Private columnDEBE_SOLES As Global.System.Data.DataColumn
        
        Private columnHABER_SOLES As Global.System.Data.DataColumn
        
        Private columnDEBE_DOLARES As Global.System.Data.DataColumn
        
        Private columnHABER_DOLARES As Global.System.Data.DataColumn
        
        Private columnCTA_GRAL2 As Global.System.Data.DataColumn
        
        Private columnCTA_GRAL3 As Global.System.Data.DataColumn
        
        Private columnDESC_CUENTA2 As Global.System.Data.DataColumn
        
        Private columnDESC_CUENTA3 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_CTA_RESUMEN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_AUXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_AUX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_AÑOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_AÑO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_MES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_D_HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_D_H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_SColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_S
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBE_SOLESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE_SOLES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABER_SOLESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER_SOLES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBE_DOLARESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE_DOLARES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABER_DOLARESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER_DOLARES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CTA_GRAL2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTA_GRAL2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CTA_GRAL3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTA_GRAL3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CUENTA2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CUENTA2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DESC_CUENTA3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESC_CUENTA3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_CTA_RESUMENRow
            Get
                Return CType(Me.Rows(index),REPORTE_CTA_RESUMENRow)
            End Get
        End Property
        
        Public Event REPORTE_CTA_RESUMENRowChanging As REPORTE_CTA_RESUMENRowChangeEventHandler
        
        Public Event REPORTE_CTA_RESUMENRowChanged As REPORTE_CTA_RESUMENRowChangeEventHandler
        
        Public Event REPORTE_CTA_RESUMENRowDeleting As REPORTE_CTA_RESUMENRowChangeEventHandler
        
        Public Event REPORTE_CTA_RESUMENRowDeleted As REPORTE_CTA_RESUMENRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_CTA_RESUMENRow(ByVal row As REPORTE_CTA_RESUMENRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_CTA_RESUMENRow( _
                    ByVal COD_AUX As String,  _
                    ByVal ITEM As String,  _
                    ByVal FE_AÑO As String,  _
                    ByVal FE_MES As String,  _
                    ByVal IMP_D As Decimal,  _
                    ByVal COD_D_H As String,  _
                    ByVal IMP_S As Decimal,  _
                    ByVal COD_CUENTA As String,  _
                    ByVal DESC_CUENTA As String,  _
                    ByVal DEBE_SOLES As Decimal,  _
                    ByVal HABER_SOLES As Decimal,  _
                    ByVal DEBE_DOLARES As Decimal,  _
                    ByVal HABER_DOLARES As Decimal,  _
                    ByVal CTA_GRAL2 As String,  _
                    ByVal CTA_GRAL3 As String,  _
                    ByVal DESC_CUENTA2 As String,  _
                    ByVal DESC_CUENTA3 As String) As REPORTE_CTA_RESUMENRow
            Dim rowREPORTE_CTA_RESUMENRow As REPORTE_CTA_RESUMENRow = CType(Me.NewRow,REPORTE_CTA_RESUMENRow)
            Dim columnValuesArray() As Object = New Object() {COD_AUX, ITEM, FE_AÑO, FE_MES, IMP_D, COD_D_H, IMP_S, COD_CUENTA, DESC_CUENTA, DEBE_SOLES, HABER_SOLES, DEBE_DOLARES, HABER_DOLARES, CTA_GRAL2, CTA_GRAL3, DESC_CUENTA2, DESC_CUENTA3}
            rowREPORTE_CTA_RESUMENRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_CTA_RESUMENRow)
            Return rowREPORTE_CTA_RESUMENRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_CTA_RESUMENDataTable = CType(MyBase.Clone,REPORTE_CTA_RESUMENDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_CTA_RESUMENDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_AUX = MyBase.Columns("COD_AUX")
            Me.columnITEM = MyBase.Columns("ITEM")
            Me.columnFE_AÑO = MyBase.Columns("FE_AÑO")
            Me.columnFE_MES = MyBase.Columns("FE_MES")
            Me.columnIMP_D = MyBase.Columns("IMP_D")
            Me.columnCOD_D_H = MyBase.Columns("COD_D_H")
            Me.columnIMP_S = MyBase.Columns("IMP_S")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columnDESC_CUENTA = MyBase.Columns("DESC_CUENTA")
            Me.columnDEBE_SOLES = MyBase.Columns("DEBE_SOLES")
            Me.columnHABER_SOLES = MyBase.Columns("HABER_SOLES")
            Me.columnDEBE_DOLARES = MyBase.Columns("DEBE_DOLARES")
            Me.columnHABER_DOLARES = MyBase.Columns("HABER_DOLARES")
            Me.columnCTA_GRAL2 = MyBase.Columns("CTA_GRAL2")
            Me.columnCTA_GRAL3 = MyBase.Columns("CTA_GRAL3")
            Me.columnDESC_CUENTA2 = MyBase.Columns("DESC_CUENTA2")
            Me.columnDESC_CUENTA3 = MyBase.Columns("DESC_CUENTA3")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_AUX = New Global.System.Data.DataColumn("COD_AUX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_AUX)
            Me.columnITEM = New Global.System.Data.DataColumn("ITEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM)
            Me.columnFE_AÑO = New Global.System.Data.DataColumn("FE_AÑO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_AÑO)
            Me.columnFE_MES = New Global.System.Data.DataColumn("FE_MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_MES)
            Me.columnIMP_D = New Global.System.Data.DataColumn("IMP_D", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_D)
            Me.columnCOD_D_H = New Global.System.Data.DataColumn("COD_D_H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_D_H)
            Me.columnIMP_S = New Global.System.Data.DataColumn("IMP_S", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_S)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columnDESC_CUENTA = New Global.System.Data.DataColumn("DESC_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CUENTA)
            Me.columnDEBE_SOLES = New Global.System.Data.DataColumn("DEBE_SOLES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE_SOLES)
            Me.columnHABER_SOLES = New Global.System.Data.DataColumn("HABER_SOLES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER_SOLES)
            Me.columnDEBE_DOLARES = New Global.System.Data.DataColumn("DEBE_DOLARES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE_DOLARES)
            Me.columnHABER_DOLARES = New Global.System.Data.DataColumn("HABER_DOLARES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER_DOLARES)
            Me.columnCTA_GRAL2 = New Global.System.Data.DataColumn("CTA_GRAL2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTA_GRAL2)
            Me.columnCTA_GRAL3 = New Global.System.Data.DataColumn("CTA_GRAL3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTA_GRAL3)
            Me.columnDESC_CUENTA2 = New Global.System.Data.DataColumn("DESC_CUENTA2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CUENTA2)
            Me.columnDESC_CUENTA3 = New Global.System.Data.DataColumn("DESC_CUENTA3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESC_CUENTA3)
            Me.columnCOD_AUX.AllowDBNull = false
            Me.columnCOD_AUX.MaxLength = 2
            Me.columnITEM.AllowDBNull = false
            Me.columnITEM.MaxLength = 4
            Me.columnFE_AÑO.AllowDBNull = false
            Me.columnFE_AÑO.MaxLength = 4
            Me.columnFE_MES.AllowDBNull = false
            Me.columnFE_MES.MaxLength = 2
            Me.columnCOD_D_H.MaxLength = 1
            Me.columnCOD_CUENTA.MaxLength = 8
            Me.columnDESC_CUENTA.MaxLength = 60
            Me.columnDEBE_SOLES.ReadOnly = true
            Me.columnHABER_SOLES.ReadOnly = true
            Me.columnDEBE_DOLARES.ReadOnly = true
            Me.columnHABER_DOLARES.ReadOnly = true
            Me.columnCTA_GRAL2.ReadOnly = true
            Me.columnCTA_GRAL2.MaxLength = 2
            Me.columnCTA_GRAL3.ReadOnly = true
            Me.columnCTA_GRAL3.MaxLength = 3
            Me.columnDESC_CUENTA2.ReadOnly = true
            Me.columnDESC_CUENTA2.MaxLength = 60
            Me.columnDESC_CUENTA3.ReadOnly = true
            Me.columnDESC_CUENTA3.MaxLength = 60
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_CTA_RESUMENRow() As REPORTE_CTA_RESUMENRow
            Return CType(Me.NewRow,REPORTE_CTA_RESUMENRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_CTA_RESUMENRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_CTA_RESUMENRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_CTA_RESUMENRowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_RESUMENRowChanged(Me, New REPORTE_CTA_RESUMENRowChangeEvent(CType(e.Row,REPORTE_CTA_RESUMENRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_CTA_RESUMENRowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_RESUMENRowChanging(Me, New REPORTE_CTA_RESUMENRowChangeEvent(CType(e.Row,REPORTE_CTA_RESUMENRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_CTA_RESUMENRowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_RESUMENRowDeleted(Me, New REPORTE_CTA_RESUMENRowChangeEvent(CType(e.Row,REPORTE_CTA_RESUMENRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_CTA_RESUMENRowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_RESUMENRowDeleting(Me, New REPORTE_CTA_RESUMENRowChangeEvent(CType(e.Row,REPORTE_CTA_RESUMENRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_CTA_RESUMENRow(ByVal row As REPORTE_CTA_RESUMENRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_REP_CTA_AUX = New DT_REP_CTA_AUX
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_CTA_RESUMENDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REPORTE_CTA_GRALDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnCOD_AUX As Global.System.Data.DataColumn
        
        Private columnCOD_COMP As Global.System.Data.DataColumn
        
        Private columnNRO_COMP As Global.System.Data.DataColumn
        
        Private columnFE_AÑO As Global.System.Data.DataColumn
        
        Private columnFE_MES As Global.System.Data.DataColumn
        
        Private columnFECHA_COMP As Global.System.Data.DataColumn
        
        Private columnITEM As Global.System.Data.DataColumn
        
        Private columnCOD_DOC As Global.System.Data.DataColumn
        
        Private columnNRO_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_PER As Global.System.Data.DataColumn
        
        Private columnNRO_DOC_PER As Global.System.Data.DataColumn
        
        Private columnFECHA_DOC As Global.System.Data.DataColumn
        
        Private columnCOD_REF As Global.System.Data.DataColumn
        
        Private columnNRO_REF As Global.System.Data.DataColumn
        
        Private columnFECHA_REF As Global.System.Data.DataColumn
        
        Private columnGLOSA As Global.System.Data.DataColumn
        
        Private columnCOD_CUENTA As Global.System.Data.DataColumn
        
        Private columnIMP_S As Global.System.Data.DataColumn
        
        Private columnIMP_D As Global.System.Data.DataColumn
        
        Private columnCOD_D_H As Global.System.Data.DataColumn
        
        Private columnCOD_MONEDA As Global.System.Data.DataColumn
        
        Private columnTIPO_CAMBIO As Global.System.Data.DataColumn
        
        Private columnCOD_CC As Global.System.Data.DataColumn
        
        Private columnDEBE As Global.System.Data.DataColumn
        
        Private columnHABER As Global.System.Data.DataColumn
        
        Private columnDIA As Global.System.Data.DataColumn
        
        Private columnColumn1 As Global.System.Data.DataColumn
        
        Private columnSALDO_INICIAL_DEBE As Global.System.Data.DataColumn
        
        Private columnSALDO_INICIAL_HABER As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REPORTE_CTA_GRAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_AUXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_AUX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_AÑOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_AÑO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FE_MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFE_MES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ITEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnITEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_DOC_PERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_DOC_PER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_DOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_DOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NRO_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRO_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FECHA_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_SColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_S
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IMP_DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMP_D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_D_HColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_D_H
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIPO_CAMBIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO_CAMBIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COD_CCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOD_CC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DEBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HABERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHABER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Column1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumn1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO_INICIAL_DEBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO_INICIAL_DEBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SALDO_INICIAL_HABERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDO_INICIAL_HABER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REPORTE_CTA_GRALRow
            Get
                Return CType(Me.Rows(index),REPORTE_CTA_GRALRow)
            End Get
        End Property
        
        Public Event REPORTE_CTA_GRALRowChanging As REPORTE_CTA_GRALRowChangeEventHandler
        
        Public Event REPORTE_CTA_GRALRowChanged As REPORTE_CTA_GRALRowChangeEventHandler
        
        Public Event REPORTE_CTA_GRALRowDeleting As REPORTE_CTA_GRALRowChangeEventHandler
        
        Public Event REPORTE_CTA_GRALRowDeleted As REPORTE_CTA_GRALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddREPORTE_CTA_GRALRow(ByVal row As REPORTE_CTA_GRALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddREPORTE_CTA_GRALRow( _
                    ByVal COD_AUX As String,  _
                    ByVal COD_COMP As String,  _
                    ByVal NRO_COMP As String,  _
                    ByVal FE_AÑO As String,  _
                    ByVal FE_MES As String,  _
                    ByVal FECHA_COMP As Date,  _
                    ByVal ITEM As String,  _
                    ByVal COD_DOC As String,  _
                    ByVal NRO_DOC As String,  _
                    ByVal COD_PER As String,  _
                    ByVal NRO_DOC_PER As String,  _
                    ByVal FECHA_DOC As Date,  _
                    ByVal COD_REF As String,  _
                    ByVal NRO_REF As String,  _
                    ByVal FECHA_REF As Date,  _
                    ByVal GLOSA As String,  _
                    ByVal COD_CUENTA As String,  _
                    ByVal IMP_S As Decimal,  _
                    ByVal IMP_D As Decimal,  _
                    ByVal COD_D_H As String,  _
                    ByVal COD_MONEDA As String,  _
                    ByVal TIPO_CAMBIO As Decimal,  _
                    ByVal COD_CC As String,  _
                    ByVal DEBE As Decimal,  _
                    ByVal HABER As Decimal,  _
                    ByVal DIA As Integer,  _
                    ByVal Column1 As Decimal,  _
                    ByVal SALDO_INICIAL_DEBE As Decimal,  _
                    ByVal SALDO_INICIAL_HABER As Decimal) As REPORTE_CTA_GRALRow
            Dim rowREPORTE_CTA_GRALRow As REPORTE_CTA_GRALRow = CType(Me.NewRow,REPORTE_CTA_GRALRow)
            Dim columnValuesArray() As Object = New Object() {COD_AUX, COD_COMP, NRO_COMP, FE_AÑO, FE_MES, FECHA_COMP, ITEM, COD_DOC, NRO_DOC, COD_PER, NRO_DOC_PER, FECHA_DOC, COD_REF, NRO_REF, FECHA_REF, GLOSA, COD_CUENTA, IMP_S, IMP_D, COD_D_H, COD_MONEDA, TIPO_CAMBIO, COD_CC, DEBE, HABER, DIA, Column1, SALDO_INICIAL_DEBE, SALDO_INICIAL_HABER}
            rowREPORTE_CTA_GRALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREPORTE_CTA_GRALRow)
            Return rowREPORTE_CTA_GRALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REPORTE_CTA_GRALDataTable = CType(MyBase.Clone,REPORTE_CTA_GRALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REPORTE_CTA_GRALDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCOD_AUX = MyBase.Columns("COD_AUX")
            Me.columnCOD_COMP = MyBase.Columns("COD_COMP")
            Me.columnNRO_COMP = MyBase.Columns("NRO_COMP")
            Me.columnFE_AÑO = MyBase.Columns("FE_AÑO")
            Me.columnFE_MES = MyBase.Columns("FE_MES")
            Me.columnFECHA_COMP = MyBase.Columns("FECHA_COMP")
            Me.columnITEM = MyBase.Columns("ITEM")
            Me.columnCOD_DOC = MyBase.Columns("COD_DOC")
            Me.columnNRO_DOC = MyBase.Columns("NRO_DOC")
            Me.columnCOD_PER = MyBase.Columns("COD_PER")
            Me.columnNRO_DOC_PER = MyBase.Columns("NRO_DOC_PER")
            Me.columnFECHA_DOC = MyBase.Columns("FECHA_DOC")
            Me.columnCOD_REF = MyBase.Columns("COD_REF")
            Me.columnNRO_REF = MyBase.Columns("NRO_REF")
            Me.columnFECHA_REF = MyBase.Columns("FECHA_REF")
            Me.columnGLOSA = MyBase.Columns("GLOSA")
            Me.columnCOD_CUENTA = MyBase.Columns("COD_CUENTA")
            Me.columnIMP_S = MyBase.Columns("IMP_S")
            Me.columnIMP_D = MyBase.Columns("IMP_D")
            Me.columnCOD_D_H = MyBase.Columns("COD_D_H")
            Me.columnCOD_MONEDA = MyBase.Columns("COD_MONEDA")
            Me.columnTIPO_CAMBIO = MyBase.Columns("TIPO_CAMBIO")
            Me.columnCOD_CC = MyBase.Columns("COD_CC")
            Me.columnDEBE = MyBase.Columns("DEBE")
            Me.columnHABER = MyBase.Columns("HABER")
            Me.columnDIA = MyBase.Columns("DIA")
            Me.columnColumn1 = MyBase.Columns("Column1")
            Me.columnSALDO_INICIAL_DEBE = MyBase.Columns("SALDO_INICIAL_DEBE")
            Me.columnSALDO_INICIAL_HABER = MyBase.Columns("SALDO_INICIAL_HABER")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCOD_AUX = New Global.System.Data.DataColumn("COD_AUX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_AUX)
            Me.columnCOD_COMP = New Global.System.Data.DataColumn("COD_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_COMP)
            Me.columnNRO_COMP = New Global.System.Data.DataColumn("NRO_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_COMP)
            Me.columnFE_AÑO = New Global.System.Data.DataColumn("FE_AÑO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_AÑO)
            Me.columnFE_MES = New Global.System.Data.DataColumn("FE_MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFE_MES)
            Me.columnFECHA_COMP = New Global.System.Data.DataColumn("FECHA_COMP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_COMP)
            Me.columnITEM = New Global.System.Data.DataColumn("ITEM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnITEM)
            Me.columnCOD_DOC = New Global.System.Data.DataColumn("COD_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_DOC)
            Me.columnNRO_DOC = New Global.System.Data.DataColumn("NRO_DOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC)
            Me.columnCOD_PER = New Global.System.Data.DataColumn("COD_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_PER)
            Me.columnNRO_DOC_PER = New Global.System.Data.DataColumn("NRO_DOC_PER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_DOC_PER)
            Me.columnFECHA_DOC = New Global.System.Data.DataColumn("FECHA_DOC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_DOC)
            Me.columnCOD_REF = New Global.System.Data.DataColumn("COD_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_REF)
            Me.columnNRO_REF = New Global.System.Data.DataColumn("NRO_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRO_REF)
            Me.columnFECHA_REF = New Global.System.Data.DataColumn("FECHA_REF", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA_REF)
            Me.columnGLOSA = New Global.System.Data.DataColumn("GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLOSA)
            Me.columnCOD_CUENTA = New Global.System.Data.DataColumn("COD_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CUENTA)
            Me.columnIMP_S = New Global.System.Data.DataColumn("IMP_S", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_S)
            Me.columnIMP_D = New Global.System.Data.DataColumn("IMP_D", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMP_D)
            Me.columnCOD_D_H = New Global.System.Data.DataColumn("COD_D_H", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_D_H)
            Me.columnCOD_MONEDA = New Global.System.Data.DataColumn("COD_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_MONEDA)
            Me.columnTIPO_CAMBIO = New Global.System.Data.DataColumn("TIPO_CAMBIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO_CAMBIO)
            Me.columnCOD_CC = New Global.System.Data.DataColumn("COD_CC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOD_CC)
            Me.columnDEBE = New Global.System.Data.DataColumn("DEBE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEBE)
            Me.columnHABER = New Global.System.Data.DataColumn("HABER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHABER)
            Me.columnDIA = New Global.System.Data.DataColumn("DIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIA)
            Me.columnColumn1 = New Global.System.Data.DataColumn("Column1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumn1)
            Me.columnSALDO_INICIAL_DEBE = New Global.System.Data.DataColumn("SALDO_INICIAL_DEBE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO_INICIAL_DEBE)
            Me.columnSALDO_INICIAL_HABER = New Global.System.Data.DataColumn("SALDO_INICIAL_HABER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDO_INICIAL_HABER)
            Me.columnCOD_AUX.AllowDBNull = false
            Me.columnCOD_AUX.MaxLength = 2
            Me.columnCOD_COMP.AllowDBNull = false
            Me.columnCOD_COMP.MaxLength = 3
            Me.columnNRO_COMP.AllowDBNull = false
            Me.columnNRO_COMP.MaxLength = 4
            Me.columnFE_AÑO.AllowDBNull = false
            Me.columnFE_AÑO.MaxLength = 4
            Me.columnFE_MES.AllowDBNull = false
            Me.columnFE_MES.MaxLength = 2
            Me.columnITEM.AllowDBNull = false
            Me.columnITEM.MaxLength = 4
            Me.columnCOD_DOC.MaxLength = 2
            Me.columnNRO_DOC.MaxLength = 20
            Me.columnCOD_PER.MaxLength = 5
            Me.columnNRO_DOC_PER.MaxLength = 20
            Me.columnCOD_REF.MaxLength = 2
            Me.columnNRO_REF.MaxLength = 20
            Me.columnGLOSA.MaxLength = 60
            Me.columnCOD_CUENTA.MaxLength = 8
            Me.columnCOD_D_H.MaxLength = 1
            Me.columnCOD_MONEDA.MaxLength = 1
            Me.columnCOD_CC.MaxLength = 5
            Me.columnDEBE.ReadOnly = true
            Me.columnHABER.ReadOnly = true
            Me.columnDIA.ReadOnly = true
            Me.columnColumn1.ReadOnly = true
            Me.columnSALDO_INICIAL_DEBE.ReadOnly = true
            Me.columnSALDO_INICIAL_HABER.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewREPORTE_CTA_GRALRow() As REPORTE_CTA_GRALRow
            Return CType(Me.NewRow,REPORTE_CTA_GRALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REPORTE_CTA_GRALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REPORTE_CTA_GRALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REPORTE_CTA_GRALRowChangedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_GRALRowChanged(Me, New REPORTE_CTA_GRALRowChangeEvent(CType(e.Row,REPORTE_CTA_GRALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REPORTE_CTA_GRALRowChangingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_GRALRowChanging(Me, New REPORTE_CTA_GRALRowChangeEvent(CType(e.Row,REPORTE_CTA_GRALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REPORTE_CTA_GRALRowDeletedEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_GRALRowDeleted(Me, New REPORTE_CTA_GRALRowChangeEvent(CType(e.Row,REPORTE_CTA_GRALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REPORTE_CTA_GRALRowDeletingEvent) Is Nothing) Then
                RaiseEvent REPORTE_CTA_GRALRowDeleting(Me, New REPORTE_CTA_GRALRowChangeEvent(CType(e.Row,REPORTE_CTA_GRALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveREPORTE_CTA_GRALRow(ByVal row As REPORTE_CTA_GRALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DT_REP_CTA_AUX = New DT_REP_CTA_AUX
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REPORTE_CTA_GRALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_CTA_AUXRow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_CTA_AUX As REPORTE_CTA_AUXDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_CTA_AUX = CType(Me.Table,REPORTE_CTA_AUXDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_AUX() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_AUX.COD_AUXColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.COD_AUXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_COMP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_AUX.COD_COMPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.COD_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_COMP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_AUX.NRO_COMPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.NRO_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_AÑO() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_AUX.FE_AÑOColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.FE_AÑOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_MES() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_AUX.FE_MESColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.FE_MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_COMP() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.FECHA_COMPColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_COMP' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.FECHA_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ITEM() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_AUX.ITEMColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.COD_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_DOC' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.COD_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.NRO_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.NRO_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.COD_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_PER' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.COD_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.NRO_DOC_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC_PER' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.NRO_DOC_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_DOC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.FECHA_DOCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_DOC' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.FECHA_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.COD_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_REF' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.COD_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.NRO_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_REF' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.NRO_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REF() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.FECHA_REFColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_REF' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.FECHA_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GLOSA' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_S() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.IMP_SColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_S' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.IMP_SColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_D() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.IMP_DColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_D' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.IMP_DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_D_H() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.COD_D_HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_D_H' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.COD_D_HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.COD_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_MONEDA' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.COD_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.TIPO_CAMBIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CAMBIO' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.COD_CCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CC' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.COD_CCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.DEBEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEBE' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.DEBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.HABERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'HABER' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.HABERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_AUX.DIAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIA' de la tabla 'REPORTE_CTA_AUX' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_AUX.DIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_COMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.FECHA_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_COMPNull()
            Me(Me.tableREPORTE_CTA_AUX.FECHA_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.COD_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_DOCNull()
            Me(Me.tableREPORTE_CTA_AUX.COD_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.NRO_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOCNull()
            Me(Me.tableREPORTE_CTA_AUX.NRO_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.COD_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_PERNull()
            Me(Me.tableREPORTE_CTA_AUX.COD_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOC_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.NRO_DOC_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOC_PERNull()
            Me(Me.tableREPORTE_CTA_AUX.NRO_DOC_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.FECHA_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_DOCNull()
            Me(Me.tableREPORTE_CTA_AUX.FECHA_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.COD_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_REFNull()
            Me(Me.tableREPORTE_CTA_AUX.COD_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.NRO_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_REFNull()
            Me(Me.tableREPORTE_CTA_AUX.NRO_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.FECHA_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_REFNull()
            Me(Me.tableREPORTE_CTA_AUX.FECHA_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGLOSANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGLOSANull()
            Me(Me.tableREPORTE_CTA_AUX.GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_CTA_AUX.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_SNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.IMP_SColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_SNull()
            Me(Me.tableREPORTE_CTA_AUX.IMP_SColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_DNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.IMP_DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_DNull()
            Me(Me.tableREPORTE_CTA_AUX.IMP_DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_D_HNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.COD_D_HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_D_HNull()
            Me(Me.tableREPORTE_CTA_AUX.COD_D_HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_MONEDANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.COD_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_MONEDANull()
            Me(Me.tableREPORTE_CTA_AUX.COD_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTIPO_CAMBIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.TIPO_CAMBIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTIPO_CAMBIONull()
            Me(Me.tableREPORTE_CTA_AUX.TIPO_CAMBIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.COD_CCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CCNull()
            Me(Me.tableREPORTE_CTA_AUX.COD_CCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEBENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.DEBEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEBENull()
            Me(Me.tableREPORTE_CTA_AUX.DEBEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHABERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.HABERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHABERNull()
            Me(Me.tableREPORTE_CTA_AUX.HABERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_AUX.DIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIANull()
            Me(Me.tableREPORTE_CTA_AUX.DIAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_CTA_COMPRow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_CTA_COMP As REPORTE_CTA_COMPDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_CTA_COMP = CType(Me.Table,REPORTE_CTA_COMPDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_AUX() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_COMP.COD_AUXColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.COD_AUXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_COMP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_COMP.COD_COMPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.COD_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_COMP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_COMP.NRO_COMPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.NRO_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_AÑO() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_COMP.FE_AÑOColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.FE_AÑOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_MES() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_COMP.FE_MESColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.FE_MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_COMP() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.FECHA_COMPColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_COMP' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.FECHA_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ITEM() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_COMP.ITEMColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.COD_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_DOC' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.COD_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.NRO_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.NRO_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.COD_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_PER' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.COD_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.NRO_DOC_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC_PER' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.NRO_DOC_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_DOC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.FECHA_DOCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_DOC' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.FECHA_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.COD_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_REF' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.COD_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.NRO_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_REF' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.NRO_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REF() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.FECHA_REFColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_REF' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.FECHA_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GLOSA' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_S() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.IMP_SColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_S' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.IMP_SColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_D() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.IMP_DColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_D' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.IMP_DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_D_H() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.COD_D_HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_D_H' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.COD_D_HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.COD_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_MONEDA' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.COD_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.TIPO_CAMBIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CAMBIO' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.COD_CCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CC' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.COD_CCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.DEBEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEBE' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.DEBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.HABERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'HABER' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.HABERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_COMP.DIAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIA' de la tabla 'REPORTE_CTA_COMP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_COMP.DIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_COMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.FECHA_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_COMPNull()
            Me(Me.tableREPORTE_CTA_COMP.FECHA_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.COD_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_DOCNull()
            Me(Me.tableREPORTE_CTA_COMP.COD_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.NRO_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOCNull()
            Me(Me.tableREPORTE_CTA_COMP.NRO_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.COD_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_PERNull()
            Me(Me.tableREPORTE_CTA_COMP.COD_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOC_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.NRO_DOC_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOC_PERNull()
            Me(Me.tableREPORTE_CTA_COMP.NRO_DOC_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.FECHA_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_DOCNull()
            Me(Me.tableREPORTE_CTA_COMP.FECHA_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.COD_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_REFNull()
            Me(Me.tableREPORTE_CTA_COMP.COD_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.NRO_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_REFNull()
            Me(Me.tableREPORTE_CTA_COMP.NRO_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.FECHA_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_REFNull()
            Me(Me.tableREPORTE_CTA_COMP.FECHA_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGLOSANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGLOSANull()
            Me(Me.tableREPORTE_CTA_COMP.GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_CTA_COMP.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_SNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.IMP_SColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_SNull()
            Me(Me.tableREPORTE_CTA_COMP.IMP_SColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_DNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.IMP_DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_DNull()
            Me(Me.tableREPORTE_CTA_COMP.IMP_DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_D_HNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.COD_D_HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_D_HNull()
            Me(Me.tableREPORTE_CTA_COMP.COD_D_HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_MONEDANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.COD_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_MONEDANull()
            Me(Me.tableREPORTE_CTA_COMP.COD_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTIPO_CAMBIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.TIPO_CAMBIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTIPO_CAMBIONull()
            Me(Me.tableREPORTE_CTA_COMP.TIPO_CAMBIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.COD_CCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CCNull()
            Me(Me.tableREPORTE_CTA_COMP.COD_CCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEBENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.DEBEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEBENull()
            Me(Me.tableREPORTE_CTA_COMP.DEBEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHABERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.HABERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHABERNull()
            Me(Me.tableREPORTE_CTA_COMP.HABERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_COMP.DIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIANull()
            Me(Me.tableREPORTE_CTA_COMP.DIAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_CTA_CTA_CTERow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_CTA_CTA_CTE As REPORTE_CTA_CTA_CTEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_CTA_CTA_CTE = CType(Me.Table,REPORTE_CTA_CTA_CTEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_AÑO() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.FE_AÑOColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.FE_AÑOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_MES() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.FE_MESColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.FE_MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_AUX() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.COD_AUXColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.COD_AUXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_COMP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.COD_COMPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.COD_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_COMP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.NRO_COMPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.NRO_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.COD_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_DOC' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.COD_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.NRO_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.NRO_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.COD_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_PER' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.COD_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ITEM() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.ITEMColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_DOC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.FECHA_DOCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_DOC' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.FECHA_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.NRO_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_REF' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.NRO_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GLOSA' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_S() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_SColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_S' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_SColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_D() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_DColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_D' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_D_H() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.COD_D_HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_D_H' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.COD_D_HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.COD_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_MONEDA' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.COD_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.TIPO_CAMBIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CAMBIO' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.COD_CCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CC' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.COD_CCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_COMP() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.FECHA_COMPColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_COMP' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.FECHA_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_S_DEBE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_S_DEBEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_S_DEBE' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_S_DEBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_S_HABER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_S_HABERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_S_HABER' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_S_HABERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.DESC_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_PER' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.DESC_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_D_DEBE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_D_DEBEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_D_DEBE' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_D_DEBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_D_HABER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_D_HABERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_D_HABER' de la tabla 'REPORTE_CTA_CTA_CTE' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_D_HABERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.COD_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_DOCNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.COD_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.NRO_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOCNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.NRO_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.COD_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_PERNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.COD_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.FECHA_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_DOCNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.FECHA_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.NRO_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_REFNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.NRO_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGLOSANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGLOSANull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_SNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.IMP_SColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_SNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_SColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_DNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.IMP_DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_DNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_D_HNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.COD_D_HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_D_HNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.COD_D_HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_MONEDANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.COD_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_MONEDANull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.COD_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTIPO_CAMBIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.TIPO_CAMBIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTIPO_CAMBIONull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.TIPO_CAMBIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.COD_CCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CCNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.COD_CCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_COMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.FECHA_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_COMPNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.FECHA_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_S_DEBENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.IMP_S_DEBEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_S_DEBENull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_S_DEBEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_S_HABERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.IMP_S_HABERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_S_HABERNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_S_HABERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.DESC_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_PERNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.DESC_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_D_DEBENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.IMP_D_DEBEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_D_DEBENull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_D_DEBEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_D_HABERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_CTA_CTE.IMP_D_HABERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_D_HABERNull()
            Me(Me.tableREPORTE_CTA_CTA_CTE.IMP_D_HABERColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_CTA_MASKRow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_CTA_MASK As REPORTE_CTA_MASKDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_CTA_MASK = CType(Me.Table,REPORTE_CTA_MASKDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_AÑO() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_MASK.FE_AÑOColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.FE_AÑOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_MES() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_MASK.FE_MESColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.FE_MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_AUX() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_MASK.COD_AUXColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.COD_AUXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_COMP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_MASK.COD_COMPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.COD_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_COMP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_MASK.NRO_COMPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.NRO_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.COD_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_DOC' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.COD_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.NRO_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.NRO_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.COD_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_PER' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.COD_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ITEM() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_MASK.ITEMColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_DOC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.FECHA_DOCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_DOC' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.FECHA_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.NRO_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_REF' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.NRO_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GLOSA' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_S() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.IMP_SColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_S' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.IMP_SColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_D() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.IMP_DColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_D' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.IMP_DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_D_H() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.COD_D_HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_D_H' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.COD_D_HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.COD_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_MONEDA' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.COD_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.TIPO_CAMBIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CAMBIO' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.COD_CCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CC' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.COD_CCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_COMP() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.FECHA_COMPColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_COMP' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.FECHA_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_S_DEBE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.IMP_S_DEBEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_S_DEBE' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.IMP_S_DEBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_S_HABER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.IMP_S_HABERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_S_HABER' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.IMP_S_HABERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.DIAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIA' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.DIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.DESC_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CUENTA' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.DESC_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_MASK.COD_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_REF' de la tabla 'REPORTE_CTA_MASK' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_MASK.COD_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.COD_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_DOCNull()
            Me(Me.tableREPORTE_CTA_MASK.COD_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.NRO_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOCNull()
            Me(Me.tableREPORTE_CTA_MASK.NRO_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.COD_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_PERNull()
            Me(Me.tableREPORTE_CTA_MASK.COD_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.FECHA_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_DOCNull()
            Me(Me.tableREPORTE_CTA_MASK.FECHA_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.NRO_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_REFNull()
            Me(Me.tableREPORTE_CTA_MASK.NRO_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGLOSANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGLOSANull()
            Me(Me.tableREPORTE_CTA_MASK.GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_CTA_MASK.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_SNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.IMP_SColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_SNull()
            Me(Me.tableREPORTE_CTA_MASK.IMP_SColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_DNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.IMP_DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_DNull()
            Me(Me.tableREPORTE_CTA_MASK.IMP_DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_D_HNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.COD_D_HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_D_HNull()
            Me(Me.tableREPORTE_CTA_MASK.COD_D_HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_MONEDANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.COD_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_MONEDANull()
            Me(Me.tableREPORTE_CTA_MASK.COD_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTIPO_CAMBIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.TIPO_CAMBIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTIPO_CAMBIONull()
            Me(Me.tableREPORTE_CTA_MASK.TIPO_CAMBIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.COD_CCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CCNull()
            Me(Me.tableREPORTE_CTA_MASK.COD_CCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_COMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.FECHA_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_COMPNull()
            Me(Me.tableREPORTE_CTA_MASK.FECHA_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_S_DEBENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.IMP_S_DEBEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_S_DEBENull()
            Me(Me.tableREPORTE_CTA_MASK.IMP_S_DEBEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_S_HABERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.IMP_S_HABERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_S_HABERNull()
            Me(Me.tableREPORTE_CTA_MASK.IMP_S_HABERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.DIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIANull()
            Me(Me.tableREPORTE_CTA_MASK.DIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.DESC_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CUENTANull()
            Me(Me.tableREPORTE_CTA_MASK.DESC_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_MASK.COD_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_REFNull()
            Me(Me.tableREPORTE_CTA_MASK.COD_REFColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_CTA_RESUMENRow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_CTA_RESUMEN As REPORTE_CTA_RESUMENDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_CTA_RESUMEN = CType(Me.Table,REPORTE_CTA_RESUMENDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_AUX() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.COD_AUXColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.COD_AUXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ITEM() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.ITEMColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_AÑO() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.FE_AÑOColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.FE_AÑOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_MES() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.FE_MESColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.FE_MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_D() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.IMP_DColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_D' de la tabla 'REPORTE_CTA_RESUMEN' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.IMP_DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_D_H() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.COD_D_HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_D_H' de la tabla 'REPORTE_CTA_RESUMEN' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.COD_D_HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_S() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.IMP_SColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_S' de la tabla 'REPORTE_CTA_RESUMEN' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.IMP_SColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_CTA_RESUMEN' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.DESC_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CUENTA' de la tabla 'REPORTE_CTA_RESUMEN' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.DESC_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE_SOLES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.DEBE_SOLESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEBE_SOLES' de la tabla 'REPORTE_CTA_RESUMEN' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.DEBE_SOLESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER_SOLES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.HABER_SOLESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'HABER_SOLES' de la tabla 'REPORTE_CTA_RESUMEN' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.HABER_SOLESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE_DOLARES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.DEBE_DOLARESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEBE_DOLARES' de la tabla 'REPORTE_CTA_RESUMEN' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.DEBE_DOLARESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER_DOLARES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.HABER_DOLARESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'HABER_DOLARES' de la tabla 'REPORTE_CTA_RESUMEN' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.HABER_DOLARESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CTA_GRAL2() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.CTA_GRAL2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTA_GRAL2' de la tabla 'REPORTE_CTA_RESUMEN' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.CTA_GRAL2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CTA_GRAL3() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.CTA_GRAL3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTA_GRAL3' de la tabla 'REPORTE_CTA_RESUMEN' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.CTA_GRAL3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CUENTA2() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.DESC_CUENTA2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CUENTA2' de la tabla 'REPORTE_CTA_RESUMEN' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.DESC_CUENTA2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DESC_CUENTA3() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_RESUMEN.DESC_CUENTA3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DESC_CUENTA3' de la tabla 'REPORTE_CTA_RESUMEN' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_RESUMEN.DESC_CUENTA3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_DNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.IMP_DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_DNull()
            Me(Me.tableREPORTE_CTA_RESUMEN.IMP_DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_D_HNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.COD_D_HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_D_HNull()
            Me(Me.tableREPORTE_CTA_RESUMEN.COD_D_HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_SNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.IMP_SColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_SNull()
            Me(Me.tableREPORTE_CTA_RESUMEN.IMP_SColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_CTA_RESUMEN.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.DESC_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CUENTANull()
            Me(Me.tableREPORTE_CTA_RESUMEN.DESC_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEBE_SOLESNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.DEBE_SOLESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEBE_SOLESNull()
            Me(Me.tableREPORTE_CTA_RESUMEN.DEBE_SOLESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHABER_SOLESNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.HABER_SOLESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHABER_SOLESNull()
            Me(Me.tableREPORTE_CTA_RESUMEN.HABER_SOLESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEBE_DOLARESNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.DEBE_DOLARESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEBE_DOLARESNull()
            Me(Me.tableREPORTE_CTA_RESUMEN.DEBE_DOLARESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHABER_DOLARESNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.HABER_DOLARESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHABER_DOLARESNull()
            Me(Me.tableREPORTE_CTA_RESUMEN.HABER_DOLARESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCTA_GRAL2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.CTA_GRAL2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCTA_GRAL2Null()
            Me(Me.tableREPORTE_CTA_RESUMEN.CTA_GRAL2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCTA_GRAL3Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.CTA_GRAL3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCTA_GRAL3Null()
            Me(Me.tableREPORTE_CTA_RESUMEN.CTA_GRAL3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CUENTA2Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.DESC_CUENTA2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CUENTA2Null()
            Me(Me.tableREPORTE_CTA_RESUMEN.DESC_CUENTA2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDESC_CUENTA3Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_RESUMEN.DESC_CUENTA3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDESC_CUENTA3Null()
            Me(Me.tableREPORTE_CTA_RESUMEN.DESC_CUENTA3Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class REPORTE_CTA_GRALRow
        Inherits Global.System.Data.DataRow
        
        Private tableREPORTE_CTA_GRAL As REPORTE_CTA_GRALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREPORTE_CTA_GRAL = CType(Me.Table,REPORTE_CTA_GRALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_AUX() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_GRAL.COD_AUXColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.COD_AUXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_COMP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_GRAL.COD_COMPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.COD_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_COMP() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_GRAL.NRO_COMPColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.NRO_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_AÑO() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_GRAL.FE_AÑOColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.FE_AÑOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FE_MES() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_GRAL.FE_MESColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.FE_MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_COMP() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.FECHA_COMPColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_COMP' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.FECHA_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ITEM() As String
            Get
                Return CType(Me(Me.tableREPORTE_CTA_GRAL.ITEMColumn),String)
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.ITEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.COD_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_DOC' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.COD_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.NRO_DOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.NRO_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.COD_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_PER' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.COD_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_DOC_PER() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.NRO_DOC_PERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_DOC_PER' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.NRO_DOC_PERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_DOC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.FECHA_DOCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_DOC' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.FECHA_DOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.COD_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_REF' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.COD_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NRO_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.NRO_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NRO_REF' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.NRO_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FECHA_REF() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.FECHA_REFColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHA_REF' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.FECHA_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GLOSA' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.COD_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CUENTA' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.COD_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_S() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.IMP_SColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_S' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.IMP_SColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IMP_D() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.IMP_DColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMP_D' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.IMP_DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_D_H() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.COD_D_HColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_D_H' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.COD_D_HColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.COD_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_MONEDA' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.COD_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIPO_CAMBIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.TIPO_CAMBIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO_CAMBIO' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.TIPO_CAMBIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COD_CC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.COD_CCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COD_CC' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.COD_CCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DEBE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.DEBEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DEBE' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.DEBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HABER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.HABERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'HABER' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.HABERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.DIAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DIA' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.DIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Column1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.Column1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Column1' de la tabla 'REPORTE_CTA_GRAL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.Column1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO_INICIAL_DEBE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.SALDO_INICIAL_DEBEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO_INICIAL_DEBE' de la tabla 'REPORTE_CTA_GRAL' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.SALDO_INICIAL_DEBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SALDO_INICIAL_HABER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREPORTE_CTA_GRAL.SALDO_INICIAL_HABERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SALDO_INICIAL_HABER' de la tabla 'REPORTE_CTA_GRAL' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREPORTE_CTA_GRAL.SALDO_INICIAL_HABERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_COMPNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.FECHA_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_COMPNull()
            Me(Me.tableREPORTE_CTA_GRAL.FECHA_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.COD_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_DOCNull()
            Me(Me.tableREPORTE_CTA_GRAL.COD_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.NRO_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOCNull()
            Me(Me.tableREPORTE_CTA_GRAL.NRO_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.COD_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_PERNull()
            Me(Me.tableREPORTE_CTA_GRAL.COD_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_DOC_PERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.NRO_DOC_PERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_DOC_PERNull()
            Me(Me.tableREPORTE_CTA_GRAL.NRO_DOC_PERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_DOCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.FECHA_DOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_DOCNull()
            Me(Me.tableREPORTE_CTA_GRAL.FECHA_DOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.COD_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_REFNull()
            Me(Me.tableREPORTE_CTA_GRAL.COD_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNRO_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.NRO_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNRO_REFNull()
            Me(Me.tableREPORTE_CTA_GRAL.NRO_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFECHA_REFNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.FECHA_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFECHA_REFNull()
            Me(Me.tableREPORTE_CTA_GRAL.FECHA_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGLOSANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGLOSANull()
            Me(Me.tableREPORTE_CTA_GRAL.GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.COD_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CUENTANull()
            Me(Me.tableREPORTE_CTA_GRAL.COD_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_SNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.IMP_SColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_SNull()
            Me(Me.tableREPORTE_CTA_GRAL.IMP_SColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIMP_DNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.IMP_DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIMP_DNull()
            Me(Me.tableREPORTE_CTA_GRAL.IMP_DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_D_HNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.COD_D_HColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_D_HNull()
            Me(Me.tableREPORTE_CTA_GRAL.COD_D_HColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_MONEDANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.COD_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_MONEDANull()
            Me(Me.tableREPORTE_CTA_GRAL.COD_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTIPO_CAMBIONull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.TIPO_CAMBIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTIPO_CAMBIONull()
            Me(Me.tableREPORTE_CTA_GRAL.TIPO_CAMBIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOD_CCNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.COD_CCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOD_CCNull()
            Me(Me.tableREPORTE_CTA_GRAL.COD_CCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDEBENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.DEBEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDEBENull()
            Me(Me.tableREPORTE_CTA_GRAL.DEBEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHABERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.HABERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHABERNull()
            Me(Me.tableREPORTE_CTA_GRAL.HABERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIANull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.DIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIANull()
            Me(Me.tableREPORTE_CTA_GRAL.DIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsColumn1Null() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.Column1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetColumn1Null()
            Me(Me.tableREPORTE_CTA_GRAL.Column1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO_INICIAL_DEBENull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.SALDO_INICIAL_DEBEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO_INICIAL_DEBENull()
            Me(Me.tableREPORTE_CTA_GRAL.SALDO_INICIAL_DEBEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSALDO_INICIAL_HABERNull() As Boolean
            Return Me.IsNull(Me.tableREPORTE_CTA_GRAL.SALDO_INICIAL_HABERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSALDO_INICIAL_HABERNull()
            Me(Me.tableREPORTE_CTA_GRAL.SALDO_INICIAL_HABERColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_CTA_AUXRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_CTA_AUXRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_CTA_AUXRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_CTA_AUXRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_CTA_COMPRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_CTA_COMPRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_CTA_COMPRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_CTA_COMPRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_CTA_CTA_CTERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_CTA_CTA_CTERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_CTA_CTA_CTERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_CTA_CTA_CTERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_CTA_MASKRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_CTA_MASKRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_CTA_MASKRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_CTA_MASKRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_CTA_RESUMENRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_CTA_RESUMENRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_CTA_RESUMENRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_CTA_RESUMENRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class REPORTE_CTA_GRALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REPORTE_CTA_GRALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As REPORTE_CTA_GRALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As REPORTE_CTA_GRALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DT_REP_CTA_AUXTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REPORTE_CTA_AUXTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REPORTE_CTA_AUX"
            tableMapping.ColumnMappings.Add("COD_AUX", "COD_AUX")
            tableMapping.ColumnMappings.Add("COD_COMP", "COD_COMP")
            tableMapping.ColumnMappings.Add("NRO_COMP", "NRO_COMP")
            tableMapping.ColumnMappings.Add("FE_AÑO", "FE_AÑO")
            tableMapping.ColumnMappings.Add("FE_MES", "FE_MES")
            tableMapping.ColumnMappings.Add("FECHA_COMP", "FECHA_COMP")
            tableMapping.ColumnMappings.Add("ITEM", "ITEM")
            tableMapping.ColumnMappings.Add("COD_DOC", "COD_DOC")
            tableMapping.ColumnMappings.Add("NRO_DOC", "NRO_DOC")
            tableMapping.ColumnMappings.Add("COD_PER", "COD_PER")
            tableMapping.ColumnMappings.Add("NRO_DOC_PER", "NRO_DOC_PER")
            tableMapping.ColumnMappings.Add("FECHA_DOC", "FECHA_DOC")
            tableMapping.ColumnMappings.Add("COD_REF", "COD_REF")
            tableMapping.ColumnMappings.Add("NRO_REF", "NRO_REF")
            tableMapping.ColumnMappings.Add("FECHA_REF", "FECHA_REF")
            tableMapping.ColumnMappings.Add("GLOSA", "GLOSA")
            tableMapping.ColumnMappings.Add("COD_CUENTA", "COD_CUENTA")
            tableMapping.ColumnMappings.Add("IMP_S", "IMP_S")
            tableMapping.ColumnMappings.Add("IMP_D", "IMP_D")
            tableMapping.ColumnMappings.Add("COD_D_H", "COD_D_H")
            tableMapping.ColumnMappings.Add("COD_MONEDA", "COD_MONEDA")
            tableMapping.ColumnMappings.Add("TIPO_CAMBIO", "TIPO_CAMBIO")
            tableMapping.ColumnMappings.Add("COD_CC", "COD_CC")
            tableMapping.ColumnMappings.Add("DEBE", "DEBE")
            tableMapping.ColumnMappings.Add("HABER", "HABER")
            tableMapping.ColumnMappings.Add("DIA", "DIA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CONTABILIDAD.My.MySettings.Default.BD_COI02
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.REPORTE_CTA_AUX"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_AUX", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_AÑO", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MES1", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MES2", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_CUENTA", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_REP_CTA_AUX.REPORTE_CTA_AUXDataTable, ByVal COD_AUX As String, ByVal FE_AÑO As String, ByVal MES1 As String, ByVal MES2 As String, ByVal COD_CUENTA As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (COD_AUX Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(COD_AUX,String)
            End If
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FE_AÑO,String)
            End If
            If (MES1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(MES1,String)
            End If
            If (MES2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(MES2,String)
            End If
            If (COD_CUENTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(COD_CUENTA,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal COD_AUX As String, ByVal FE_AÑO As String, ByVal MES1 As String, ByVal MES2 As String, ByVal COD_CUENTA As String) As DT_REP_CTA_AUX.REPORTE_CTA_AUXDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (COD_AUX Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(COD_AUX,String)
            End If
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FE_AÑO,String)
            End If
            If (MES1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(MES1,String)
            End If
            If (MES2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(MES2,String)
            End If
            If (COD_CUENTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(COD_CUENTA,String)
            End If
            Dim dataTable As DT_REP_CTA_AUX.REPORTE_CTA_AUXDataTable = New DT_REP_CTA_AUX.REPORTE_CTA_AUXDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REPORTE_CTA_COMPTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REPORTE_CTA_COMP"
            tableMapping.ColumnMappings.Add("COD_AUX", "COD_AUX")
            tableMapping.ColumnMappings.Add("COD_COMP", "COD_COMP")
            tableMapping.ColumnMappings.Add("NRO_COMP", "NRO_COMP")
            tableMapping.ColumnMappings.Add("FE_AÑO", "FE_AÑO")
            tableMapping.ColumnMappings.Add("FE_MES", "FE_MES")
            tableMapping.ColumnMappings.Add("FECHA_COMP", "FECHA_COMP")
            tableMapping.ColumnMappings.Add("ITEM", "ITEM")
            tableMapping.ColumnMappings.Add("COD_DOC", "COD_DOC")
            tableMapping.ColumnMappings.Add("NRO_DOC", "NRO_DOC")
            tableMapping.ColumnMappings.Add("COD_PER", "COD_PER")
            tableMapping.ColumnMappings.Add("NRO_DOC_PER", "NRO_DOC_PER")
            tableMapping.ColumnMappings.Add("FECHA_DOC", "FECHA_DOC")
            tableMapping.ColumnMappings.Add("COD_REF", "COD_REF")
            tableMapping.ColumnMappings.Add("NRO_REF", "NRO_REF")
            tableMapping.ColumnMappings.Add("FECHA_REF", "FECHA_REF")
            tableMapping.ColumnMappings.Add("GLOSA", "GLOSA")
            tableMapping.ColumnMappings.Add("COD_CUENTA", "COD_CUENTA")
            tableMapping.ColumnMappings.Add("IMP_S", "IMP_S")
            tableMapping.ColumnMappings.Add("IMP_D", "IMP_D")
            tableMapping.ColumnMappings.Add("COD_D_H", "COD_D_H")
            tableMapping.ColumnMappings.Add("COD_MONEDA", "COD_MONEDA")
            tableMapping.ColumnMappings.Add("TIPO_CAMBIO", "TIPO_CAMBIO")
            tableMapping.ColumnMappings.Add("COD_CC", "COD_CC")
            tableMapping.ColumnMappings.Add("DEBE", "DEBE")
            tableMapping.ColumnMappings.Add("HABER", "HABER")
            tableMapping.ColumnMappings.Add("DIA", "DIA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CONTABILIDAD.My.MySettings.Default.BD_COI02
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.REPORTE_CTA_COMP"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_AUX", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_COMP", Global.System.Data.SqlDbType.[Char], 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_AÑO", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MES1", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MES2", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_CUENTA", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_REP_CTA_AUX.REPORTE_CTA_COMPDataTable, ByVal COD_AUX As String, ByVal COD_COMP As String, ByVal FE_AÑO As String, ByVal MES1 As String, ByVal MES2 As String, ByVal COD_CUENTA As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (COD_AUX Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(COD_AUX,String)
            End If
            If (COD_COMP Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(COD_COMP,String)
            End If
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FE_AÑO,String)
            End If
            If (MES1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(MES1,String)
            End If
            If (MES2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(MES2,String)
            End If
            If (COD_CUENTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(COD_CUENTA,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal COD_AUX As String, ByVal COD_COMP As String, ByVal FE_AÑO As String, ByVal MES1 As String, ByVal MES2 As String, ByVal COD_CUENTA As String) As DT_REP_CTA_AUX.REPORTE_CTA_COMPDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (COD_AUX Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(COD_AUX,String)
            End If
            If (COD_COMP Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(COD_COMP,String)
            End If
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FE_AÑO,String)
            End If
            If (MES1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(MES1,String)
            End If
            If (MES2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(MES2,String)
            End If
            If (COD_CUENTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(COD_CUENTA,String)
            End If
            Dim dataTable As DT_REP_CTA_AUX.REPORTE_CTA_COMPDataTable = New DT_REP_CTA_AUX.REPORTE_CTA_COMPDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REPORTE_CTA_CTA_CTETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REPORTE_CTA_CTA_CTE"
            tableMapping.ColumnMappings.Add("FE_AÑO", "FE_AÑO")
            tableMapping.ColumnMappings.Add("FE_MES", "FE_MES")
            tableMapping.ColumnMappings.Add("COD_AUX", "COD_AUX")
            tableMapping.ColumnMappings.Add("COD_COMP", "COD_COMP")
            tableMapping.ColumnMappings.Add("NRO_COMP", "NRO_COMP")
            tableMapping.ColumnMappings.Add("COD_DOC", "COD_DOC")
            tableMapping.ColumnMappings.Add("NRO_DOC", "NRO_DOC")
            tableMapping.ColumnMappings.Add("COD_PER", "COD_PER")
            tableMapping.ColumnMappings.Add("ITEM", "ITEM")
            tableMapping.ColumnMappings.Add("FECHA_DOC", "FECHA_DOC")
            tableMapping.ColumnMappings.Add("NRO_REF", "NRO_REF")
            tableMapping.ColumnMappings.Add("GLOSA", "GLOSA")
            tableMapping.ColumnMappings.Add("COD_CUENTA", "COD_CUENTA")
            tableMapping.ColumnMappings.Add("IMP_S", "IMP_S")
            tableMapping.ColumnMappings.Add("IMP_D", "IMP_D")
            tableMapping.ColumnMappings.Add("COD_D_H", "COD_D_H")
            tableMapping.ColumnMappings.Add("COD_MONEDA", "COD_MONEDA")
            tableMapping.ColumnMappings.Add("TIPO_CAMBIO", "TIPO_CAMBIO")
            tableMapping.ColumnMappings.Add("COD_CC", "COD_CC")
            tableMapping.ColumnMappings.Add("FECHA_COMP", "FECHA_COMP")
            tableMapping.ColumnMappings.Add("IMP_S_DEBE", "IMP_S_DEBE")
            tableMapping.ColumnMappings.Add("IMP_S_HABER", "IMP_S_HABER")
            tableMapping.ColumnMappings.Add("DESC_PER", "DESC_PER")
            tableMapping.ColumnMappings.Add("IMP_D_DEBE", "IMP_D_DEBE")
            tableMapping.ColumnMappings.Add("IMP_D_HABER", "IMP_D_HABER")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CONTABILIDAD.My.MySettings.Default.BD_COI02
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.REPORTE_CTA_CTA_CTE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_AÑO", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MES1", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MES2", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_CUENTA", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STATUS_PER", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_PER", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_REP_CTA_AUX.REPORTE_CTA_CTA_CTEDataTable, ByVal FE_AÑO As String, ByVal MES1 As String, ByVal MES2 As String, ByVal COD_CUENTA As String, ByVal STATUS_PER As String, ByVal COD_PER As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FE_AÑO,String)
            End If
            If (MES1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(MES1,String)
            End If
            If (MES2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(MES2,String)
            End If
            If (COD_CUENTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(COD_CUENTA,String)
            End If
            If (STATUS_PER Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(STATUS_PER,String)
            End If
            If (COD_PER Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(COD_PER,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FE_AÑO As String, ByVal MES1 As String, ByVal MES2 As String, ByVal COD_CUENTA As String, ByVal STATUS_PER As String, ByVal COD_PER As String) As DT_REP_CTA_AUX.REPORTE_CTA_CTA_CTEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FE_AÑO,String)
            End If
            If (MES1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(MES1,String)
            End If
            If (MES2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(MES2,String)
            End If
            If (COD_CUENTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(COD_CUENTA,String)
            End If
            If (STATUS_PER Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(STATUS_PER,String)
            End If
            If (COD_PER Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(COD_PER,String)
            End If
            Dim dataTable As DT_REP_CTA_AUX.REPORTE_CTA_CTA_CTEDataTable = New DT_REP_CTA_AUX.REPORTE_CTA_CTA_CTEDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REPORTE_CTA_MASKTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REPORTE_CTA_MASK"
            tableMapping.ColumnMappings.Add("FE_AÑO", "FE_AÑO")
            tableMapping.ColumnMappings.Add("FE_MES", "FE_MES")
            tableMapping.ColumnMappings.Add("COD_AUX", "COD_AUX")
            tableMapping.ColumnMappings.Add("COD_COMP", "COD_COMP")
            tableMapping.ColumnMappings.Add("NRO_COMP", "NRO_COMP")
            tableMapping.ColumnMappings.Add("COD_DOC", "COD_DOC")
            tableMapping.ColumnMappings.Add("NRO_DOC", "NRO_DOC")
            tableMapping.ColumnMappings.Add("COD_PER", "COD_PER")
            tableMapping.ColumnMappings.Add("ITEM", "ITEM")
            tableMapping.ColumnMappings.Add("FECHA_DOC", "FECHA_DOC")
            tableMapping.ColumnMappings.Add("NRO_REF", "NRO_REF")
            tableMapping.ColumnMappings.Add("GLOSA", "GLOSA")
            tableMapping.ColumnMappings.Add("COD_CUENTA", "COD_CUENTA")
            tableMapping.ColumnMappings.Add("IMP_S", "IMP_S")
            tableMapping.ColumnMappings.Add("IMP_D", "IMP_D")
            tableMapping.ColumnMappings.Add("COD_D_H", "COD_D_H")
            tableMapping.ColumnMappings.Add("COD_MONEDA", "COD_MONEDA")
            tableMapping.ColumnMappings.Add("TIPO_CAMBIO", "TIPO_CAMBIO")
            tableMapping.ColumnMappings.Add("COD_CC", "COD_CC")
            tableMapping.ColumnMappings.Add("FECHA_COMP", "FECHA_COMP")
            tableMapping.ColumnMappings.Add("IMP_S_DEBE", "IMP_S_DEBE")
            tableMapping.ColumnMappings.Add("IMP_S_HABER", "IMP_S_HABER")
            tableMapping.ColumnMappings.Add("DIA", "DIA")
            tableMapping.ColumnMappings.Add("DESC_CUENTA", "DESC_CUENTA")
            tableMapping.ColumnMappings.Add("COD_REF", "COD_REF")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CONTABILIDAD.My.MySettings.Default.BD_COI02
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.REPORTE_CTA_MASK"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_AÑO", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MES1", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MES2", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MASK", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_AUX", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_COMP", Global.System.Data.SqlDbType.[Char], 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROCESO", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_REP_CTA_AUX.REPORTE_CTA_MASKDataTable, ByVal FE_AÑO As String, ByVal MES1 As String, ByVal MES2 As String, ByVal MASK As String, ByVal COD_AUX As String, ByVal COD_COMP As String, ByVal PROCESO As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FE_AÑO,String)
            End If
            If (MES1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(MES1,String)
            End If
            If (MES2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(MES2,String)
            End If
            If (MASK Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(MASK,String)
            End If
            If (COD_AUX Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(COD_AUX,String)
            End If
            If (COD_COMP Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(COD_COMP,String)
            End If
            If (PROCESO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(PROCESO,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FE_AÑO As String, ByVal MES1 As String, ByVal MES2 As String, ByVal MASK As String, ByVal COD_AUX As String, ByVal COD_COMP As String, ByVal PROCESO As String) As DT_REP_CTA_AUX.REPORTE_CTA_MASKDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FE_AÑO,String)
            End If
            If (MES1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(MES1,String)
            End If
            If (MES2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(MES2,String)
            End If
            If (MASK Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(MASK,String)
            End If
            If (COD_AUX Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(COD_AUX,String)
            End If
            If (COD_COMP Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(COD_COMP,String)
            End If
            If (PROCESO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(PROCESO,String)
            End If
            Dim dataTable As DT_REP_CTA_AUX.REPORTE_CTA_MASKDataTable = New DT_REP_CTA_AUX.REPORTE_CTA_MASKDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REPORTE_CTA_RESUMENTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REPORTE_CTA_RESUMEN"
            tableMapping.ColumnMappings.Add("COD_AUX", "COD_AUX")
            tableMapping.ColumnMappings.Add("ITEM", "ITEM")
            tableMapping.ColumnMappings.Add("FE_AÑO", "FE_AÑO")
            tableMapping.ColumnMappings.Add("FE_MES", "FE_MES")
            tableMapping.ColumnMappings.Add("IMP_D", "IMP_D")
            tableMapping.ColumnMappings.Add("COD_D_H", "COD_D_H")
            tableMapping.ColumnMappings.Add("IMP_S", "IMP_S")
            tableMapping.ColumnMappings.Add("COD_CUENTA", "COD_CUENTA")
            tableMapping.ColumnMappings.Add("DESC_CUENTA", "DESC_CUENTA")
            tableMapping.ColumnMappings.Add("DEBE_SOLES", "DEBE_SOLES")
            tableMapping.ColumnMappings.Add("HABER_SOLES", "HABER_SOLES")
            tableMapping.ColumnMappings.Add("DEBE_DOLARES", "DEBE_DOLARES")
            tableMapping.ColumnMappings.Add("HABER_DOLARES", "HABER_DOLARES")
            tableMapping.ColumnMappings.Add("CTA_GRAL2", "CTA_GRAL2")
            tableMapping.ColumnMappings.Add("CTA_GRAL3", "CTA_GRAL3")
            tableMapping.ColumnMappings.Add("DESC_CUENTA2", "DESC_CUENTA2")
            tableMapping.ColumnMappings.Add("DESC_CUENTA3", "DESC_CUENTA3")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CONTABILIDAD.My.MySettings.Default.BD_COI02
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.REPORTE_CTA_RESUMEN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_AÑO", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_MES", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_AUX", Global.System.Data.SqlDbType.[Char], 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_REP_CTA_AUX.REPORTE_CTA_RESUMENDataTable, ByVal FE_AÑO As String, ByVal FE_MES As String, ByVal COD_AUX As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FE_AÑO,String)
            End If
            If (FE_MES Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FE_MES,String)
            End If
            If (COD_AUX Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(COD_AUX,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FE_AÑO As String, ByVal FE_MES As String, ByVal COD_AUX As String) As DT_REP_CTA_AUX.REPORTE_CTA_RESUMENDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FE_AÑO,String)
            End If
            If (FE_MES Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FE_MES,String)
            End If
            If (COD_AUX Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(COD_AUX,String)
            End If
            Dim dataTable As DT_REP_CTA_AUX.REPORTE_CTA_RESUMENDataTable = New DT_REP_CTA_AUX.REPORTE_CTA_RESUMENDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class REPORTE_CTA_GRALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "REPORTE_CTA_GRAL"
            tableMapping.ColumnMappings.Add("COD_AUX", "COD_AUX")
            tableMapping.ColumnMappings.Add("COD_COMP", "COD_COMP")
            tableMapping.ColumnMappings.Add("NRO_COMP", "NRO_COMP")
            tableMapping.ColumnMappings.Add("FE_AÑO", "FE_AÑO")
            tableMapping.ColumnMappings.Add("FE_MES", "FE_MES")
            tableMapping.ColumnMappings.Add("FECHA_COMP", "FECHA_COMP")
            tableMapping.ColumnMappings.Add("ITEM", "ITEM")
            tableMapping.ColumnMappings.Add("COD_DOC", "COD_DOC")
            tableMapping.ColumnMappings.Add("NRO_DOC", "NRO_DOC")
            tableMapping.ColumnMappings.Add("COD_PER", "COD_PER")
            tableMapping.ColumnMappings.Add("NRO_DOC_PER", "NRO_DOC_PER")
            tableMapping.ColumnMappings.Add("FECHA_DOC", "FECHA_DOC")
            tableMapping.ColumnMappings.Add("COD_REF", "COD_REF")
            tableMapping.ColumnMappings.Add("NRO_REF", "NRO_REF")
            tableMapping.ColumnMappings.Add("FECHA_REF", "FECHA_REF")
            tableMapping.ColumnMappings.Add("GLOSA", "GLOSA")
            tableMapping.ColumnMappings.Add("COD_CUENTA", "COD_CUENTA")
            tableMapping.ColumnMappings.Add("IMP_S", "IMP_S")
            tableMapping.ColumnMappings.Add("IMP_D", "IMP_D")
            tableMapping.ColumnMappings.Add("COD_D_H", "COD_D_H")
            tableMapping.ColumnMappings.Add("COD_MONEDA", "COD_MONEDA")
            tableMapping.ColumnMappings.Add("TIPO_CAMBIO", "TIPO_CAMBIO")
            tableMapping.ColumnMappings.Add("COD_CC", "COD_CC")
            tableMapping.ColumnMappings.Add("DEBE", "DEBE")
            tableMapping.ColumnMappings.Add("HABER", "HABER")
            tableMapping.ColumnMappings.Add("DIA", "DIA")
            tableMapping.ColumnMappings.Add("Column1", "Column1")
            tableMapping.ColumnMappings.Add("SALDO_INICIAL_DEBE", "SALDO_INICIAL_DEBE")
            tableMapping.ColumnMappings.Add("SALDO_INICIAL_HABER", "SALDO_INICIAL_HABER")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CONTABILIDAD.My.MySettings.Default.BD_COI02
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.REPORTE_CTA_GRAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FE_AÑO", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MES1", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MES2", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COD_CUENTA", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MES_INI", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DT_REP_CTA_AUX.REPORTE_CTA_GRALDataTable, ByVal FE_AÑO As String, ByVal MES1 As String, ByVal MES2 As String, ByVal COD_CUENTA As String, ByVal MES_INI As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FE_AÑO,String)
            End If
            If (MES1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(MES1,String)
            End If
            If (MES2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(MES2,String)
            End If
            If (COD_CUENTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(COD_CUENTA,String)
            End If
            If (MES_INI Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(MES_INI,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FE_AÑO As String, ByVal MES1 As String, ByVal MES2 As String, ByVal COD_CUENTA As String, ByVal MES_INI As String) As DT_REP_CTA_AUX.REPORTE_CTA_GRALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FE_AÑO Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FE_AÑO,String)
            End If
            If (MES1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(MES1,String)
            End If
            If (MES2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(MES2,String)
            End If
            If (COD_CUENTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(COD_CUENTA,String)
            End If
            If (MES_INI Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(MES_INI,String)
            End If
            Dim dataTable As DT_REP_CTA_AUX.REPORTE_CTA_GRALDataTable = New DT_REP_CTA_AUX.REPORTE_CTA_GRALDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
